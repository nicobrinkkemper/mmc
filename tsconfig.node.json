{
  // we will reuse most of our tsconfig.json settings
  "extends": "./tsconfig.json",
  // when we extend a tsconfig.json file, it will merge and override the compilerOptions but not the arrays like lib, rootDirs, etc.
  "compilerOptions": {
    // The very latest ES features
    "target": "es2024",
    "lib": [
      "es2024",
      "dom",
      "dom.iterable",
    ],
    // we want to be able to reference tsconfig.node.json in other tsconfig.json files higher up the directory tree
    "composite": true,
    // in this case we want to emit files, so that we may find them in the dist folder
    "noEmit": false,
    // emit map.d.ts files next to our .d.ts files, allowing vscode to click-through to the source code
    "declarationMap": true,
    // emit map.js files next to our .js files, allowing vscode to click-through to the type definition source code
    "sourceMap": true,
    "typeRoots": [
      // for: node_modules/vite/client
      "./node_modules/@types",
      // for: node_modules/vite/client
      "./node_modules",
      // for global types
      "./types",
      // for global node types
      "./types-node",
    ],
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.mts",
    "src/**/*.json",
    "src/**/*.css",
    "src/**/*.module.css",
    "startup/**/*.ts",
    "startup/**/*.tsx",
    "startup/**/*.mts",
    "startup/**/*.ts",
    "startup/**/*.tsx",
    "startup/**/*.json",
    "startup/**/*.css",
    "startup/**/*.module.css",
    "server/**/*.ts",
    "server/**/*.tsx",
    "server/**/*.mts",
    "server/**/*.css",
    "server/**/*.module.css",
    "build/meta.json",
    "build/manifest.json",
    "build/assets/*",
    "types-node/modules.d.ts",
    "types/**/*.d.ts",
    "types-node/**/*.d.ts",
    "types-node/types.d.mts",
  ],
  "exclude": [
    "dist",
    "tsconfig.json",
    "tsconfig.node.json",
    "package.json",
    "**/*.test.ts",
    "**/*.test.tsx",
    "**/*.test.mts",
    "**/*.test.mtsx"
  ]
}
