diff --git a/node_modules/react-dom/cjs/react-dom-client.development.js b/node_modules/react-dom/cjs/react-dom-client.development.js
index 87cee84..beee269 100644
--- a/node_modules/react-dom/cjs/react-dom-client.development.js
+++ b/node_modules/react-dom/cjs/react-dom-client.development.js
@@ -1028,11 +1028,6 @@
       console.error("Invalid attribute name: `%s`", attributeName);
       return !1;
     }
-    function pushMutationContext() {
-      var prev = viewTransitionMutationContext;
-      viewTransitionMutationContext = !1;
-      return prev;
-    }
     function getValueForAttributeOnCustomComponent(node, name, expected) {
       if (isAttributeNameSafe(name)) {
         if (!node.hasAttribute(name)) {
@@ -3493,7 +3488,7 @@
         )),
         dispatchQueue.push({ event: nativeEvent, listeners: inst }));
     }
-    function runEventInBatch$1(dispatchQueue) {
+    function runEventInBatch(dispatchQueue) {
       processDispatchQueue(dispatchQueue, 0);
     }
     function getInstIfValueChanged(targetInst) {
@@ -3520,7 +3515,7 @@
           nativeEvent,
           getEventTarget(nativeEvent)
         );
-        batchedUpdates$1(runEventInBatch$1, dispatchQueue);
+        batchedUpdates$1(runEventInBatch, dispatchQueue);
       }
     }
     function handleEventsForInputEventPolyfill(
@@ -9537,33 +9532,33 @@
       return current;
     }
     function updateSuspenseComponent(current, workInProgress, renderLanes) {
-      var JSCompiler_object_inline_componentStack_2757;
-      var JSCompiler_object_inline_stack_2756 = workInProgress.pendingProps;
+      var JSCompiler_object_inline_componentStack_2625;
+      var JSCompiler_object_inline_stack_2624 = workInProgress.pendingProps;
       shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
-      var JSCompiler_object_inline_message_2754 = !1;
+      var JSCompiler_object_inline_message_2622 = !1;
       var didSuspend = 0 !== (workInProgress.flags & 128);
-      (JSCompiler_object_inline_componentStack_2757 = didSuspend) ||
-        (JSCompiler_object_inline_componentStack_2757 =
+      (JSCompiler_object_inline_componentStack_2625 = didSuspend) ||
+        (JSCompiler_object_inline_componentStack_2625 =
           null !== current && null === current.memoizedState
             ? !1
             : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
-      JSCompiler_object_inline_componentStack_2757 &&
-        ((JSCompiler_object_inline_message_2754 = !0),
+      JSCompiler_object_inline_componentStack_2625 &&
+        ((JSCompiler_object_inline_message_2622 = !0),
         (workInProgress.flags &= -129));
-      JSCompiler_object_inline_componentStack_2757 =
+      JSCompiler_object_inline_componentStack_2625 =
         0 !== (workInProgress.flags & 32);
       workInProgress.flags &= -33;
       if (null === current) {
         if (isHydrating) {
-          JSCompiler_object_inline_message_2754
+          JSCompiler_object_inline_message_2622
             ? pushPrimaryTreeSuspenseHandler(workInProgress)
             : reuseSuspenseHandlerOnStack(workInProgress);
           if (isHydrating) {
-            var JSCompiler_object_inline_digest_2755 = nextHydratableInstance;
+            var JSCompiler_object_inline_digest_2623 = nextHydratableInstance;
             var JSCompiler_temp;
-            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2755)) {
+            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2623)) {
               c: {
-                var instance = JSCompiler_object_inline_digest_2755;
+                var instance = JSCompiler_object_inline_digest_2623;
                 for (
                   JSCompiler_temp = rootOrSingletonContext;
                   8 !== instance.nodeType;
@@ -9605,87 +9600,87 @@
             JSCompiler_temp &&
               (warnNonHydratedInstance(
                 workInProgress,
-                JSCompiler_object_inline_digest_2755
+                JSCompiler_object_inline_digest_2623
               ),
               throwOnHydrationMismatch(workInProgress));
           }
-          JSCompiler_object_inline_digest_2755 = workInProgress.memoizedState;
+          JSCompiler_object_inline_digest_2623 = workInProgress.memoizedState;
           if (
-            null !== JSCompiler_object_inline_digest_2755 &&
-            ((JSCompiler_object_inline_digest_2755 =
-              JSCompiler_object_inline_digest_2755.dehydrated),
-            null !== JSCompiler_object_inline_digest_2755)
+            null !== JSCompiler_object_inline_digest_2623 &&
+            ((JSCompiler_object_inline_digest_2623 =
+              JSCompiler_object_inline_digest_2623.dehydrated),
+            null !== JSCompiler_object_inline_digest_2623)
           )
             return (
-              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2755)
+              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2623)
                 ? (workInProgress.lanes = 32)
                 : (workInProgress.lanes = 536870912),
               null
             );
           popSuspenseHandler(workInProgress);
         }
-        JSCompiler_object_inline_digest_2755 =
-          JSCompiler_object_inline_stack_2756.children;
-        JSCompiler_temp = JSCompiler_object_inline_stack_2756.fallback;
-        if (JSCompiler_object_inline_message_2754)
+        JSCompiler_object_inline_digest_2623 =
+          JSCompiler_object_inline_stack_2624.children;
+        JSCompiler_temp = JSCompiler_object_inline_stack_2624.fallback;
+        if (JSCompiler_object_inline_message_2622)
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2756 =
+            (JSCompiler_object_inline_stack_2624 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2755,
+                JSCompiler_object_inline_digest_2623,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2754 = workInProgress.child),
-            (JSCompiler_object_inline_message_2754.memoizedState =
+            (JSCompiler_object_inline_message_2622 = workInProgress.child),
+            (JSCompiler_object_inline_message_2622.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2754.childLanes =
+            (JSCompiler_object_inline_message_2622.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2757,
+                JSCompiler_object_inline_componentStack_2625,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
-            JSCompiler_object_inline_stack_2756
+            JSCompiler_object_inline_stack_2624
           );
         if (
           "number" ===
-          typeof JSCompiler_object_inline_stack_2756.unstable_expectedLoadTime
+          typeof JSCompiler_object_inline_stack_2624.unstable_expectedLoadTime
         )
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2756 =
+            (JSCompiler_object_inline_stack_2624 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2755,
+                JSCompiler_object_inline_digest_2623,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2754 = workInProgress.child),
-            (JSCompiler_object_inline_message_2754.memoizedState =
+            (JSCompiler_object_inline_message_2622 = workInProgress.child),
+            (JSCompiler_object_inline_message_2622.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2754.childLanes =
+            (JSCompiler_object_inline_message_2622.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2757,
+                JSCompiler_object_inline_componentStack_2625,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
             (workInProgress.lanes = 4194304),
-            JSCompiler_object_inline_stack_2756
+            JSCompiler_object_inline_stack_2624
           );
         pushPrimaryTreeSuspenseHandler(workInProgress);
         return mountSuspensePrimaryChildren(
           workInProgress,
-          JSCompiler_object_inline_digest_2755
+          JSCompiler_object_inline_digest_2623
         );
       }
       var prevState = current.memoizedState;
       if (
         null !== prevState &&
-        ((JSCompiler_object_inline_digest_2755 = prevState.dehydrated),
-        null !== JSCompiler_object_inline_digest_2755)
+        ((JSCompiler_object_inline_digest_2623 = prevState.dehydrated),
+        null !== JSCompiler_object_inline_digest_2623)
       ) {
         if (didSuspend)
           workInProgress.flags & 256
@@ -9702,94 +9697,94 @@
                 (workInProgress.flags |= 128),
                 (workInProgress = null))
               : (reuseSuspenseHandlerOnStack(workInProgress),
-                (JSCompiler_object_inline_message_2754 =
-                  JSCompiler_object_inline_stack_2756.fallback),
-                (JSCompiler_object_inline_digest_2755 = workInProgress.mode),
-                (JSCompiler_object_inline_stack_2756 =
+                (JSCompiler_object_inline_message_2622 =
+                  JSCompiler_object_inline_stack_2624.fallback),
+                (JSCompiler_object_inline_digest_2623 = workInProgress.mode),
+                (JSCompiler_object_inline_stack_2624 =
                   mountWorkInProgressOffscreenFiber(
                     {
                       mode: "visible",
-                      children: JSCompiler_object_inline_stack_2756.children
+                      children: JSCompiler_object_inline_stack_2624.children
                     },
-                    JSCompiler_object_inline_digest_2755
+                    JSCompiler_object_inline_digest_2623
                   )),
-                (JSCompiler_object_inline_message_2754 =
+                (JSCompiler_object_inline_message_2622 =
                   createFiberFromFragment(
-                    JSCompiler_object_inline_message_2754,
-                    JSCompiler_object_inline_digest_2755,
+                    JSCompiler_object_inline_message_2622,
+                    JSCompiler_object_inline_digest_2623,
                     renderLanes,
                     null
                   )),
-                (JSCompiler_object_inline_message_2754.flags |= 2),
-                (JSCompiler_object_inline_stack_2756.return = workInProgress),
-                (JSCompiler_object_inline_message_2754.return = workInProgress),
-                (JSCompiler_object_inline_stack_2756.sibling =
-                  JSCompiler_object_inline_message_2754),
-                (workInProgress.child = JSCompiler_object_inline_stack_2756),
+                (JSCompiler_object_inline_message_2622.flags |= 2),
+                (JSCompiler_object_inline_stack_2624.return = workInProgress),
+                (JSCompiler_object_inline_message_2622.return = workInProgress),
+                (JSCompiler_object_inline_stack_2624.sibling =
+                  JSCompiler_object_inline_message_2622),
+                (workInProgress.child = JSCompiler_object_inline_stack_2624),
                 reconcileChildFibers(
                   workInProgress,
                   current.child,
                   null,
                   renderLanes
                 ),
-                (JSCompiler_object_inline_stack_2756 = workInProgress.child),
-                (JSCompiler_object_inline_stack_2756.memoizedState =
+                (JSCompiler_object_inline_stack_2624 = workInProgress.child),
+                (JSCompiler_object_inline_stack_2624.memoizedState =
                   mountSuspenseOffscreenState(renderLanes)),
-                (JSCompiler_object_inline_stack_2756.childLanes =
+                (JSCompiler_object_inline_stack_2624.childLanes =
                   getRemainingWorkInPrimaryTree(
                     current,
-                    JSCompiler_object_inline_componentStack_2757,
+                    JSCompiler_object_inline_componentStack_2625,
                     renderLanes
                   )),
                 (workInProgress.memoizedState = SUSPENDED_MARKER),
-                (workInProgress = JSCompiler_object_inline_message_2754));
+                (workInProgress = JSCompiler_object_inline_message_2622));
         else if (
           (pushPrimaryTreeSuspenseHandler(workInProgress),
           isHydrating &&
             console.error(
               "We should not be hydrating here. This is a bug in React. Please file a bug."
             ),
-          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2755))
+          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2623))
         ) {
-          JSCompiler_object_inline_componentStack_2757 =
-            JSCompiler_object_inline_digest_2755.nextSibling &&
-            JSCompiler_object_inline_digest_2755.nextSibling.dataset;
-          if (JSCompiler_object_inline_componentStack_2757) {
-            JSCompiler_temp = JSCompiler_object_inline_componentStack_2757.dgst;
-            var message = JSCompiler_object_inline_componentStack_2757.msg;
-            instance = JSCompiler_object_inline_componentStack_2757.stck;
+          JSCompiler_object_inline_componentStack_2625 =
+            JSCompiler_object_inline_digest_2623.nextSibling &&
+            JSCompiler_object_inline_digest_2623.nextSibling.dataset;
+          if (JSCompiler_object_inline_componentStack_2625) {
+            JSCompiler_temp = JSCompiler_object_inline_componentStack_2625.dgst;
+            var message = JSCompiler_object_inline_componentStack_2625.msg;
+            instance = JSCompiler_object_inline_componentStack_2625.stck;
             var componentStack =
-              JSCompiler_object_inline_componentStack_2757.cstck;
+              JSCompiler_object_inline_componentStack_2625.cstck;
           }
-          JSCompiler_object_inline_message_2754 = message;
-          JSCompiler_object_inline_digest_2755 = JSCompiler_temp;
-          JSCompiler_object_inline_stack_2756 = instance;
-          JSCompiler_temp = JSCompiler_object_inline_componentStack_2757 =
+          JSCompiler_object_inline_message_2622 = message;
+          JSCompiler_object_inline_digest_2623 = JSCompiler_temp;
+          JSCompiler_object_inline_stack_2624 = instance;
+          JSCompiler_temp = JSCompiler_object_inline_componentStack_2625 =
             componentStack;
-          "POSTPONE" !== JSCompiler_object_inline_digest_2755 &&
-            ((JSCompiler_object_inline_componentStack_2757 =
-              JSCompiler_object_inline_message_2754
-                ? Error(JSCompiler_object_inline_message_2754)
+          "POSTPONE" !== JSCompiler_object_inline_digest_2623 &&
+            ((JSCompiler_object_inline_componentStack_2625 =
+              JSCompiler_object_inline_message_2622
+                ? Error(JSCompiler_object_inline_message_2622)
                 : Error(
                     "The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."
                   )),
-            (JSCompiler_object_inline_componentStack_2757.stack =
-              JSCompiler_object_inline_stack_2756 || ""),
-            (JSCompiler_object_inline_componentStack_2757.digest =
-              JSCompiler_object_inline_digest_2755),
-            (JSCompiler_object_inline_stack_2756 =
+            (JSCompiler_object_inline_componentStack_2625.stack =
+              JSCompiler_object_inline_stack_2624 || ""),
+            (JSCompiler_object_inline_componentStack_2625.digest =
+              JSCompiler_object_inline_digest_2623),
+            (JSCompiler_object_inline_stack_2624 =
               void 0 === JSCompiler_temp ? null : JSCompiler_temp),
-            (JSCompiler_object_inline_message_2754 = {
-              value: JSCompiler_object_inline_componentStack_2757,
+            (JSCompiler_object_inline_message_2622 = {
+              value: JSCompiler_object_inline_componentStack_2625,
               source: null,
-              stack: JSCompiler_object_inline_stack_2756
+              stack: JSCompiler_object_inline_stack_2624
             }),
-            "string" === typeof JSCompiler_object_inline_stack_2756 &&
+            "string" === typeof JSCompiler_object_inline_stack_2624 &&
               CapturedStacks.set(
-                JSCompiler_object_inline_componentStack_2757,
-                JSCompiler_object_inline_message_2754
+                JSCompiler_object_inline_componentStack_2625,
+                JSCompiler_object_inline_message_2622
               ),
-            queueHydrationError(JSCompiler_object_inline_message_2754));
+            queueHydrationError(JSCompiler_object_inline_message_2622));
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
             workInProgress,
@@ -9803,44 +9798,44 @@
               renderLanes,
               !1
             ),
-          (JSCompiler_object_inline_componentStack_2757 =
+          (JSCompiler_object_inline_componentStack_2625 =
             0 !== (renderLanes & current.childLanes)),
-          didReceiveUpdate || JSCompiler_object_inline_componentStack_2757)
+          didReceiveUpdate || JSCompiler_object_inline_componentStack_2625)
         ) {
-          JSCompiler_object_inline_componentStack_2757 = workInProgressRoot;
+          JSCompiler_object_inline_componentStack_2625 = workInProgressRoot;
           if (
-            null !== JSCompiler_object_inline_componentStack_2757 &&
-            ((JSCompiler_object_inline_stack_2756 = renderLanes & -renderLanes),
-            (JSCompiler_object_inline_stack_2756 =
-              0 !== (JSCompiler_object_inline_stack_2756 & 42)
+            null !== JSCompiler_object_inline_componentStack_2625 &&
+            ((JSCompiler_object_inline_stack_2624 = renderLanes & -renderLanes),
+            (JSCompiler_object_inline_stack_2624 =
+              0 !== (JSCompiler_object_inline_stack_2624 & 42)
                 ? 1
                 : getBumpedLaneForHydrationByLane(
-                    JSCompiler_object_inline_stack_2756
+                    JSCompiler_object_inline_stack_2624
                   )),
-            (JSCompiler_object_inline_stack_2756 =
+            (JSCompiler_object_inline_stack_2624 =
               0 !==
-              (JSCompiler_object_inline_stack_2756 &
-                (JSCompiler_object_inline_componentStack_2757.suspendedLanes |
+              (JSCompiler_object_inline_stack_2624 &
+                (JSCompiler_object_inline_componentStack_2625.suspendedLanes |
                   renderLanes))
                 ? 0
-                : JSCompiler_object_inline_stack_2756),
-            0 !== JSCompiler_object_inline_stack_2756 &&
-              JSCompiler_object_inline_stack_2756 !== prevState.retryLane)
+                : JSCompiler_object_inline_stack_2624),
+            0 !== JSCompiler_object_inline_stack_2624 &&
+              JSCompiler_object_inline_stack_2624 !== prevState.retryLane)
           )
             throw (
-              ((prevState.retryLane = JSCompiler_object_inline_stack_2756),
+              ((prevState.retryLane = JSCompiler_object_inline_stack_2624),
               enqueueConcurrentRenderForLane(
                 current,
-                JSCompiler_object_inline_stack_2756
+                JSCompiler_object_inline_stack_2624
               ),
               scheduleUpdateOnFiber(
-                JSCompiler_object_inline_componentStack_2757,
+                JSCompiler_object_inline_componentStack_2625,
                 current,
-                JSCompiler_object_inline_stack_2756
+                JSCompiler_object_inline_stack_2624
               ),
               SelectiveHydrationException)
             );
-          JSCompiler_object_inline_digest_2755.data ===
+          JSCompiler_object_inline_digest_2623.data ===
             SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
@@ -9848,14 +9843,14 @@
             renderLanes
           );
         } else
-          JSCompiler_object_inline_digest_2755.data ===
+          JSCompiler_object_inline_digest_2623.data ===
           SUSPENSE_PENDING_START_DATA
             ? ((workInProgress.flags |= 192),
               (workInProgress.child = current.child),
               (workInProgress = null))
             : ((current = prevState.treeContext),
               (nextHydratableInstance = getNextHydratable(
-                JSCompiler_object_inline_digest_2755.nextSibling
+                JSCompiler_object_inline_digest_2623.nextSibling
               )),
               (hydrationParentFiber = workInProgress),
               (isHydrating = !0),
@@ -9873,54 +9868,54 @@
                 (treeContextProvider = workInProgress)),
               (workInProgress = mountSuspensePrimaryChildren(
                 workInProgress,
-                JSCompiler_object_inline_stack_2756.children
+                JSCompiler_object_inline_stack_2624.children
               )),
               (workInProgress.flags |= 4096));
         return workInProgress;
       }
-      if (JSCompiler_object_inline_message_2754)
+      if (JSCompiler_object_inline_message_2622)
         return (
           reuseSuspenseHandlerOnStack(workInProgress),
-          (JSCompiler_object_inline_message_2754 =
-            JSCompiler_object_inline_stack_2756.fallback),
-          (JSCompiler_object_inline_digest_2755 = workInProgress.mode),
+          (JSCompiler_object_inline_message_2622 =
+            JSCompiler_object_inline_stack_2624.fallback),
+          (JSCompiler_object_inline_digest_2623 = workInProgress.mode),
           (JSCompiler_temp = current.child),
           (instance = JSCompiler_temp.sibling),
-          (JSCompiler_object_inline_stack_2756 = createWorkInProgress(
+          (JSCompiler_object_inline_stack_2624 = createWorkInProgress(
             JSCompiler_temp,
             {
               mode: "hidden",
-              children: JSCompiler_object_inline_stack_2756.children
+              children: JSCompiler_object_inline_stack_2624.children
             }
           )),
-          (JSCompiler_object_inline_stack_2756.subtreeFlags =
+          (JSCompiler_object_inline_stack_2624.subtreeFlags =
             JSCompiler_temp.subtreeFlags & 65011712),
           null !== instance
-            ? (JSCompiler_object_inline_message_2754 = createWorkInProgress(
+            ? (JSCompiler_object_inline_message_2622 = createWorkInProgress(
                 instance,
-                JSCompiler_object_inline_message_2754
+                JSCompiler_object_inline_message_2622
               ))
-            : ((JSCompiler_object_inline_message_2754 = createFiberFromFragment(
-                JSCompiler_object_inline_message_2754,
-                JSCompiler_object_inline_digest_2755,
+            : ((JSCompiler_object_inline_message_2622 = createFiberFromFragment(
+                JSCompiler_object_inline_message_2622,
+                JSCompiler_object_inline_digest_2623,
                 renderLanes,
                 null
               )),
-              (JSCompiler_object_inline_message_2754.flags |= 2)),
-          (JSCompiler_object_inline_message_2754.return = workInProgress),
-          (JSCompiler_object_inline_stack_2756.return = workInProgress),
-          (JSCompiler_object_inline_stack_2756.sibling =
-            JSCompiler_object_inline_message_2754),
-          (workInProgress.child = JSCompiler_object_inline_stack_2756),
-          (JSCompiler_object_inline_stack_2756 =
-            JSCompiler_object_inline_message_2754),
-          (JSCompiler_object_inline_message_2754 = workInProgress.child),
-          (JSCompiler_object_inline_digest_2755 = current.child.memoizedState),
-          null === JSCompiler_object_inline_digest_2755
-            ? (JSCompiler_object_inline_digest_2755 =
+              (JSCompiler_object_inline_message_2622.flags |= 2)),
+          (JSCompiler_object_inline_message_2622.return = workInProgress),
+          (JSCompiler_object_inline_stack_2624.return = workInProgress),
+          (JSCompiler_object_inline_stack_2624.sibling =
+            JSCompiler_object_inline_message_2622),
+          (workInProgress.child = JSCompiler_object_inline_stack_2624),
+          (JSCompiler_object_inline_stack_2624 =
+            JSCompiler_object_inline_message_2622),
+          (JSCompiler_object_inline_message_2622 = workInProgress.child),
+          (JSCompiler_object_inline_digest_2623 = current.child.memoizedState),
+          null === JSCompiler_object_inline_digest_2623
+            ? (JSCompiler_object_inline_digest_2623 =
                 mountSuspenseOffscreenState(renderLanes))
             : ((JSCompiler_temp =
-                JSCompiler_object_inline_digest_2755.cachePool),
+                JSCompiler_object_inline_digest_2623.cachePool),
               null !== JSCompiler_temp
                 ? ((instance = CacheContext._currentValue),
                   (JSCompiler_temp =
@@ -9928,38 +9923,38 @@
                       ? { parent: instance, pool: instance }
                       : JSCompiler_temp))
                 : (JSCompiler_temp = getSuspendedCache()),
-              (JSCompiler_object_inline_digest_2755 = {
+              (JSCompiler_object_inline_digest_2623 = {
                 baseLanes:
-                  JSCompiler_object_inline_digest_2755.baseLanes | renderLanes,
+                  JSCompiler_object_inline_digest_2623.baseLanes | renderLanes,
                 cachePool: JSCompiler_temp
               })),
-          (JSCompiler_object_inline_message_2754.memoizedState =
-            JSCompiler_object_inline_digest_2755),
-          (JSCompiler_object_inline_message_2754.childLanes =
+          (JSCompiler_object_inline_message_2622.memoizedState =
+            JSCompiler_object_inline_digest_2623),
+          (JSCompiler_object_inline_message_2622.childLanes =
             getRemainingWorkInPrimaryTree(
               current,
-              JSCompiler_object_inline_componentStack_2757,
+              JSCompiler_object_inline_componentStack_2625,
               renderLanes
             )),
           (workInProgress.memoizedState = SUSPENDED_MARKER),
-          JSCompiler_object_inline_stack_2756
+          JSCompiler_object_inline_stack_2624
         );
       pushPrimaryTreeSuspenseHandler(workInProgress);
       renderLanes = current.child;
       current = renderLanes.sibling;
       renderLanes = createWorkInProgress(renderLanes, {
         mode: "visible",
-        children: JSCompiler_object_inline_stack_2756.children
+        children: JSCompiler_object_inline_stack_2624.children
       });
       renderLanes.return = workInProgress;
       renderLanes.sibling = null;
       null !== current &&
-        ((JSCompiler_object_inline_componentStack_2757 =
+        ((JSCompiler_object_inline_componentStack_2625 =
           workInProgress.deletions),
-        null === JSCompiler_object_inline_componentStack_2757
+        null === JSCompiler_object_inline_componentStack_2625
           ? ((workInProgress.deletions = [current]),
             (workInProgress.flags |= 16))
-          : JSCompiler_object_inline_componentStack_2757.push(current));
+          : JSCompiler_object_inline_componentStack_2625.push(current));
       workInProgress.child = renderLanes;
       workInProgress.memoizedState = null;
       return renderLanes;
@@ -12122,7 +12117,7 @@
         focusedElem: root,
         selectionRange: JSCompiler_temp
       };
-      _enabled = !1;
+      shouldStartViewTransition = _enabled = !1;
       committedLanes = (committedLanes & 335544064) === committedLanes;
       nextEffect = firstChild;
       for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
@@ -13275,7 +13270,8 @@
             (offscreenSubtreeWasHidden ||
               null === current ||
               safelyDetachRef(current, current.return));
-          flags = pushMutationContext();
+          flags = viewTransitionMutationContext;
+          viewTransitionMutationContext = !1;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
           (lanes & 335544064) === lanes &&
@@ -13361,30 +13357,7 @@
                       }
                     );
                 }
-              finishedWork = root.containerInfo;
-              finishedWork =
-                9 === finishedWork.nodeType
-                  ? finishedWork.documentElement
-                  : finishedWork.ownerDocument.documentElement;
-              null !== finishedWork &&
-                "" === finishedWork.style.viewTransitionName &&
-                ((finishedWork.style.viewTransitionName = "none"),
-                finishedWork.animate(
-                  { opacity: [0, 0], pointerEvents: ["none", "none"] },
-                  {
-                    duration: 0,
-                    fill: "forwards",
-                    pseudoElement: "::view-transition-group(root)"
-                  }
-                ),
-                finishedWork.animate(
-                  { width: [0, 0], height: [0, 0] },
-                  {
-                    duration: 0,
-                    fill: "forwards",
-                    pseudoElement: "::view-transition"
-                  }
-                ));
+              cancelRootViewTransitionName(root.containerInfo);
             }
             break;
           case 5:
@@ -14991,8 +14964,7 @@
           null != props.onScroll &&
             listenToNonDelegatedEvent("scroll", didHydrate),
           null != props.onScrollEnd &&
-            (listenToNonDelegatedEvent("scrollend", didHydrate),
-            listenToNonDelegatedEvent("scroll", didHydrate)),
+            listenToNonDelegatedEvent("scrollend", didHydrate),
           null != props.onClick && (didHydrate.onclick = noop$1),
           (didHydrate = !0))
         : (didHydrate = !1);
@@ -15086,18 +15058,14 @@
     }
     function emitPendingHydrationWarnings() {
       var diffRoot = hydrationDiffRootDEV;
-      if (null !== diffRoot) {
-        hydrationDiffRootDEV = null;
-        for (var diff = describeDiff(diffRoot); 0 < diffRoot.children.length; )
-          diffRoot = diffRoot.children[0];
-        runWithFiberInDEV(diffRoot.fiber, function () {
-          console.error(
-            "A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s",
-            "https://react.dev/link/hydration-mismatch",
-            diff
-          );
-        });
-      }
+      null !== diffRoot &&
+        ((hydrationDiffRootDEV = null),
+        (diffRoot = describeDiff(diffRoot)),
+        console.error(
+          "A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s",
+          "https://react.dev/link/hydration-mismatch",
+          diffRoot
+        ));
     }
     function getViewTransitionName(props, instance) {
       return null != props.name && "auto" !== props.name
@@ -15926,173 +15894,6 @@
           popProvider(CacheContext, interruptedWork);
       }
     }
-    function recursivelyInsertClonesFromExistingTree(
-      parentFiber,
-      hostParentClone
-    ) {
-      for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-        switch (parentFiber.tag) {
-          case 5:
-            var clone = parentFiber.stateNode.cloneNode(!0);
-            hostParentClone.appendChild(clone);
-            unhideHostChildren &&
-              unhideInstance(clone, parentFiber.memoizedProps);
-            break;
-          case 6:
-            clone = parentFiber.stateNode;
-            if (null === clone)
-              throw Error(
-                "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
-              );
-            clone = clone.cloneNode(!1);
-            hostParentClone.appendChild(clone);
-            unhideHostChildren && (clone.nodeValue = parentFiber.memoizedProps);
-            break;
-          case 4:
-            break;
-          case 22:
-            null === parentFiber.memoizedState &&
-              recursivelyInsertClonesFromExistingTree(
-                parentFiber,
-                hostParentClone
-              );
-            break;
-          case 30:
-            clone = pushMutationContext();
-            recursivelyInsertClonesFromExistingTree(
-              parentFiber,
-              hostParentClone
-            );
-            viewTransitionMutationContext = clone;
-            break;
-          default:
-            recursivelyInsertClonesFromExistingTree(
-              parentFiber,
-              hostParentClone
-            );
-        }
-        parentFiber = parentFiber.sibling;
-      }
-    }
-    function recursivelyInsertClones(parentFiber, hostParentClone$jscomp$0) {
-      if (
-        null === parentFiber.alternate ||
-        0 !== (parentFiber.subtreeFlags & 13878)
-      )
-        for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-          var finishedWork = parentFiber,
-            hostParentClone = hostParentClone$jscomp$0,
-            current = finishedWork.alternate,
-            flags = finishedWork.flags;
-          switch (finishedWork.tag) {
-            case 26:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              break;
-            case 27:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              if (flags & 4)
-                if (null === current)
-                  console.error(
-                    "useSwipeTransition() caused something to render a new <%s>. This is not possible in the current implementation. Make sure that the swipe doesn't mount any new <%s> elements.",
-                    finishedWork.type,
-                    finishedWork.type
-                  );
-                else {
-                  hostParentClone = finishedWork.memoizedProps;
-                  current = current.memoizedProps;
-                  flags = finishedWork.stateNode;
-                  var clone = finishedWork.type;
-                  var prev = pushMutationContext();
-                  try {
-                    commitUpdate(
-                      flags,
-                      clone,
-                      current,
-                      hostParentClone,
-                      finishedWork
-                    ),
-                      viewTransitionMutationContext &&
-                        console.error(
-                          "useSwipeTransition() caused something to mutate <%s>. This is not possible in the current implementation. Make sure that the swipe doesn't update any state which causes <%s> to change.",
-                          finishedWork.type,
-                          finishedWork.type
-                        ),
-                      commitUpdate(
-                        flags,
-                        clone,
-                        hostParentClone,
-                        current,
-                        finishedWork
-                      );
-                  } finally {
-                    viewTransitionMutationContext = prev;
-                  }
-                }
-              break;
-            case 5:
-              clone = finishedWork.stateNode;
-              null === current
-                ? hostParentClone.appendChild(clone)
-                : (null === finishedWork.child
-                    ? ((clone = clone.cloneNode(!0)),
-                      finishedWork.flags & 32 && resetTextContent(clone))
-                    : (clone = clone.cloneNode(!1)),
-                  flags & 4 &&
-                    commitUpdate(
-                      clone,
-                      finishedWork.type,
-                      current.memoizedProps,
-                      finishedWork.memoizedProps
-                    ),
-                  unhideHostChildren
-                    ? ((unhideHostChildren = !1),
-                      recursivelyInsertClones(finishedWork, clone),
-                      hostParentClone.appendChild(clone),
-                      (unhideHostChildren = !0),
-                      unhideInstance(clone, finishedWork.memoizedProps))
-                    : (recursivelyInsertClones(finishedWork, clone),
-                      hostParentClone.appendChild(clone)));
-              break;
-            case 6:
-              clone = finishedWork.stateNode;
-              if (null === clone)
-                throw Error(
-                  "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
-                );
-              null === current
-                ? hostParentClone.appendChild(clone)
-                : ((clone = clone.cloneNode(!1)),
-                  flags & 4 && (clone.nodeValue = current.memoizedProps),
-                  hostParentClone.appendChild(clone),
-                  unhideHostChildren &&
-                    (clone.nodeValue = finishedWork.memoizedProps));
-              break;
-            case 4:
-              break;
-            case 22:
-              null === finishedWork.memoizedState &&
-                ((unhideHostChildren =
-                  (current = unhideHostChildren) || 0 !== (flags & 8192)),
-                recursivelyInsertClones(finishedWork, hostParentClone),
-                (unhideHostChildren = current));
-              break;
-            case 30:
-              current = pushMutationContext();
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              viewTransitionMutationContext && (finishedWork.flags |= 4);
-              viewTransitionMutationContext = current;
-              break;
-            default:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-          }
-          parentFiber = parentFiber.sibling;
-        }
-      else
-        recursivelyInsertClonesFromExistingTree(
-          parentFiber,
-          hostParentClone$jscomp$0
-        );
-    }
     function onCommitRoot() {
       commitHooks.forEach(function (commitHook) {
         return commitHook();
@@ -17439,7 +17240,6 @@
             ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
             : suspendedCommitReason === THROTTLED_COMMIT &&
               logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-          shouldStartViewTransition = !1;
           suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
           if (
             0 !== (finishedWork.subtreeFlags & 13878) ||
@@ -17789,158 +17589,22 @@
         flushSyncWorkAcrossRoots_impl(0, !1);
       }
     }
-    function commitGestureOnRoot(root, finishedWork) {
+    function commitGestureOnRoot(root) {
       var finishedGesture = root.pendingGestures;
       if (null === finishedGesture) ensureRootIsScheduled(root);
       else {
         deleteScheduledGesture(root, finishedGesture);
-        var prevTransition = ReactSharedInternals.T;
-        ReactSharedInternals.T = null;
-        var previousPriority = ReactDOMSharedInternals.p;
-        ReactDOMSharedInternals.p = DiscreteEventPriority;
-        var prevExecutionContext = executionContext;
+        var prevTransition = ReactSharedInternals.T,
+          previousPriority = ReactDOMSharedInternals.p,
+          prevExecutionContext = executionContext;
         executionContext |= CommitContext;
-        try {
-          unhideHostChildren = !1;
-          didWarnForRootClone ||
-            ((didWarnForRootClone = !0),
-            console.warn(
-              "useSwipeTransition() caused something to mutate or relayout the root. This currently requires a clone of the whole document. Make sure to add a <ViewTransition> directly around an absolutely positioned DOM node to minimize the impact of any changes caused by the Swipe Transition."
-            ));
-          var rootContainer = root.containerInfo,
-            documentElement =
-              9 === rootContainer.nodeType
-                ? rootContainer.documentElement
-                : rootContainer.ownerDocument.documentElement;
-          null !== documentElement &&
-            "" === documentElement.style.viewTransitionName &&
-            (documentElement.style.viewTransitionName = "none");
-          var containerInstance =
-            9 === rootContainer.nodeType
-              ? rootContainer.body
-              : "HTML" === rootContainer.nodeName
-                ? rootContainer.ownerDocument.body
-                : rootContainer;
-          var containerParent = containerInstance.parentNode;
-          if (null === containerParent)
-            throw Error(
-              "Cannot use a useSwipeTransition() in a detached root."
-            );
-          var clone = containerInstance.cloneNode(!1),
-            computedStyle = getComputedStyle(containerInstance);
-          if (
-            "absolute" !== computedStyle.position &&
-            "fixed" !== computedStyle.position
-          ) {
-            for (
-              rootContainer = containerParent;
-              null != rootContainer.parentNode &&
-              9 !== rootContainer.parentNode.nodeType &&
-              "static" === getComputedStyle(rootContainer).position;
-
-            )
-              rootContainer = rootContainer.parentNode;
-            var positionedAncestorStyle = rootContainer.style,
-              containerInstanceStyle = containerInstance.style,
-              prevAncestorTranslate = positionedAncestorStyle.translate,
-              prevAncestorScale = positionedAncestorStyle.scale,
-              prevAncestorRotate = positionedAncestorStyle.rotate,
-              prevAncestorTransform = positionedAncestorStyle.transform,
-              prevTranslate = containerInstanceStyle.translate,
-              prevScale = containerInstanceStyle.scale,
-              prevRotate = containerInstanceStyle.rotate,
-              prevTransform = containerInstanceStyle.transform;
-            positionedAncestorStyle.translate = "none";
-            positionedAncestorStyle.scale = "none";
-            positionedAncestorStyle.rotate = "none";
-            positionedAncestorStyle.transform = "none";
-            containerInstanceStyle.translate = "none";
-            containerInstanceStyle.scale = "none";
-            containerInstanceStyle.rotate = "none";
-            containerInstanceStyle.transform = "none";
-            var ancestorRect = rootContainer.getBoundingClientRect(),
-              rect = containerInstance.getBoundingClientRect(),
-              cloneStyle = clone.style;
-            cloneStyle.position = "absolute";
-            cloneStyle.top = rect.top - ancestorRect.top + "px";
-            cloneStyle.left = rect.left - ancestorRect.left + "px";
-            cloneStyle.width = rect.width + "px";
-            cloneStyle.height = rect.height + "px";
-            cloneStyle.margin = "0px";
-            cloneStyle.boxSizing = "border-box";
-            positionedAncestorStyle.translate = prevAncestorTranslate;
-            positionedAncestorStyle.scale = prevAncestorScale;
-            positionedAncestorStyle.rotate = prevAncestorRotate;
-            positionedAncestorStyle.transform = prevAncestorTransform;
-            containerInstanceStyle.translate = prevTranslate;
-            containerInstanceStyle.scale = prevScale;
-            containerInstanceStyle.rotate = prevRotate;
-            containerInstanceStyle.transform = prevTransform;
-          }
-          clone.style.viewTransitionName = "root";
-          var transform = computedStyle.transform;
-          "none" === transform && (transform = "");
-          var scale = computedStyle.scale;
-          if ("none" !== scale && "" !== scale) {
-            var parts = scale.split(" ");
-            transform =
-              (3 === parts.length ? "scale3d" : "scale") +
-              "(" +
-              parts.join(", ") +
-              ") " +
-              transform;
-          }
-          var rotate = computedStyle.rotate;
-          if ("none" !== rotate && "" !== rotate) {
-            var _parts = rotate.split(" ");
-            transform =
-              1 === _parts.length
-                ? "rotate(" + _parts[0] + ") " + transform
-                : 2 === _parts.length
-                  ? "rotate" +
-                    _parts[0].toUpperCase() +
-                    "(" +
-                    _parts[1] +
-                    ") " +
-                    transform
-                  : "rotate3d(" + _parts.join(", ") + ") " + transform;
-          }
-          var translate = computedStyle.translate;
-          if ("none" !== translate && "" !== translate) {
-            var _parts2 = translate.split(" ");
-            transform =
-              (3 === _parts2.length ? "translate3d" : "translate") +
-              "(" +
-              _parts2.join(", ") +
-              ") " +
-              transform;
-          }
-          var transform$jscomp$0 = transform;
-          clone.style.translate = "none";
-          clone.style.scale = "none";
-          clone.style.rotate = "none";
-          clone.style.transform =
-            "translate(-20000px, -20000px) " + transform$jscomp$0;
-          containerInstance.parentNode.insertBefore(
-            clone,
-            containerInstance.nextSibling
-          );
-          root.gestureClone = clone;
-          recursivelyInsertClones(finishedWork, clone);
-        } finally {
-          (executionContext = prevExecutionContext),
-            (ReactDOMSharedInternals.p = previousPriority),
-            (ReactSharedInternals.T = prevTransition);
-        }
+        executionContext = prevExecutionContext;
+        ReactDOMSharedInternals.p = previousPriority;
+        ReactSharedInternals.T = prevTransition;
         pendingTransitionTypes = null;
         pendingEffectsStatus = PENDING_GESTURE_MUTATION_PHASE;
         finishedGesture.running = startGestureTransition(
           root.containerInfo,
-          finishedGesture.provider,
-          finishedGesture.rangeCurrent,
-          finishedGesture.direction
-            ? finishedGesture.rangeNext
-            : finishedGesture.rangePrevious,
           pendingTransitionTypes,
           flushGestureMutations,
           flushGestureAnimations
@@ -17958,24 +17622,7 @@
         var prevExecutionContext = executionContext;
         executionContext |= CommitContext;
         try {
-          var rootClone = root.gestureClone;
-          if (null !== rootClone) {
-            root.gestureClone = null;
-            var rootContainer = root.containerInfo;
-            var containerInstance =
-              9 === rootContainer.nodeType
-                ? rootContainer.body
-                : "HTML" === rootContainer.nodeName
-                  ? rootContainer.ownerDocument.body
-                  : rootContainer;
-            var containerParent = containerInstance.parentNode;
-            if (null === containerParent)
-              throw Error(
-                "Cannot use a useSwipeTransition() in a detached root."
-              );
-            containerParent.removeChild(rootClone);
-            containerInstance.style.viewTransitionName = "root";
-          }
+          cancelRootViewTransitionName(root.containerInfo);
         } finally {
           (executionContext = prevExecutionContext),
             (ReactDOMSharedInternals.p = previousPriority),
@@ -18649,7 +18296,7 @@
       temp.parentNode.removeChild(temp);
       return form;
     }
-    function extractEvents$2(
+    function extractEvents$1(
       dispatchQueue,
       domEventName,
       maybeTargetInst,
@@ -18735,38 +18382,6 @@
         });
       }
     }
-    function runEventInBatch(dispatchQueue) {
-      processDispatchQueue(dispatchQueue, 0);
-    }
-    function fireScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-      nativeEventTarget[internalScrollTimer] = void 0;
-      if (isMouseDown || isTouchStarted)
-        debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-      else {
-        var dispatchQueue = [];
-        targetInst = accumulateTwoPhaseListeners(targetInst, "onScrollEnd");
-        0 < targetInst.length &&
-          ((nativeEvent = new SyntheticUIEvent(
-            "onScrollEnd",
-            "scrollend",
-            null,
-            nativeEvent,
-            nativeEventTarget
-          )),
-          dispatchQueue.push({ event: nativeEvent, listeners: targetInst }));
-        batchedUpdates$1(runEventInBatch, dispatchQueue);
-      }
-    }
-    function debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-      var existingTimer = nativeEventTarget[internalScrollTimer];
-      null != existingTimer && clearTimeout(existingTimer);
-      null !== targetInst &&
-        ((targetInst = setTimeout(
-          fireScrollEnd.bind(null, targetInst, nativeEvent, nativeEventTarget),
-          DEBOUNCE_TIMEOUT
-        )),
-        (nativeEventTarget[internalScrollTimer] = targetInst));
-    }
     function executeDispatch(event, listener, currentTarget) {
       event.currentTarget = currentTarget;
       try {
@@ -19064,15 +18679,39 @@
               case "beforetoggle":
                 SyntheticEventCtor = SyntheticToggleEvent;
             }
-            var inCapturePhase = 0 !== (eventSystemFlags & 4);
-            inCapturePhase = accumulateSinglePhaseListeners(
-              targetInst,
-              reactName,
-              nativeEvent.type,
-              inCapturePhase,
-              !inCapturePhase &&
-                ("scroll" === domEventName || "scrollend" === domEventName)
-            );
+            var inCapturePhase = 0 !== (eventSystemFlags & 4),
+              accumulateTargetOnly =
+                !inCapturePhase &&
+                ("scroll" === domEventName || "scrollend" === domEventName),
+              reactEventName = inCapturePhase
+                ? null !== reactName
+                  ? reactName + "Capture"
+                  : null
+                : reactName;
+            inCapturePhase = [];
+            for (
+              var instance = targetInst, lastHostComponent;
+              null !== instance;
+
+            ) {
+              var _instance2 = instance;
+              lastHostComponent = _instance2.stateNode;
+              _instance2 = _instance2.tag;
+              (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
+                null === lastHostComponent ||
+                null === reactEventName ||
+                ((_instance2 = getListener(instance, reactEventName)),
+                null != _instance2 &&
+                  inCapturePhase.push(
+                    createDispatchListener(
+                      instance,
+                      _instance2,
+                      lastHostComponent
+                    )
+                  ));
+              if (accumulateTargetOnly) break;
+              instance = instance.return;
+            }
             0 < inCapturePhase.length &&
               ((reactName = new SyntheticEventCtor(
                 reactName,
@@ -19117,106 +18756,111 @@
                   (reactEventType = reactEventType
                     ? getClosestInstanceFromNode(reactEventType)
                     : null),
-                  null !== reactEventType)
-                ) {
-                  inCapturePhase = getNearestMountedFiber(reactEventType);
-                  var tag = reactEventType.tag;
-                  if (
-                    reactEventType !== inCapturePhase ||
-                    (5 !== tag && 27 !== tag && 6 !== tag)
-                  )
-                    reactEventType = null;
-                }
+                  null !== reactEventType &&
+                    ((accumulateTargetOnly =
+                      getNearestMountedFiber(reactEventType)),
+                    (inCapturePhase = reactEventType.tag),
+                    reactEventType !== accumulateTargetOnly ||
+                      (5 !== inCapturePhase &&
+                        27 !== inCapturePhase &&
+                        6 !== inCapturePhase)))
+                )
+                  reactEventType = null;
               } else (SyntheticEventCtor = null), (reactEventType = targetInst);
               if (SyntheticEventCtor !== reactEventType) {
-                tag = SyntheticMouseEvent;
-                var leaveEventType = "onMouseLeave",
-                  enterEventType = "onMouseEnter",
-                  eventTypePrefix = "mouse";
+                inCapturePhase = SyntheticMouseEvent;
+                _instance2 = "onMouseLeave";
+                reactEventName = "onMouseEnter";
+                instance = "mouse";
                 if (
                   "pointerout" === domEventName ||
                   "pointerover" === domEventName
                 )
-                  (tag = SyntheticPointerEvent),
-                    (leaveEventType = "onPointerLeave"),
-                    (enterEventType = "onPointerEnter"),
-                    (eventTypePrefix = "pointer");
-                inCapturePhase =
+                  (inCapturePhase = SyntheticPointerEvent),
+                    (_instance2 = "onPointerLeave"),
+                    (reactEventName = "onPointerEnter"),
+                    (instance = "pointer");
+                accumulateTargetOnly =
                   null == SyntheticEventCtor
                     ? reactName
                     : getNodeFromInstance(SyntheticEventCtor);
-                var toNode =
+                lastHostComponent =
                   null == reactEventType
                     ? reactName
                     : getNodeFromInstance(reactEventType);
-                reactName = new tag(
-                  leaveEventType,
-                  eventTypePrefix + "leave",
+                reactName = new inCapturePhase(
+                  _instance2,
+                  instance + "leave",
                   SyntheticEventCtor,
                   nativeEvent,
                   nativeEventTarget
                 );
-                reactName.target = inCapturePhase;
-                reactName.relatedTarget = toNode;
-                leaveEventType = null;
+                reactName.target = accumulateTargetOnly;
+                reactName.relatedTarget = lastHostComponent;
+                _instance2 = null;
                 getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
-                  ((tag = new tag(
-                    enterEventType,
-                    eventTypePrefix + "enter",
+                  ((inCapturePhase = new inCapturePhase(
+                    reactEventName,
+                    instance + "enter",
                     reactEventType,
                     nativeEvent,
                     nativeEventTarget
                   )),
-                  (tag.target = toNode),
-                  (tag.relatedTarget = inCapturePhase),
-                  (leaveEventType = tag));
-                inCapturePhase = leaveEventType;
+                  (inCapturePhase.target = lastHostComponent),
+                  (inCapturePhase.relatedTarget = accumulateTargetOnly),
+                  (_instance2 = inCapturePhase));
+                accumulateTargetOnly = _instance2;
                 if (SyntheticEventCtor && reactEventType)
                   b: {
-                    tag = SyntheticEventCtor;
-                    enterEventType = reactEventType;
-                    eventTypePrefix = 0;
-                    for (toNode = tag; toNode; toNode = getParent(toNode))
-                      eventTypePrefix++;
-                    toNode = 0;
+                    inCapturePhase = SyntheticEventCtor;
+                    reactEventName = reactEventType;
+                    instance = 0;
                     for (
-                      leaveEventType = enterEventType;
-                      leaveEventType;
-                      leaveEventType = getParent(leaveEventType)
+                      lastHostComponent = inCapturePhase;
+                      lastHostComponent;
+                      lastHostComponent = getParent(lastHostComponent)
                     )
-                      toNode++;
-                    for (; 0 < eventTypePrefix - toNode; )
-                      (tag = getParent(tag)), eventTypePrefix--;
-                    for (; 0 < toNode - eventTypePrefix; )
-                      (enterEventType = getParent(enterEventType)), toNode--;
-                    for (; eventTypePrefix--; ) {
+                      instance++;
+                    lastHostComponent = 0;
+                    for (
+                      _instance2 = reactEventName;
+                      _instance2;
+                      _instance2 = getParent(_instance2)
+                    )
+                      lastHostComponent++;
+                    for (; 0 < instance - lastHostComponent; )
+                      (inCapturePhase = getParent(inCapturePhase)), instance--;
+                    for (; 0 < lastHostComponent - instance; )
+                      (reactEventName = getParent(reactEventName)),
+                        lastHostComponent--;
+                    for (; instance--; ) {
                       if (
-                        tag === enterEventType ||
-                        (null !== enterEventType &&
-                          tag === enterEventType.alternate)
+                        inCapturePhase === reactEventName ||
+                        (null !== reactEventName &&
+                          inCapturePhase === reactEventName.alternate)
                       )
                         break b;
-                      tag = getParent(tag);
-                      enterEventType = getParent(enterEventType);
+                      inCapturePhase = getParent(inCapturePhase);
+                      reactEventName = getParent(reactEventName);
                     }
-                    tag = null;
+                    inCapturePhase = null;
                   }
-                else tag = null;
+                else inCapturePhase = null;
                 null !== SyntheticEventCtor &&
                   accumulateEnterLeaveListenersForEvent(
                     dispatchQueue,
                     reactName,
                     SyntheticEventCtor,
-                    tag,
+                    inCapturePhase,
                     !1
                   );
                 null !== reactEventType &&
-                  null !== inCapturePhase &&
+                  null !== accumulateTargetOnly &&
                   accumulateEnterLeaveListenersForEvent(
                     dispatchQueue,
-                    inCapturePhase,
+                    accumulateTargetOnly,
                     reactEventType,
-                    tag,
+                    inCapturePhase,
                     !0
                   );
               }
@@ -19381,7 +19025,7 @@
                   listeners: eventType
                 }),
                 (handleEventFunc.data = fallbackData));
-          extractEvents$2(
+          extractEvents$1(
             dispatchQueue,
             domEventName,
             targetInst,
@@ -19389,58 +19033,6 @@
             nativeEventTarget
           );
         }
-        a: if (
-          ((fallbackData = 0 !== (eventSystemFlags & 4)),
-          "scrollend" !== domEventName)
-        ) {
-          if (!isScrollEndEventSupported && fallbackData)
-            switch (domEventName) {
-              case "scroll":
-                null !== nativeEventTarget &&
-                  debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-                break;
-              case "touchstart":
-                isTouchStarted = !0;
-                break;
-              case "touchcancel":
-              case "touchend":
-                isTouchStarted = !1;
-                break;
-              case "mousedown":
-                isMouseDown = !0;
-                break;
-              case "mouseup":
-                isMouseDown = !1;
-            }
-        } else {
-          if (!isScrollEndEventSupported && null !== nativeEventTarget)
-            if (
-              ((eventType = nativeEventTarget[internalScrollTimer]),
-              null != eventType)
-            )
-              clearTimeout(eventType),
-                (nativeEventTarget[internalScrollTimer] = void 0);
-            else break a;
-          targetInst = accumulateSinglePhaseListeners(
-            targetInst,
-            "onScrollEnd",
-            "scrollend",
-            fallbackData,
-            !fallbackData
-          );
-          0 < targetInst.length &&
-            ((nativeEventTarget = new SyntheticUIEvent(
-              "onScrollEnd",
-              "scrollend",
-              null,
-              nativeEvent,
-              nativeEventTarget
-            )),
-            dispatchQueue.push({
-              event: nativeEventTarget,
-              listeners: targetInst
-            }));
-        }
         processDispatchQueue(dispatchQueue, eventSystemFlags);
       });
     }
@@ -19451,35 +19043,6 @@
         currentTarget: currentTarget
       };
     }
-    function accumulateSinglePhaseListeners(
-      targetFiber,
-      reactName,
-      nativeEventType,
-      inCapturePhase,
-      accumulateTargetOnly
-    ) {
-      reactName = inCapturePhase
-        ? null !== reactName
-          ? reactName + "Capture"
-          : null
-        : reactName;
-      for (nativeEventType = []; null !== targetFiber; ) {
-        var _instance2 = targetFiber;
-        inCapturePhase = _instance2.stateNode;
-        _instance2 = _instance2.tag;
-        (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
-          null === inCapturePhase ||
-          null === reactName ||
-          ((_instance2 = getListener(targetFiber, reactName)),
-          null != _instance2 &&
-            nativeEventType.push(
-              createDispatchListener(targetFiber, _instance2, inCapturePhase)
-            ));
-        if (accumulateTargetOnly) break;
-        targetFiber = targetFiber.return;
-      }
-      return nativeEventType;
-    }
     function accumulateTwoPhaseListeners(targetFiber, reactName) {
       for (
         var captureName = reactName + "Capture", listeners = [];
@@ -19501,10 +19064,9 @@
             listeners.push(
               createDispatchListener(targetFiber, _instance3, stateNode)
             ));
-        if (3 === targetFiber.tag) return listeners;
         targetFiber = targetFiber.return;
       }
-      return [];
+      return listeners;
     }
     function getParent(inst) {
       if (null === inst) return null;
@@ -19859,8 +19421,7 @@
           null != value &&
             ("function" !== typeof value &&
               warnForInvalidEventListener(key, value),
-            listenToNonDelegatedEvent("scrollend", domElement),
-            listenToNonDelegatedEvent("scroll", domElement));
+            listenToNonDelegatedEvent("scrollend", domElement));
           return;
         case "dangerouslySetInnerHTML":
           if (null != value) {
@@ -20151,8 +19712,7 @@
           null != value &&
             ("function" !== typeof value &&
               warnForInvalidEventListener(key, value),
-            listenToNonDelegatedEvent("scrollend", domElement),
-            listenToNonDelegatedEvent("scroll", domElement));
+            listenToNonDelegatedEvent("scrollend", domElement));
           return;
         case "onClick":
           null != value &&
@@ -20397,8 +19957,6 @@
               }
           return;
         case "dialog":
-          listenToNonDelegatedEvent("beforetoggle", domElement);
-          listenToNonDelegatedEvent("toggle", domElement);
           listenToNonDelegatedEvent("cancel", domElement);
           listenToNonDelegatedEvent("close", domElement);
           break;
@@ -21959,16 +21517,32 @@
       instance.style.viewTransitionClass =
         null == props || "boolean" === typeof props ? "" : ("" + props).trim();
     }
+    function cancelRootViewTransitionName(rootContainer) {
+      rootContainer =
+        9 === rootContainer.nodeType
+          ? rootContainer.documentElement
+          : rootContainer.ownerDocument.documentElement;
+      null !== rootContainer &&
+        "" === rootContainer.style.viewTransitionName &&
+        ((rootContainer.style.viewTransitionName = "none"),
+        rootContainer.animate(
+          { opacity: [0, 0], pointerEvents: ["none", "none"] },
+          {
+            duration: 0,
+            fill: "forwards",
+            pseudoElement: "::view-transition-group(root)"
+          }
+        ),
+        rootContainer.animate(
+          { width: [0, 0], height: [0, 0] },
+          { duration: 0, fill: "forwards", pseudoElement: "::view-transition" }
+        ));
+    }
     function restoreRootViewTransitionName(rootContainer) {
       rootContainer =
         9 === rootContainer.nodeType
-          ? rootContainer.body
-          : "HTML" === rootContainer.nodeName
-            ? rootContainer.ownerDocument.body
-            : rootContainer;
-      "root" === rootContainer.style.viewTransitionName &&
-        (rootContainer.style.viewTransitionName = "");
-      rootContainer = rootContainer.ownerDocument.documentElement;
+          ? rootContainer.documentElement
+          : rootContainer.ownerDocument.documentElement;
       null !== rootContainer &&
         "none" === rootContainer.style.viewTransitionName &&
         (rootContainer.style.viewTransitionName = "");
@@ -22065,78 +21639,8 @@
         return !1;
       }
     }
-    function mergeTranslate(translateA, translateB) {
-      if (!translateA || "none" === translateA) return translateB || "";
-      if (!translateB || "none" === translateB) return translateA || "";
-      translateA = translateA.split(" ");
-      translateB = translateB.split(" ");
-      var i,
-        result = "";
-      for (i = 0; i < translateA.length && i < translateB.length; i++)
-        0 < i && (result += " "),
-          (result += "calc(" + translateA[i] + " + " + translateB[i] + ")");
-      for (; i < translateA.length; i++) result += " " + translateA[i];
-      for (; i < translateB.length; i++) result += " " + translateB[i];
-      return result;
-    }
-    function animateGesture(
-      keyframes,
-      targetElement,
-      pseudoElement,
-      timeline,
-      rangeStart,
-      rangeEnd,
-      moveFirstFrameIntoViewport,
-      moveAllFramesIntoViewport
-    ) {
-      for (var i = 0; i < keyframes.length; i++) {
-        var keyframe = keyframes[i];
-        delete keyframe.easing;
-        delete keyframe.computedOffset;
-        "auto" === keyframe.width && delete keyframe.width;
-        "auto" === keyframe.height && delete keyframe.height;
-        "none" === keyframe.transform && delete keyframe.transform;
-        if (moveAllFramesIntoViewport && null == keyframe.transform)
-          if (null == keyframe.translate || "" === keyframe.translate) {
-            var elementTranslate = getComputedStyle(
-              targetElement,
-              pseudoElement
-            ).translate;
-            keyframe.translate = mergeTranslate(
-              elementTranslate,
-              "20000px 20000px"
-            );
-          } else
-            keyframe.translate = mergeTranslate(
-              keyframe.translate,
-              "20000px 20000px"
-            );
-      }
-      moveFirstFrameIntoViewport &&
-        ((moveFirstFrameIntoViewport = keyframes[0]),
-        (moveAllFramesIntoViewport = moveFirstFrameIntoViewport.transform),
-        null != moveAllFramesIntoViewport &&
-          (moveFirstFrameIntoViewport.transform =
-            "translate(20000px, 20000px) " +
-            ("none" === moveAllFramesIntoViewport
-              ? ""
-              : moveAllFramesIntoViewport)));
-      moveFirstFrameIntoViewport = rangeStart > rangeEnd;
-      targetElement.animate(keyframes, {
-        pseudoElement: pseudoElement,
-        timeline: timeline,
-        easing: "linear",
-        fill: "both",
-        direction: moveFirstFrameIntoViewport ? "normal" : "reverse",
-        rangeStart: (moveFirstFrameIntoViewport ? rangeEnd : rangeStart) + "%",
-        rangeEnd: (moveFirstFrameIntoViewport ? rangeStart : rangeEnd) + "%"
-      });
-    }
     function startGestureTransition(
       rootContainer,
-      timeline,
-      rangeStart,
-      rangeEnd,
       transitionTypes,
       mutationCallback,
       animateCallback
@@ -22151,100 +21655,18 @@
           types: transitionTypes
         });
         ownerDocument.__reactViewTransition = transition;
-        var readyCallback = function () {
-            for (
-              var documentElement = ownerDocument.documentElement,
-                animations = documentElement.getAnimations({ subtree: !0 }),
-                foundGroups = new Set(),
-                foundNews = new Set(),
-                i = 0;
-              i < animations.length;
-              i++
-            ) {
-              var pseudoElement = animations[i].effect.pseudoElement;
-              null != pseudoElement &&
-                (pseudoElement.startsWith("::view-transition-group")
-                  ? foundGroups.add(pseudoElement.slice(23))
-                  : pseudoElement.startsWith("::view-transition-new") &&
-                    foundNews.add(pseudoElement.slice(21)));
-            }
-            for (i = 0; i < animations.length; i++) {
-              var anim = animations[i];
-              pseudoElement = anim.effect;
-              var _pseudoElement = pseudoElement.pseudoElement;
-              if (
-                null != _pseudoElement &&
-                _pseudoElement.startsWith("::view-transition")
-              ) {
-                anim.cancel();
-                var isGeneratedGroupAnim = !1,
-                  isExitGroupAnim = !1;
-                if (_pseudoElement.startsWith("::view-transition-group")) {
-                  var groupName = _pseudoElement.slice(23);
-                  foundNews.has(groupName)
-                    ? ((anim = anim.animationName),
-                      (isGeneratedGroupAnim =
-                        null != anim &&
-                        anim.startsWith("-ua-view-transition-group-anim-")))
-                    : (isExitGroupAnim = !0);
-                }
-                animateGesture(
-                  pseudoElement.getKeyframes(),
-                  pseudoElement.target,
-                  _pseudoElement,
-                  timeline,
-                  rangeStart,
-                  rangeEnd,
-                  isGeneratedGroupAnim,
-                  isExitGroupAnim
-                );
-                _pseudoElement.startsWith("::view-transition-old") &&
-                  ((_pseudoElement = _pseudoElement.slice(21)),
-                  foundGroups.has(_pseudoElement) ||
-                    foundNews.has(_pseudoElement) ||
-                    (foundGroups.add(_pseudoElement),
-                    animateGesture(
-                      [{}, {}],
-                      pseudoElement.target,
-                      "::view-transition-group" + _pseudoElement,
-                      timeline,
-                      rangeStart,
-                      rangeEnd,
-                      !1,
-                      !0
-                    )));
-              }
-            }
-            documentElement
-              .animate([{}, {}], {
-                pseudoElement: "::view-transition",
-                duration: 1
-              })
-              .pause();
-            animateCallback();
-          },
-          readyForAnimations =
-            -1 !== navigator.userAgent.indexOf("Chrome")
-              ? function () {
-                  return requestAnimationFrame(readyCallback);
-                }
-              : readyCallback;
-        transition.ready.then(readyForAnimations, readyCallback);
+        var blockingAnim = null;
+        rootContainer = function () {
+          blockingAnim = ownerDocument.documentElement.animate([{}, {}], {
+            pseudoElement: "::view-transition",
+            duration: 1
+          });
+          blockingAnim.pause();
+          animateCallback();
+        };
+        transition.ready.then(rootContainer, rootContainer);
         transition.finished.then(function () {
-          for (
-            var animations = ownerDocument.documentElement.getAnimations({
-                subtree: !0
-              }),
-              i = 0;
-            i < animations.length;
-            i++
-          ) {
-            var anim = animations[i],
-              pseudo = anim.effect.pseudoElement;
-            null != pseudo &&
-              pseudo.startsWith("::view-transition") &&
-              anim.cancel();
-          }
+          null !== blockingAnim && blockingAnim.cancel();
           ownerDocument.__reactViewTransition === transition &&
             (ownerDocument.__reactViewTransition = null);
         });
@@ -23345,7 +22767,7 @@
       this.pooledCache = null;
       this.pooledCacheLanes = 0;
       this.formState = formState;
-      this.gestureClone = this.stoppingGestures = this.pendingGestures = null;
+      this.stoppingGestures = this.pendingGestures = null;
       this.incompleteTransitions = new Map();
       this.passiveEffectDuration = this.effectDuration = -0;
       this.memoizedUpdaters = new Set();
@@ -24142,7 +23564,6 @@
       internalEventHandlesSetKey = "__reactHandles$" + randomKey,
       internalRootNodeResourcesKey = "__reactResources$" + randomKey,
       internalHoistableMarker = "__reactMarker$" + randomKey,
-      internalScrollTimer = "__reactScroll$" + randomKey,
       allNativeEvents = new Set(),
       registrationNameDependencies = {},
       possibleRegistrationNames = {},
@@ -25337,7 +24758,7 @@
       TRANSITION_END = getVendorPrefixedEventName("transitionend"),
       topLevelEventsToReactNames = new Map(),
       simpleEventPluginEvents =
-        "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
+        "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(
           " "
         ),
       CapturedStacks = new WeakMap(),
@@ -27192,8 +26613,6 @@
         "Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."
       ),
       globalClientIdCounter = 0,
-      didWarnForRootClone = !1,
-      unhideHostChildren = !1,
       DefaultAsyncDispatcher = {
         getCacheForType: function (resourceType) {
           var cache = readContext(CacheContext),
@@ -27304,11 +26723,7 @@
       mightHavePendingSyncWork = !1,
       isFlushingWork = !1,
       currentEventTransitionLane = 0,
-      fakeActCallbackNode = {},
-      isScrollEndEventSupported = canUseDOM && isEventSupported("scrollend"),
-      isTouchStarted = !1,
-      isMouseDown = !1,
-      DEBOUNCE_TIMEOUT = 200;
+      fakeActCallbackNode = {};
     (function () {
       for (var i = 0; i < simpleEventPluginEvents.length; i++) {
         var eventName = simpleEventPluginEvents[i],
@@ -27361,12 +26776,6 @@
       "onCompositionUpdate",
       "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
     );
-    registerTwoPhaseEvent(
-      "onScrollEnd",
-      "scroll scrollend touchstart touchcancel touchend mousedown mouseup".split(
-        " "
-      )
-    );
     var mediaEventTypes =
         "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
           " "
@@ -27873,11 +27282,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     })();
     ("function" === typeof Map &&
@@ -27914,10 +27323,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: "19.1.0-experimental-f9d78089-20250306",
+          version: "19.1.0-experimental-eda36a1c-20250228",
           rendererPackageName: "react-dom",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: "19.1.0-experimental-f9d78089-20250306"
+          reconcilerVersion: "19.1.0-experimental-eda36a1c-20250228"
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -28059,7 +27468,7 @@
       listenToAllSupportedEvents(container);
       return new ReactDOMHydrationRoot(initialChildren);
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
     "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       "function" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom-client.production.js b/node_modules/react-dom/cjs/react-dom-client.production.js
index 14314a2..122da3f 100644
--- a/node_modules/react-dom/cjs/react-dom-client.production.js
+++ b/node_modules/react-dom/cjs/react-dom-client.production.js
@@ -645,8 +645,7 @@ var randomKey = Math.random().toString(36).slice(2),
   internalEventHandlerListenersKey = "__reactListeners$" + randomKey,
   internalEventHandlesSetKey = "__reactHandles$" + randomKey,
   internalRootNodeResourcesKey = "__reactResources$" + randomKey,
-  internalHoistableMarker = "__reactMarker$" + randomKey,
-  internalScrollTimer = "__reactScroll$" + randomKey;
+  internalHoistableMarker = "__reactMarker$" + randomKey;
 function detachDeletedInstance(node) {
   delete node[internalInstanceKey];
   delete node[internalPropsKey];
@@ -745,11 +744,6 @@ function isAttributeNameSafe(attributeName) {
   return !1;
 }
 var viewTransitionMutationContext = !1;
-function pushMutationContext() {
-  var prev = viewTransitionMutationContext;
-  viewTransitionMutationContext = !1;
-  return prev;
-}
 function setValueForAttribute(node, name, value) {
   if (isAttributeNameSafe(name))
     if (null === value) node.removeAttribute(name);
@@ -1991,16 +1985,6 @@ function isTextInputElement(elem) {
       ? !0
       : !1;
 }
-function isEventSupported(eventNameSuffix) {
-  if (!canUseDOM) return !1;
-  eventNameSuffix = "on" + eventNameSuffix;
-  var isSupported = eventNameSuffix in document;
-  isSupported ||
-    ((isSupported = document.createElement("div")),
-    isSupported.setAttribute(eventNameSuffix, "return;"),
-    (isSupported = "function" === typeof isSupported[eventNameSuffix]));
-  return isSupported;
-}
 function createAndAccumulateChangeEvent(
   dispatchQueue,
   inst,
@@ -2025,7 +2009,7 @@ function createAndAccumulateChangeEvent(
 }
 var activeElement$1 = null,
   activeElementInst$1 = null;
-function runEventInBatch$1(dispatchQueue) {
+function runEventInBatch(dispatchQueue) {
   processDispatchQueue(dispatchQueue, 0);
 }
 function getInstIfValueChanged(targetInst) {
@@ -2036,10 +2020,22 @@ function getTargetInstForChangeEvent(domEventName, targetInst) {
   if ("change" === domEventName) return targetInst;
 }
 var isInputEventSupported = !1;
-canUseDOM &&
-  (isInputEventSupported =
-    isEventSupported("input") &&
-    (!document.documentMode || 9 < document.documentMode));
+if (canUseDOM) {
+  var JSCompiler_inline_result$jscomp$288;
+  if (canUseDOM) {
+    var isSupported$jscomp$inline_426 = "oninput" in document;
+    if (!isSupported$jscomp$inline_426) {
+      var element$jscomp$inline_427 = document.createElement("div");
+      element$jscomp$inline_427.setAttribute("oninput", "return;");
+      isSupported$jscomp$inline_426 =
+        "function" === typeof element$jscomp$inline_427.oninput;
+    }
+    JSCompiler_inline_result$jscomp$288 = isSupported$jscomp$inline_426;
+  } else JSCompiler_inline_result$jscomp$288 = !1;
+  isInputEventSupported =
+    JSCompiler_inline_result$jscomp$288 &&
+    (!document.documentMode || 9 < document.documentMode);
+}
 function stopWatchingForValueChange() {
   activeElement$1 &&
     (activeElement$1.detachEvent("onpropertychange", handlePropertyChange),
@@ -2057,7 +2053,7 @@ function handlePropertyChange(nativeEvent) {
       nativeEvent,
       getEventTarget(nativeEvent)
     );
-    batchedUpdates$1(runEventInBatch$1, dispatchQueue);
+    batchedUpdates$1(runEventInBatch, dispatchQueue);
   }
 }
 function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
@@ -2277,7 +2273,7 @@ var ANIMATION_END = getVendorPrefixedEventName("animationend"),
   TRANSITION_END = getVendorPrefixedEventName("transitionend"),
   topLevelEventsToReactNames = new Map(),
   simpleEventPluginEvents =
-    "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
+    "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(
       " "
     );
 function registerSimpleEvent(domEventName, reactName) {
@@ -8361,7 +8357,7 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
     JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };
   } else JSCompiler_temp = null;
   selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };
-  _enabled = !1;
+  shouldStartViewTransition = _enabled = !1;
   committedLanes = (committedLanes & 335544064) === committedLanes;
   nextEffect = firstChild;
   for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
@@ -9012,9 +9008,9 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                       hoistableRoot
                     ).get(flags + (current.href || ""));
                     if (maybeNodes)
-                      for (root = 0; root < maybeNodes.length; root++)
+                      for (var i = 0; i < maybeNodes.length; i++)
                         if (
-                          ((currentResource = maybeNodes[root]),
+                          ((currentResource = maybeNodes[i]),
                           currentResource.getAttribute("href") ===
                             (null == current.href || "" === current.href
                               ? null
@@ -9028,7 +9024,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                                 ? null
                                 : current.crossOrigin))
                         ) {
-                          maybeNodes.splice(root, 1);
+                          maybeNodes.splice(i, 1);
                           break b;
                         }
                     currentResource = hoistableRoot.createElement(flags);
@@ -9043,9 +9039,9 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                         hoistableRoot
                       ).get(flags + (current.content || "")))
                     )
-                      for (root = 0; root < maybeNodes.length; root++)
+                      for (i = 0; i < maybeNodes.length; i++)
                         if (
-                          ((currentResource = maybeNodes[root]),
+                          ((currentResource = maybeNodes[i]),
                           currentResource.getAttribute("content") ===
                             (null == current.content
                               ? null
@@ -9065,7 +9061,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                                 ? null
                                 : current.charSet))
                         ) {
-                          maybeNodes.splice(root, 1);
+                          maybeNodes.splice(i, 1);
                           break b;
                         }
                     currentResource = hoistableRoot.createElement(flags);
@@ -9255,13 +9251,25 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
             if (null === current) {
               lanes = current = root;
               try {
-                (currentResource = lanes.stateNode),
-                  hoistableRoot
-                    ? ((maybeNodes = currentResource.style),
-                      "function" === typeof maybeNodes.setProperty
-                        ? maybeNodes.setProperty("display", "none", "important")
-                        : (maybeNodes.display = "none"))
-                    : unhideInstance(lanes.stateNode, lanes.memoizedProps);
+                if (((currentResource = lanes.stateNode), hoistableRoot))
+                  (maybeNodes = currentResource.style),
+                    "function" === typeof maybeNodes.setProperty
+                      ? maybeNodes.setProperty("display", "none", "important")
+                      : (maybeNodes.display = "none");
+                else {
+                  i = lanes.stateNode;
+                  var styleProp = lanes.memoizedProps.style,
+                    display =
+                      void 0 !== styleProp &&
+                      null !== styleProp &&
+                      styleProp.hasOwnProperty("display")
+                        ? styleProp.display
+                        : null;
+                  i.style.display =
+                    null == display || "boolean" === typeof display
+                      ? ""
+                      : ("" + display).trim();
+                }
               } catch (error) {
                 captureCommitPhaseError(lanes, lanes.return, error);
               }
@@ -9319,7 +9327,8 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      flags = pushMutationContext();
+      flags = viewTransitionMutationContext;
+      viewTransitionMutationContext = !1;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
       (lanes & 335544064) === lanes &&
@@ -9427,30 +9436,7 @@ function commitAfterMutationEffectsOnFiber(finishedWork, root) {
                   }
                 );
             }
-          finishedWork = root.containerInfo;
-          finishedWork =
-            9 === finishedWork.nodeType
-              ? finishedWork.documentElement
-              : finishedWork.ownerDocument.documentElement;
-          null !== finishedWork &&
-            "" === finishedWork.style.viewTransitionName &&
-            ((finishedWork.style.viewTransitionName = "none"),
-            finishedWork.animate(
-              { opacity: [0, 0], pointerEvents: ["none", "none"] },
-              {
-                duration: 0,
-                fill: "forwards",
-                pseudoElement: "::view-transition-group(root)"
-              }
-            ),
-            finishedWork.animate(
-              { width: [0, 0], height: [0, 0] },
-              {
-                duration: 0,
-                fill: "forwards",
-                pseudoElement: "::view-transition"
-              }
-            ));
+          cancelRootViewTransitionName(root.containerInfo);
         }
         break;
       case 5:
@@ -10561,8 +10547,7 @@ function prepareToHydrateHostInstance(fiber) {
         listenToNonDelegatedEvent("toggle", instance)),
       null != props.onScroll && listenToNonDelegatedEvent("scroll", instance),
       null != props.onScrollEnd &&
-        (listenToNonDelegatedEvent("scrollend", instance),
-        listenToNonDelegatedEvent("scroll", instance)),
+        listenToNonDelegatedEvent("scrollend", instance),
       null != props.onClick && (instance.onclick = noop$1),
       (instance = !0))
     : (instance = !1);
@@ -11303,122 +11288,6 @@ function unwindInterruptedWork(current, interruptedWork) {
       popProvider(CacheContext);
   }
 }
-var unhideHostChildren = !1;
-function recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone) {
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-    switch (parentFiber.tag) {
-      case 5:
-        var clone = parentFiber.stateNode.cloneNode(!0);
-        hostParentClone.appendChild(clone);
-        unhideHostChildren && unhideInstance(clone, parentFiber.memoizedProps);
-        break;
-      case 6:
-        clone = parentFiber.stateNode;
-        if (null === clone) throw Error(formatProdErrorMessage(162));
-        clone = clone.cloneNode(!1);
-        hostParentClone.appendChild(clone);
-        unhideHostChildren && (clone.nodeValue = parentFiber.memoizedProps);
-        break;
-      case 4:
-        break;
-      case 22:
-        null === parentFiber.memoizedState &&
-          recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-        break;
-      case 30:
-        clone = pushMutationContext();
-        recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-        viewTransitionMutationContext = clone;
-        break;
-      default:
-        recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-    }
-    parentFiber = parentFiber.sibling;
-  }
-}
-function recursivelyInsertClones(parentFiber, hostParentClone$jscomp$0) {
-  if (
-    null === parentFiber.alternate ||
-    0 !== (parentFiber.subtreeFlags & 13878)
-  )
-    for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-      var finishedWork = parentFiber,
-        hostParentClone = hostParentClone$jscomp$0,
-        current = finishedWork.alternate,
-        flags = finishedWork.flags;
-      switch (finishedWork.tag) {
-        case 26:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          break;
-        case 27:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          break;
-        case 5:
-          var clone = finishedWork.stateNode;
-          if (null === current) hostParentClone.appendChild(clone);
-          else {
-            null === finishedWork.child
-              ? ((clone = clone.cloneNode(!0)),
-                finishedWork.flags & 32 && setTextContent(clone, ""))
-              : (clone = clone.cloneNode(!1));
-            if (flags & 4) {
-              flags = clone;
-              var newProps = finishedWork.memoizedProps;
-              updateProperties(
-                flags,
-                finishedWork.type,
-                current.memoizedProps,
-                newProps
-              );
-              flags[internalPropsKey] = newProps;
-            }
-            unhideHostChildren
-              ? ((unhideHostChildren = !1),
-                recursivelyInsertClones(finishedWork, clone),
-                hostParentClone.appendChild(clone),
-                (unhideHostChildren = !0),
-                unhideInstance(clone, finishedWork.memoizedProps))
-              : (recursivelyInsertClones(finishedWork, clone),
-                hostParentClone.appendChild(clone));
-          }
-          break;
-        case 6:
-          clone = finishedWork.stateNode;
-          if (null === clone) throw Error(formatProdErrorMessage(162));
-          null === current
-            ? hostParentClone.appendChild(clone)
-            : ((clone = clone.cloneNode(!1)),
-              flags & 4 && (clone.nodeValue = current.memoizedProps),
-              hostParentClone.appendChild(clone),
-              unhideHostChildren &&
-                (clone.nodeValue = finishedWork.memoizedProps));
-          break;
-        case 4:
-          break;
-        case 22:
-          null === finishedWork.memoizedState &&
-            ((unhideHostChildren =
-              (current = unhideHostChildren) || 0 !== (flags & 8192)),
-            recursivelyInsertClones(finishedWork, hostParentClone),
-            (unhideHostChildren = current));
-          break;
-        case 30:
-          current = pushMutationContext();
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          viewTransitionMutationContext && (finishedWork.flags |= 4);
-          viewTransitionMutationContext = current;
-          break;
-        default:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-      }
-      parentFiber = parentFiber.sibling;
-    }
-  else
-    recursivelyInsertClonesFromExistingTree(
-      parentFiber,
-      hostParentClone$jscomp$0
-    );
-}
 var DefaultAsyncDispatcher = {
     getCacheForType: function (resourceType) {
       var cache = readContext(CacheContext),
@@ -11998,8 +11867,8 @@ function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       workLoopSync();
       exitStatus = workInProgressRootExitStatus;
       break;
-    } catch (thrownValue$173) {
-      handleThrow(root, thrownValue$173);
+    } catch (thrownValue$171) {
+      handleThrow(root, thrownValue$171);
     }
   while (1);
   lanes && root.shellSuspendCounter++;
@@ -12114,8 +11983,8 @@ function renderRootConcurrent(root, lanes) {
       }
       workLoopConcurrentByScheduler();
       break;
-    } catch (thrownValue$175) {
-      handleThrow(root, thrownValue$175);
+    } catch (thrownValue$173) {
+      handleThrow(root, thrownValue$173);
     }
   while (1);
   lastContextDependency = currentlyRenderingFiber$1 = null;
@@ -12341,7 +12210,6 @@ function commitRoot(
             return null;
           }))
         : ((root.callbackNode = null), (root.callbackPriority = 0));
-      shouldStartViewTransition = !1;
       recoverableErrors = 0 !== (finishedWork.flags & 13878);
       if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
         recoverableErrors = ReactSharedInternals.T;
@@ -12601,150 +12469,22 @@ function flushSpawnedWork() {
     flushSyncWorkAcrossRoots_impl(0, !1);
   }
 }
-function commitGestureOnRoot(root, finishedWork) {
+function commitGestureOnRoot(root) {
   var finishedGesture = root.pendingGestures;
   if (null === finishedGesture) ensureRootIsScheduled(root);
   else {
     deleteScheduledGesture(root, finishedGesture);
-    var prevTransition = ReactSharedInternals.T;
-    ReactSharedInternals.T = null;
-    var previousPriority = ReactDOMSharedInternals.p;
-    ReactDOMSharedInternals.p = 2;
-    var prevExecutionContext = executionContext;
+    var prevTransition = ReactSharedInternals.T,
+      previousPriority = ReactDOMSharedInternals.p,
+      prevExecutionContext = executionContext;
     executionContext |= 4;
-    try {
-      unhideHostChildren = !1;
-      var rootContainer = root.containerInfo,
-        documentElement =
-          9 === rootContainer.nodeType
-            ? rootContainer.documentElement
-            : rootContainer.ownerDocument.documentElement;
-      null !== documentElement &&
-        "" === documentElement.style.viewTransitionName &&
-        (documentElement.style.viewTransitionName = "none");
-      var containerInstance =
-        9 === rootContainer.nodeType
-          ? rootContainer.body
-          : "HTML" === rootContainer.nodeName
-            ? rootContainer.ownerDocument.body
-            : rootContainer;
-      var containerParent = containerInstance.parentNode;
-      if (null === containerParent) throw Error(formatProdErrorMessage(552));
-      var clone = containerInstance.cloneNode(!1),
-        computedStyle = getComputedStyle(containerInstance);
-      if (
-        "absolute" !== computedStyle.position &&
-        "fixed" !== computedStyle.position
-      ) {
-        for (
-          rootContainer = containerParent;
-          null != rootContainer.parentNode &&
-          9 !== rootContainer.parentNode.nodeType &&
-          "static" === getComputedStyle(rootContainer).position;
-
-        )
-          rootContainer = rootContainer.parentNode;
-        var positionedAncestorStyle = rootContainer.style,
-          containerInstanceStyle = containerInstance.style,
-          prevAncestorTranslate = positionedAncestorStyle.translate,
-          prevAncestorScale = positionedAncestorStyle.scale,
-          prevAncestorRotate = positionedAncestorStyle.rotate,
-          prevAncestorTransform = positionedAncestorStyle.transform,
-          prevTranslate = containerInstanceStyle.translate,
-          prevScale = containerInstanceStyle.scale,
-          prevRotate = containerInstanceStyle.rotate,
-          prevTransform = containerInstanceStyle.transform;
-        positionedAncestorStyle.translate = "none";
-        positionedAncestorStyle.scale = "none";
-        positionedAncestorStyle.rotate = "none";
-        positionedAncestorStyle.transform = "none";
-        containerInstanceStyle.translate = "none";
-        containerInstanceStyle.scale = "none";
-        containerInstanceStyle.rotate = "none";
-        containerInstanceStyle.transform = "none";
-        var ancestorRect = rootContainer.getBoundingClientRect(),
-          rect = containerInstance.getBoundingClientRect(),
-          cloneStyle = clone.style;
-        cloneStyle.position = "absolute";
-        cloneStyle.top = rect.top - ancestorRect.top + "px";
-        cloneStyle.left = rect.left - ancestorRect.left + "px";
-        cloneStyle.width = rect.width + "px";
-        cloneStyle.height = rect.height + "px";
-        cloneStyle.margin = "0px";
-        cloneStyle.boxSizing = "border-box";
-        positionedAncestorStyle.translate = prevAncestorTranslate;
-        positionedAncestorStyle.scale = prevAncestorScale;
-        positionedAncestorStyle.rotate = prevAncestorRotate;
-        positionedAncestorStyle.transform = prevAncestorTransform;
-        containerInstanceStyle.translate = prevTranslate;
-        containerInstanceStyle.scale = prevScale;
-        containerInstanceStyle.rotate = prevRotate;
-        containerInstanceStyle.transform = prevTransform;
-      }
-      clone.style.viewTransitionName = "root";
-      var transform = computedStyle.transform;
-      "none" === transform && (transform = "");
-      var scale = computedStyle.scale;
-      if ("none" !== scale && "" !== scale) {
-        var parts = scale.split(" ");
-        transform =
-          (3 === parts.length ? "scale3d" : "scale") +
-          "(" +
-          parts.join(", ") +
-          ") " +
-          transform;
-      }
-      var rotate = computedStyle.rotate;
-      if ("none" !== rotate && "" !== rotate) {
-        var parts$250 = rotate.split(" ");
-        transform =
-          1 === parts$250.length
-            ? "rotate(" + parts$250[0] + ") " + transform
-            : 2 === parts$250.length
-              ? "rotate" +
-                parts$250[0].toUpperCase() +
-                "(" +
-                parts$250[1] +
-                ") " +
-                transform
-              : "rotate3d(" + parts$250.join(", ") + ") " + transform;
-      }
-      var translate = computedStyle.translate;
-      if ("none" !== translate && "" !== translate) {
-        var parts$251 = translate.split(" ");
-        transform =
-          (3 === parts$251.length ? "translate3d" : "translate") +
-          "(" +
-          parts$251.join(", ") +
-          ") " +
-          transform;
-      }
-      var JSCompiler_inline_result = transform;
-      clone.style.translate = "none";
-      clone.style.scale = "none";
-      clone.style.rotate = "none";
-      clone.style.transform =
-        "translate(-20000px, -20000px) " + JSCompiler_inline_result;
-      containerInstance.parentNode.insertBefore(
-        clone,
-        containerInstance.nextSibling
-      );
-      root.gestureClone = clone;
-      recursivelyInsertClones(finishedWork, clone);
-    } finally {
-      (executionContext = prevExecutionContext),
-        (ReactDOMSharedInternals.p = previousPriority),
-        (ReactSharedInternals.T = prevTransition);
-    }
+    executionContext = prevExecutionContext;
+    ReactDOMSharedInternals.p = previousPriority;
+    ReactSharedInternals.T = prevTransition;
     pendingTransitionTypes = null;
     pendingEffectsStatus = 6;
     finishedGesture.running = startGestureTransition(
       root.containerInfo,
-      finishedGesture.provider,
-      finishedGesture.rangeCurrent,
-      finishedGesture.direction
-        ? finishedGesture.rangeNext
-        : finishedGesture.rangePrevious,
       pendingTransitionTypes,
       flushGestureMutations,
       flushGestureAnimations
@@ -12762,21 +12502,7 @@ function flushGestureMutations() {
     var prevExecutionContext = executionContext;
     executionContext |= 4;
     try {
-      var rootClone = root.gestureClone;
-      if (null !== rootClone) {
-        root.gestureClone = null;
-        var rootContainer = root.containerInfo;
-        var containerInstance =
-          9 === rootContainer.nodeType
-            ? rootContainer.body
-            : "HTML" === rootContainer.nodeName
-              ? rootContainer.ownerDocument.body
-              : rootContainer;
-        var containerParent = containerInstance.parentNode;
-        if (null === containerParent) throw Error(formatProdErrorMessage(552));
-        containerParent.removeChild(rootClone);
-        containerInstance.style.viewTransitionName = "root";
-      }
+      cancelRootViewTransitionName(root.containerInfo);
     } finally {
       (executionContext = prevExecutionContext),
         (ReactDOMSharedInternals.p = previousPriority),
@@ -13003,14 +12729,14 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root$181 = firstScheduledRoot; null !== root$181; ) {
+      for (var root$179 = firstScheduledRoot; null !== root$179; ) {
         if (!onlyLegacy)
           if (0 !== syncTransitionLanes) {
-            var pendingLanes = root$181.pendingLanes;
+            var pendingLanes = root$179.pendingLanes;
             if (0 === pendingLanes) var JSCompiler_inline_result = 0;
             else {
-              var suspendedLanes = root$181.suspendedLanes,
-                pingedLanes = root$181.pingedLanes;
+              var suspendedLanes = root$179.suspendedLanes,
+                pingedLanes = root$179.pingedLanes;
               JSCompiler_inline_result =
                 (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
               JSCompiler_inline_result &=
@@ -13024,21 +12750,21 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
             }
             0 !== JSCompiler_inline_result &&
               ((didPerformSomeWork = !0),
-              performSyncWorkOnRoot(root$181, JSCompiler_inline_result));
+              performSyncWorkOnRoot(root$179, JSCompiler_inline_result));
           } else
             (JSCompiler_inline_result = workInProgressRootRenderLanes),
               (JSCompiler_inline_result = getNextLanes(
-                root$181,
-                root$181 === workInProgressRoot ? JSCompiler_inline_result : 0,
-                null !== root$181.cancelPendingCommit ||
-                  -1 !== root$181.timeoutHandle
+                root$179,
+                root$179 === workInProgressRoot ? JSCompiler_inline_result : 0,
+                null !== root$179.cancelPendingCommit ||
+                  -1 !== root$179.timeoutHandle
               )),
               (0 === (JSCompiler_inline_result & 3) &&
                 64 !== JSCompiler_inline_result) ||
-                checkIfRootIsPrerendering(root$181, JSCompiler_inline_result) ||
+                checkIfRootIsPrerendering(root$179, JSCompiler_inline_result) ||
                 ((didPerformSomeWork = !0),
-                performSyncWorkOnRoot(root$181, JSCompiler_inline_result));
-        root$181 = root$181.next;
+                performSyncWorkOnRoot(root$179, JSCompiler_inline_result));
+        root$179 = root$179.next;
       }
     } while (didPerformSomeWork);
     isFlushingWork = !1;
@@ -13203,7 +12929,7 @@ function createFormDataWithSubmitter(form, submitter) {
   temp.parentNode.removeChild(temp);
   return form;
 }
-function extractEvents$2(
+function extractEvents$1(
   dispatchQueue,
   domEventName,
   maybeTargetInst,
@@ -13278,56 +13004,21 @@ function extractEvents$2(
     });
   }
 }
-var isScrollEndEventSupported = canUseDOM && isEventSupported("scrollend"),
-  isTouchStarted = !1,
-  isMouseDown = !1;
-function runEventInBatch(dispatchQueue) {
-  processDispatchQueue(dispatchQueue, 0);
-}
-function fireScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-  nativeEventTarget[internalScrollTimer] = void 0;
-  if (isMouseDown || isTouchStarted)
-    debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-  else {
-    var dispatchQueue = [];
-    targetInst = accumulateTwoPhaseListeners(targetInst, "onScrollEnd");
-    0 < targetInst.length &&
-      ((nativeEvent = new SyntheticUIEvent(
-        "onScrollEnd",
-        "scrollend",
-        null,
-        nativeEvent,
-        nativeEventTarget
-      )),
-      dispatchQueue.push({ event: nativeEvent, listeners: targetInst }));
-    batchedUpdates$1(runEventInBatch, dispatchQueue);
-  }
-}
-function debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-  var existingTimer = nativeEventTarget[internalScrollTimer];
-  null != existingTimer && clearTimeout(existingTimer);
-  null !== targetInst &&
-    ((targetInst = setTimeout(
-      fireScrollEnd.bind(null, targetInst, nativeEvent, nativeEventTarget),
-      200
-    )),
-    (nativeEventTarget[internalScrollTimer] = targetInst));
-}
 for (
-  var i$jscomp$inline_1648 = 0;
-  i$jscomp$inline_1648 < simpleEventPluginEvents.length;
-  i$jscomp$inline_1648++
+  var i$jscomp$inline_1615 = 0;
+  i$jscomp$inline_1615 < simpleEventPluginEvents.length;
+  i$jscomp$inline_1615++
 ) {
-  var eventName$jscomp$inline_1649 =
-      simpleEventPluginEvents[i$jscomp$inline_1648],
-    domEventName$jscomp$inline_1650 =
-      eventName$jscomp$inline_1649.toLowerCase(),
-    capitalizedEvent$jscomp$inline_1651 =
-      eventName$jscomp$inline_1649[0].toUpperCase() +
-      eventName$jscomp$inline_1649.slice(1);
+  var eventName$jscomp$inline_1616 =
+      simpleEventPluginEvents[i$jscomp$inline_1615],
+    domEventName$jscomp$inline_1617 =
+      eventName$jscomp$inline_1616.toLowerCase(),
+    capitalizedEvent$jscomp$inline_1618 =
+      eventName$jscomp$inline_1616[0].toUpperCase() +
+      eventName$jscomp$inline_1616.slice(1);
   registerSimpleEvent(
-    domEventName$jscomp$inline_1650,
-    "on" + capitalizedEvent$jscomp$inline_1651
+    domEventName$jscomp$inline_1617,
+    "on" + capitalizedEvent$jscomp$inline_1618
   );
 }
 registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
@@ -13372,12 +13063,6 @@ registerTwoPhaseEvent(
   "onCompositionUpdate",
   "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
 );
-registerTwoPhaseEvent(
-  "onScrollEnd",
-  "scroll scrollend touchstart touchcancel touchend mousedown mouseup".split(
-    " "
-  )
-);
 var mediaEventTypes =
     "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
       " "
@@ -13660,15 +13345,35 @@ function dispatchEventForPluginEventSystem(
           case "beforetoggle":
             SyntheticEventCtor = SyntheticToggleEvent;
         }
-        var inCapturePhase = 0 !== (eventSystemFlags & 4);
-        inCapturePhase = accumulateSinglePhaseListeners(
-          targetInst,
-          reactName,
-          nativeEvent.type,
-          inCapturePhase,
-          !inCapturePhase &&
-            ("scroll" === domEventName || "scrollend" === domEventName)
-        );
+        var inCapturePhase = 0 !== (eventSystemFlags & 4),
+          accumulateTargetOnly =
+            !inCapturePhase &&
+            ("scroll" === domEventName || "scrollend" === domEventName),
+          reactEventName = inCapturePhase
+            ? null !== reactName
+              ? reactName + "Capture"
+              : null
+            : reactName;
+        inCapturePhase = [];
+        for (
+          var instance = targetInst, lastHostComponent;
+          null !== instance;
+
+        ) {
+          var _instance = instance;
+          lastHostComponent = _instance.stateNode;
+          _instance = _instance.tag;
+          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||
+            null === lastHostComponent ||
+            null === reactEventName ||
+            ((_instance = getListener(instance, reactEventName)),
+            null != _instance &&
+              inCapturePhase.push(
+                createDispatchListener(instance, _instance, lastHostComponent)
+              ));
+          if (accumulateTargetOnly) break;
+          instance = instance.return;
+        }
         0 < inCapturePhase.length &&
           ((reactName = new SyntheticEventCtor(
             reactName,
@@ -13710,103 +13415,108 @@ function dispatchEventForPluginEventSystem(
               (reactEventType = reactEventType
                 ? getClosestInstanceFromNode(reactEventType)
                 : null),
-              null !== reactEventType)
-            ) {
-              inCapturePhase = getNearestMountedFiber(reactEventType);
-              var tag = reactEventType.tag;
-              if (
-                reactEventType !== inCapturePhase ||
-                (5 !== tag && 27 !== tag && 6 !== tag)
-              )
-                reactEventType = null;
-            }
+              null !== reactEventType &&
+                ((accumulateTargetOnly =
+                  getNearestMountedFiber(reactEventType)),
+                (inCapturePhase = reactEventType.tag),
+                reactEventType !== accumulateTargetOnly ||
+                  (5 !== inCapturePhase &&
+                    27 !== inCapturePhase &&
+                    6 !== inCapturePhase)))
+            )
+              reactEventType = null;
           } else (SyntheticEventCtor = null), (reactEventType = targetInst);
           if (SyntheticEventCtor !== reactEventType) {
-            tag = SyntheticMouseEvent;
-            var leaveEventType = "onMouseLeave",
-              enterEventType = "onMouseEnter",
-              eventTypePrefix = "mouse";
+            inCapturePhase = SyntheticMouseEvent;
+            _instance = "onMouseLeave";
+            reactEventName = "onMouseEnter";
+            instance = "mouse";
             if ("pointerout" === domEventName || "pointerover" === domEventName)
-              (tag = SyntheticPointerEvent),
-                (leaveEventType = "onPointerLeave"),
-                (enterEventType = "onPointerEnter"),
-                (eventTypePrefix = "pointer");
-            inCapturePhase =
+              (inCapturePhase = SyntheticPointerEvent),
+                (_instance = "onPointerLeave"),
+                (reactEventName = "onPointerEnter"),
+                (instance = "pointer");
+            accumulateTargetOnly =
               null == SyntheticEventCtor
                 ? reactName
                 : getNodeFromInstance(SyntheticEventCtor);
-            var toNode =
+            lastHostComponent =
               null == reactEventType
                 ? reactName
                 : getNodeFromInstance(reactEventType);
-            reactName = new tag(
-              leaveEventType,
-              eventTypePrefix + "leave",
+            reactName = new inCapturePhase(
+              _instance,
+              instance + "leave",
               SyntheticEventCtor,
               nativeEvent,
               nativeEventTarget
             );
-            reactName.target = inCapturePhase;
-            reactName.relatedTarget = toNode;
-            leaveEventType = null;
+            reactName.target = accumulateTargetOnly;
+            reactName.relatedTarget = lastHostComponent;
+            _instance = null;
             getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
-              ((tag = new tag(
-                enterEventType,
-                eventTypePrefix + "enter",
+              ((inCapturePhase = new inCapturePhase(
+                reactEventName,
+                instance + "enter",
                 reactEventType,
                 nativeEvent,
                 nativeEventTarget
               )),
-              (tag.target = toNode),
-              (tag.relatedTarget = inCapturePhase),
-              (leaveEventType = tag));
-            inCapturePhase = leaveEventType;
+              (inCapturePhase.target = lastHostComponent),
+              (inCapturePhase.relatedTarget = accumulateTargetOnly),
+              (_instance = inCapturePhase));
+            accumulateTargetOnly = _instance;
             if (SyntheticEventCtor && reactEventType)
               b: {
-                tag = SyntheticEventCtor;
-                enterEventType = reactEventType;
-                eventTypePrefix = 0;
-                for (toNode = tag; toNode; toNode = getParent(toNode))
-                  eventTypePrefix++;
-                toNode = 0;
+                inCapturePhase = SyntheticEventCtor;
+                reactEventName = reactEventType;
+                instance = 0;
+                for (
+                  lastHostComponent = inCapturePhase;
+                  lastHostComponent;
+                  lastHostComponent = getParent(lastHostComponent)
+                )
+                  instance++;
+                lastHostComponent = 0;
                 for (
-                  leaveEventType = enterEventType;
-                  leaveEventType;
-                  leaveEventType = getParent(leaveEventType)
+                  _instance = reactEventName;
+                  _instance;
+                  _instance = getParent(_instance)
                 )
-                  toNode++;
-                for (; 0 < eventTypePrefix - toNode; )
-                  (tag = getParent(tag)), eventTypePrefix--;
-                for (; 0 < toNode - eventTypePrefix; )
-                  (enterEventType = getParent(enterEventType)), toNode--;
-                for (; eventTypePrefix--; ) {
+                  lastHostComponent++;
+                for (; 0 < instance - lastHostComponent; )
+                  (inCapturePhase = getParent(inCapturePhase)), instance--;
+                for (; 0 < lastHostComponent - instance; )
+                  (reactEventName = getParent(reactEventName)),
+                    lastHostComponent--;
+                for (; instance--; ) {
                   if (
-                    tag === enterEventType ||
-                    (null !== enterEventType &&
-                      tag === enterEventType.alternate)
+                    inCapturePhase === reactEventName ||
+                    (null !== reactEventName &&
+                      inCapturePhase === reactEventName.alternate)
                   )
                     break b;
-                  tag = getParent(tag);
-                  enterEventType = getParent(enterEventType);
+                  inCapturePhase = getParent(inCapturePhase);
+                  reactEventName = getParent(reactEventName);
                 }
-                tag = null;
+                inCapturePhase = null;
               }
-            else tag = null;
+            else inCapturePhase = null;
             null !== SyntheticEventCtor &&
               accumulateEnterLeaveListenersForEvent(
                 dispatchQueue,
                 reactName,
                 SyntheticEventCtor,
-                tag,
+                inCapturePhase,
                 !1
               );
             null !== reactEventType &&
-              null !== inCapturePhase &&
+              null !== accumulateTargetOnly &&
               accumulateEnterLeaveListenersForEvent(
                 dispatchQueue,
-                inCapturePhase,
+                accumulateTargetOnly,
                 reactEventType,
-                tag,
+                inCapturePhase,
                 !0
               );
           }
@@ -13951,7 +13661,7 @@ function dispatchEventForPluginEventSystem(
               listeners: eventType
             }),
             (handleEventFunc.data = fallbackData));
-      extractEvents$2(
+      extractEvents$1(
         dispatchQueue,
         domEventName,
         targetInst,
@@ -13959,58 +13669,6 @@ function dispatchEventForPluginEventSystem(
         nativeEventTarget
       );
     }
-    a: if (
-      ((fallbackData = 0 !== (eventSystemFlags & 4)),
-      "scrollend" !== domEventName)
-    ) {
-      if (!isScrollEndEventSupported && fallbackData)
-        switch (domEventName) {
-          case "scroll":
-            null !== nativeEventTarget &&
-              debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-            break;
-          case "touchstart":
-            isTouchStarted = !0;
-            break;
-          case "touchcancel":
-          case "touchend":
-            isTouchStarted = !1;
-            break;
-          case "mousedown":
-            isMouseDown = !0;
-            break;
-          case "mouseup":
-            isMouseDown = !1;
-        }
-    } else {
-      if (!isScrollEndEventSupported && null !== nativeEventTarget)
-        if (
-          ((eventType = nativeEventTarget[internalScrollTimer]),
-          null != eventType)
-        )
-          clearTimeout(eventType),
-            (nativeEventTarget[internalScrollTimer] = void 0);
-        else break a;
-      targetInst = accumulateSinglePhaseListeners(
-        targetInst,
-        "onScrollEnd",
-        "scrollend",
-        fallbackData,
-        !fallbackData
-      );
-      0 < targetInst.length &&
-        ((nativeEventTarget = new SyntheticUIEvent(
-          "onScrollEnd",
-          "scrollend",
-          null,
-          nativeEvent,
-          nativeEventTarget
-        )),
-        dispatchQueue.push({
-          event: nativeEventTarget,
-          listeners: targetInst
-        }));
-    }
     processDispatchQueue(dispatchQueue, eventSystemFlags);
   });
 }
@@ -14021,35 +13679,6 @@ function createDispatchListener(instance, listener, currentTarget) {
     currentTarget: currentTarget
   };
 }
-function accumulateSinglePhaseListeners(
-  targetFiber,
-  reactName,
-  nativeEventType,
-  inCapturePhase,
-  accumulateTargetOnly
-) {
-  reactName = inCapturePhase
-    ? null !== reactName
-      ? reactName + "Capture"
-      : null
-    : reactName;
-  for (nativeEventType = []; null !== targetFiber; ) {
-    var _instance = targetFiber;
-    inCapturePhase = _instance.stateNode;
-    _instance = _instance.tag;
-    (5 !== _instance && 26 !== _instance && 27 !== _instance) ||
-      null === inCapturePhase ||
-      null === reactName ||
-      ((_instance = getListener(targetFiber, reactName)),
-      null != _instance &&
-        nativeEventType.push(
-          createDispatchListener(targetFiber, _instance, inCapturePhase)
-        ));
-    if (accumulateTargetOnly) break;
-    targetFiber = targetFiber.return;
-  }
-  return nativeEventType;
-}
 function accumulateTwoPhaseListeners(targetFiber, reactName) {
   for (
     var captureName = reactName + "Capture", listeners = [];
@@ -14071,10 +13700,9 @@ function accumulateTwoPhaseListeners(targetFiber, reactName) {
         listeners.push(
           createDispatchListener(targetFiber, _instance2, stateNode)
         ));
-    if (3 === targetFiber.tag) return listeners;
     targetFiber = targetFiber.return;
   }
-  return [];
+  return listeners;
 }
 function getParent(inst) {
   if (null === inst) return null;
@@ -14239,9 +13867,7 @@ function setProp(domElement, tag, key, value, props, prevValue) {
       null != value && listenToNonDelegatedEvent("scroll", domElement);
       return;
     case "onScrollEnd":
-      null != value &&
-        (listenToNonDelegatedEvent("scrollend", domElement),
-        listenToNonDelegatedEvent("scroll", domElement));
+      null != value && listenToNonDelegatedEvent("scrollend", domElement);
       return;
     case "dangerouslySetInnerHTML":
       if (null != value) {
@@ -14480,9 +14106,7 @@ function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
       null != value && listenToNonDelegatedEvent("scroll", domElement);
       return;
     case "onScrollEnd":
-      null != value &&
-        (listenToNonDelegatedEvent("scrollend", domElement),
-        listenToNonDelegatedEvent("scroll", domElement));
+      null != value && listenToNonDelegatedEvent("scrollend", domElement);
       return;
     case "onClick":
       null != value && (domElement.onclick = noop$1);
@@ -14575,34 +14199,34 @@ function setInitialProperties(domElement, tag, props) {
         defaultChecked = null;
       for (hasSrc in props)
         if (props.hasOwnProperty(hasSrc)) {
-          var propValue$195 = props[hasSrc];
-          if (null != propValue$195)
+          var propValue$193 = props[hasSrc];
+          if (null != propValue$193)
             switch (hasSrc) {
               case "name":
-                hasSrcSet = propValue$195;
+                hasSrcSet = propValue$193;
                 break;
               case "type":
-                propValue = propValue$195;
+                propValue = propValue$193;
                 break;
               case "checked":
-                checked = propValue$195;
+                checked = propValue$193;
                 break;
               case "defaultChecked":
-                defaultChecked = propValue$195;
+                defaultChecked = propValue$193;
                 break;
               case "value":
-                propKey = propValue$195;
+                propKey = propValue$193;
                 break;
               case "defaultValue":
-                defaultValue = propValue$195;
+                defaultValue = propValue$193;
                 break;
               case "children":
               case "dangerouslySetInnerHTML":
-                if (null != propValue$195)
+                if (null != propValue$193)
                   throw Error(formatProdErrorMessage(137, tag));
                 break;
               default:
-                setProp(domElement, tag, hasSrc, propValue$195, props, null);
+                setProp(domElement, tag, hasSrc, propValue$193, props, null);
             }
         }
       initInput(
@@ -14689,8 +14313,6 @@ function setInitialProperties(domElement, tag, props) {
           }
       return;
     case "dialog":
-      listenToNonDelegatedEvent("beforetoggle", domElement);
-      listenToNonDelegatedEvent("toggle", domElement);
       listenToNonDelegatedEvent("cancel", domElement);
       listenToNonDelegatedEvent("close", domElement);
       break;
@@ -14741,14 +14363,14 @@ function setInitialProperties(domElement, tag, props) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (propValue$195 in props)
-          props.hasOwnProperty(propValue$195) &&
-            ((hasSrc = props[propValue$195]),
+        for (propValue$193 in props)
+          props.hasOwnProperty(propValue$193) &&
+            ((hasSrc = props[propValue$193]),
             void 0 !== hasSrc &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propValue$195,
+                propValue$193,
                 hasSrc,
                 props,
                 void 0
@@ -14796,14 +14418,14 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(domElement, tag, propKey, null, nextProps, lastProp);
           }
       }
-      for (var propKey$212 in nextProps) {
-        var propKey = nextProps[propKey$212];
-        lastProp = lastProps[propKey$212];
+      for (var propKey$210 in nextProps) {
+        var propKey = nextProps[propKey$210];
+        lastProp = lastProps[propKey$210];
         if (
-          nextProps.hasOwnProperty(propKey$212) &&
+          nextProps.hasOwnProperty(propKey$210) &&
           (null != propKey || null != lastProp)
         )
-          switch (propKey$212) {
+          switch (propKey$210) {
             case "type":
               propKey !== lastProp && (viewTransitionMutationContext = !0);
               type = propKey;
@@ -14838,7 +14460,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(
                   domElement,
                   tag,
-                  propKey$212,
+                  propKey$210,
                   propKey,
                   nextProps,
                   lastProp
@@ -14857,7 +14479,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       );
       return;
     case "select":
-      propKey = value = defaultValue = propKey$212 = null;
+      propKey = value = defaultValue = propKey$210 = null;
       for (type in lastProps)
         if (
           ((lastDefaultValue = lastProps[type]),
@@ -14889,7 +14511,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (name) {
             case "value":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
-              propKey$212 = type;
+              propKey$210 = type;
               break;
             case "defaultValue":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
@@ -14912,15 +14534,15 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       tag = defaultValue;
       lastProps = value;
       nextProps = propKey;
-      null != propKey$212
-        ? updateOptions(domElement, !!lastProps, propKey$212, !1)
+      null != propKey$210
+        ? updateOptions(domElement, !!lastProps, propKey$210, !1)
         : !!nextProps !== !!lastProps &&
           (null != tag
             ? updateOptions(domElement, !!lastProps, tag, !0)
             : updateOptions(domElement, !!lastProps, lastProps ? [] : "", !1));
       return;
     case "textarea":
-      propKey = propKey$212 = null;
+      propKey = propKey$210 = null;
       for (defaultValue in lastProps)
         if (
           ((name = lastProps[defaultValue]),
@@ -14945,7 +14567,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (value) {
             case "value":
               name !== type && (viewTransitionMutationContext = !0);
-              propKey$212 = name;
+              propKey$210 = name;
               break;
             case "defaultValue":
               name !== type && (viewTransitionMutationContext = !0);
@@ -14960,17 +14582,17 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               name !== type &&
                 setProp(domElement, tag, value, name, nextProps, type);
           }
-      updateTextarea(domElement, propKey$212, propKey);
+      updateTextarea(domElement, propKey$210, propKey);
       return;
     case "option":
-      for (var propKey$228 in lastProps)
+      for (var propKey$226 in lastProps)
         if (
-          ((propKey$212 = lastProps[propKey$228]),
-          lastProps.hasOwnProperty(propKey$228) &&
-            null != propKey$212 &&
-            !nextProps.hasOwnProperty(propKey$228))
+          ((propKey$210 = lastProps[propKey$226]),
+          lastProps.hasOwnProperty(propKey$226) &&
+            null != propKey$210 &&
+            !nextProps.hasOwnProperty(propKey$226))
         )
-          switch (propKey$228) {
+          switch (propKey$226) {
             case "selected":
               domElement.selected = !1;
               break;
@@ -14978,34 +14600,34 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               setProp(
                 domElement,
                 tag,
-                propKey$228,
+                propKey$226,
                 null,
                 nextProps,
-                propKey$212
+                propKey$210
               );
           }
       for (lastDefaultValue in nextProps)
         if (
-          ((propKey$212 = nextProps[lastDefaultValue]),
+          ((propKey$210 = nextProps[lastDefaultValue]),
           (propKey = lastProps[lastDefaultValue]),
           nextProps.hasOwnProperty(lastDefaultValue) &&
-            propKey$212 !== propKey &&
-            (null != propKey$212 || null != propKey))
+            propKey$210 !== propKey &&
+            (null != propKey$210 || null != propKey))
         )
           switch (lastDefaultValue) {
             case "selected":
-              propKey$212 !== propKey && (viewTransitionMutationContext = !0);
+              propKey$210 !== propKey && (viewTransitionMutationContext = !0);
               domElement.selected =
-                propKey$212 &&
-                "function" !== typeof propKey$212 &&
-                "symbol" !== typeof propKey$212;
+                propKey$210 &&
+                "function" !== typeof propKey$210 &&
+                "symbol" !== typeof propKey$210;
               break;
             default:
               setProp(
                 domElement,
                 tag,
                 lastDefaultValue,
-                propKey$212,
+                propKey$210,
                 nextProps,
                 propKey
               );
@@ -15026,24 +14648,24 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
     case "track":
     case "wbr":
     case "menuitem":
-      for (var propKey$233 in lastProps)
-        (propKey$212 = lastProps[propKey$233]),
-          lastProps.hasOwnProperty(propKey$233) &&
-            null != propKey$212 &&
-            !nextProps.hasOwnProperty(propKey$233) &&
-            setProp(domElement, tag, propKey$233, null, nextProps, propKey$212);
+      for (var propKey$231 in lastProps)
+        (propKey$210 = lastProps[propKey$231]),
+          lastProps.hasOwnProperty(propKey$231) &&
+            null != propKey$210 &&
+            !nextProps.hasOwnProperty(propKey$231) &&
+            setProp(domElement, tag, propKey$231, null, nextProps, propKey$210);
       for (checked in nextProps)
         if (
-          ((propKey$212 = nextProps[checked]),
+          ((propKey$210 = nextProps[checked]),
           (propKey = lastProps[checked]),
           nextProps.hasOwnProperty(checked) &&
-            propKey$212 !== propKey &&
-            (null != propKey$212 || null != propKey))
+            propKey$210 !== propKey &&
+            (null != propKey$210 || null != propKey))
         )
           switch (checked) {
             case "children":
             case "dangerouslySetInnerHTML":
-              if (null != propKey$212)
+              if (null != propKey$210)
                 throw Error(formatProdErrorMessage(137, tag));
               break;
             default:
@@ -15051,7 +14673,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 domElement,
                 tag,
                 checked,
-                propKey$212,
+                propKey$210,
                 nextProps,
                 propKey
               );
@@ -15059,49 +14681,49 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (var propKey$238 in lastProps)
-          (propKey$212 = lastProps[propKey$238]),
-            lastProps.hasOwnProperty(propKey$238) &&
-              void 0 !== propKey$212 &&
-              !nextProps.hasOwnProperty(propKey$238) &&
+        for (var propKey$236 in lastProps)
+          (propKey$210 = lastProps[propKey$236]),
+            lastProps.hasOwnProperty(propKey$236) &&
+              void 0 !== propKey$210 &&
+              !nextProps.hasOwnProperty(propKey$236) &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propKey$238,
+                propKey$236,
                 void 0,
                 nextProps,
-                propKey$212
+                propKey$210
               );
         for (defaultChecked in nextProps)
-          (propKey$212 = nextProps[defaultChecked]),
+          (propKey$210 = nextProps[defaultChecked]),
             (propKey = lastProps[defaultChecked]),
             !nextProps.hasOwnProperty(defaultChecked) ||
-              propKey$212 === propKey ||
-              (void 0 === propKey$212 && void 0 === propKey) ||
+              propKey$210 === propKey ||
+              (void 0 === propKey$210 && void 0 === propKey) ||
               setPropOnCustomElement(
                 domElement,
                 tag,
                 defaultChecked,
-                propKey$212,
+                propKey$210,
                 nextProps,
                 propKey
               );
         return;
       }
   }
-  for (var propKey$243 in lastProps)
-    (propKey$212 = lastProps[propKey$243]),
-      lastProps.hasOwnProperty(propKey$243) &&
-        null != propKey$212 &&
-        !nextProps.hasOwnProperty(propKey$243) &&
-        setProp(domElement, tag, propKey$243, null, nextProps, propKey$212);
+  for (var propKey$241 in lastProps)
+    (propKey$210 = lastProps[propKey$241]),
+      lastProps.hasOwnProperty(propKey$241) &&
+        null != propKey$210 &&
+        !nextProps.hasOwnProperty(propKey$241) &&
+        setProp(domElement, tag, propKey$241, null, nextProps, propKey$210);
   for (lastProp in nextProps)
-    (propKey$212 = nextProps[lastProp]),
+    (propKey$210 = nextProps[lastProp]),
       (propKey = lastProps[lastProp]),
       !nextProps.hasOwnProperty(lastProp) ||
-        propKey$212 === propKey ||
-        (null == propKey$212 && null == propKey) ||
-        setProp(domElement, tag, lastProp, propKey$212, nextProps, propKey);
+        propKey$210 === propKey ||
+        (null == propKey$210 && null == propKey) ||
+        setProp(domElement, tag, lastProp, propKey$210, nextProps, propKey);
 }
 var eventsEnabled = null,
   selectionInformation = null;
@@ -15230,15 +14852,6 @@ function clearSuspenseBoundary(parentInstance, suspenseInstance) {
   } while (node);
   retryIfBlockedOn(suspenseInstance);
 }
-function unhideInstance(instance, props) {
-  props = props.style;
-  props =
-    void 0 !== props && null !== props && props.hasOwnProperty("display")
-      ? props.display
-      : null;
-  instance.style.display =
-    null == props || "boolean" === typeof props ? "" : ("" + props).trim();
-}
 function restoreViewTransitionName(instance, props) {
   props = props.style;
   var viewTransitionName =
@@ -15264,16 +14877,32 @@ function restoreViewTransitionName(instance, props) {
   instance.style.viewTransitionClass =
     null == props || "boolean" === typeof props ? "" : ("" + props).trim();
 }
+function cancelRootViewTransitionName(rootContainer) {
+  rootContainer =
+    9 === rootContainer.nodeType
+      ? rootContainer.documentElement
+      : rootContainer.ownerDocument.documentElement;
+  null !== rootContainer &&
+    "" === rootContainer.style.viewTransitionName &&
+    ((rootContainer.style.viewTransitionName = "none"),
+    rootContainer.animate(
+      { opacity: [0, 0], pointerEvents: ["none", "none"] },
+      {
+        duration: 0,
+        fill: "forwards",
+        pseudoElement: "::view-transition-group(root)"
+      }
+    ),
+    rootContainer.animate(
+      { width: [0, 0], height: [0, 0] },
+      { duration: 0, fill: "forwards", pseudoElement: "::view-transition" }
+    ));
+}
 function restoreRootViewTransitionName(rootContainer) {
   rootContainer =
     9 === rootContainer.nodeType
-      ? rootContainer.body
-      : "HTML" === rootContainer.nodeName
-        ? rootContainer.ownerDocument.body
-        : rootContainer;
-  "root" === rootContainer.style.viewTransitionName &&
-    (rootContainer.style.viewTransitionName = "");
-  rootContainer = rootContainer.ownerDocument.documentElement;
+      ? rootContainer.documentElement
+      : rootContainer.ownerDocument.documentElement;
   null !== rootContainer &&
     "none" === rootContainer.style.viewTransitionName &&
     (rootContainer.style.viewTransitionName = "");
@@ -15360,78 +14989,8 @@ function startViewTransition(
     return !1;
   }
 }
-function mergeTranslate(translateA, translateB) {
-  if (!translateA || "none" === translateA) return translateB || "";
-  if (!translateB || "none" === translateB) return translateA || "";
-  translateA = translateA.split(" ");
-  translateB = translateB.split(" ");
-  var i,
-    result = "";
-  for (i = 0; i < translateA.length && i < translateB.length; i++)
-    0 < i && (result += " "),
-      (result += "calc(" + translateA[i] + " + " + translateB[i] + ")");
-  for (; i < translateA.length; i++) result += " " + translateA[i];
-  for (; i < translateB.length; i++) result += " " + translateB[i];
-  return result;
-}
-function animateGesture(
-  keyframes,
-  targetElement,
-  pseudoElement,
-  timeline,
-  rangeStart,
-  rangeEnd,
-  moveFirstFrameIntoViewport,
-  moveAllFramesIntoViewport
-) {
-  for (var i = 0; i < keyframes.length; i++) {
-    var keyframe = keyframes[i];
-    delete keyframe.easing;
-    delete keyframe.computedOffset;
-    "auto" === keyframe.width && delete keyframe.width;
-    "auto" === keyframe.height && delete keyframe.height;
-    "none" === keyframe.transform && delete keyframe.transform;
-    if (moveAllFramesIntoViewport && null == keyframe.transform)
-      if (null == keyframe.translate || "" === keyframe.translate) {
-        var elementTranslate = getComputedStyle(
-          targetElement,
-          pseudoElement
-        ).translate;
-        keyframe.translate = mergeTranslate(
-          elementTranslate,
-          "20000px 20000px"
-        );
-      } else
-        keyframe.translate = mergeTranslate(
-          keyframe.translate,
-          "20000px 20000px"
-        );
-  }
-  moveFirstFrameIntoViewport &&
-    ((moveFirstFrameIntoViewport = keyframes[0]),
-    (moveAllFramesIntoViewport = moveFirstFrameIntoViewport.transform),
-    null != moveAllFramesIntoViewport &&
-      (moveFirstFrameIntoViewport.transform =
-        "translate(20000px, 20000px) " +
-        ("none" === moveAllFramesIntoViewport
-          ? ""
-          : moveAllFramesIntoViewport)));
-  moveFirstFrameIntoViewport = rangeStart > rangeEnd;
-  targetElement.animate(keyframes, {
-    pseudoElement: pseudoElement,
-    timeline: timeline,
-    easing: "linear",
-    fill: "both",
-    direction: moveFirstFrameIntoViewport ? "normal" : "reverse",
-    rangeStart: (moveFirstFrameIntoViewport ? rangeEnd : rangeStart) + "%",
-    rangeEnd: (moveFirstFrameIntoViewport ? rangeStart : rangeEnd) + "%"
-  });
-}
 function startGestureTransition(
   rootContainer,
-  timeline,
-  rangeStart,
-  rangeEnd,
   transitionTypes,
   mutationCallback,
   animateCallback
@@ -15444,100 +15003,18 @@ function startGestureTransition(
       types: transitionTypes
     });
     ownerDocument.__reactViewTransition = transition;
-    var readyCallback = function () {
-        for (
-          var documentElement = ownerDocument.documentElement,
-            animations = documentElement.getAnimations({ subtree: !0 }),
-            foundGroups = new Set(),
-            foundNews = new Set(),
-            i = 0;
-          i < animations.length;
-          i++
-        ) {
-          var pseudoElement = animations[i].effect.pseudoElement;
-          null != pseudoElement &&
-            (pseudoElement.startsWith("::view-transition-group")
-              ? foundGroups.add(pseudoElement.slice(23))
-              : pseudoElement.startsWith("::view-transition-new") &&
-                foundNews.add(pseudoElement.slice(21)));
-        }
-        for (i = 0; i < animations.length; i++) {
-          var anim = animations[i];
-          pseudoElement = anim.effect;
-          var pseudoElement$253 = pseudoElement.pseudoElement;
-          if (
-            null != pseudoElement$253 &&
-            pseudoElement$253.startsWith("::view-transition")
-          ) {
-            anim.cancel();
-            var isGeneratedGroupAnim = !1,
-              isExitGroupAnim = !1;
-            if (pseudoElement$253.startsWith("::view-transition-group")) {
-              var groupName = pseudoElement$253.slice(23);
-              foundNews.has(groupName)
-                ? ((anim = anim.animationName),
-                  (isGeneratedGroupAnim =
-                    null != anim &&
-                    anim.startsWith("-ua-view-transition-group-anim-")))
-                : (isExitGroupAnim = !0);
-            }
-            animateGesture(
-              pseudoElement.getKeyframes(),
-              pseudoElement.target,
-              pseudoElement$253,
-              timeline,
-              rangeStart,
-              rangeEnd,
-              isGeneratedGroupAnim,
-              isExitGroupAnim
-            );
-            pseudoElement$253.startsWith("::view-transition-old") &&
-              ((pseudoElement$253 = pseudoElement$253.slice(21)),
-              foundGroups.has(pseudoElement$253) ||
-                foundNews.has(pseudoElement$253) ||
-                (foundGroups.add(pseudoElement$253),
-                animateGesture(
-                  [{}, {}],
-                  pseudoElement.target,
-                  "::view-transition-group" + pseudoElement$253,
-                  timeline,
-                  rangeStart,
-                  rangeEnd,
-                  !1,
-                  !0
-                )));
-          }
-        }
-        documentElement
-          .animate([{}, {}], {
-            pseudoElement: "::view-transition",
-            duration: 1
-          })
-          .pause();
-        animateCallback();
-      },
-      readyForAnimations =
-        -1 !== navigator.userAgent.indexOf("Chrome")
-          ? function () {
-              return requestAnimationFrame(readyCallback);
-            }
-          : readyCallback;
-    transition.ready.then(readyForAnimations, readyCallback);
+    var blockingAnim = null;
+    rootContainer = function () {
+      blockingAnim = ownerDocument.documentElement.animate([{}, {}], {
+        pseudoElement: "::view-transition",
+        duration: 1
+      });
+      blockingAnim.pause();
+      animateCallback();
+    };
+    transition.ready.then(rootContainer, rootContainer);
     transition.finished.then(function () {
-      for (
-        var animations = ownerDocument.documentElement.getAnimations({
-            subtree: !0
-          }),
-          i = 0;
-        i < animations.length;
-        i++
-      ) {
-        var anim = animations[i],
-          pseudo = anim.effect.pseudoElement;
-        null != pseudo &&
-          pseudo.startsWith("::view-transition") &&
-          anim.cancel();
-      }
+      null !== blockingAnim && blockingAnim.cancel();
       ownerDocument.__reactViewTransition === transition &&
         (ownerDocument.__reactViewTransition = null);
     });
@@ -16102,26 +15579,26 @@ function getResource(type, currentProps, pendingProps, currentResource) {
         "string" === typeof pendingProps.precedence
       ) {
         type = getStyleKey(pendingProps.href);
-        var styles$256 = getResourcesFromRoot(
+        var styles$249 = getResourcesFromRoot(
             JSCompiler_inline_result
           ).hoistableStyles,
-          resource$257 = styles$256.get(type);
-        resource$257 ||
+          resource$250 = styles$249.get(type);
+        resource$250 ||
           ((JSCompiler_inline_result =
             JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),
-          (resource$257 = {
+          (resource$250 = {
             type: "stylesheet",
             instance: null,
             count: 0,
             state: { loading: 0, preload: null }
           }),
-          styles$256.set(type, resource$257),
-          (styles$256 = JSCompiler_inline_result.querySelector(
+          styles$249.set(type, resource$250),
+          (styles$249 = JSCompiler_inline_result.querySelector(
             getStylesheetSelectorFromKey(type)
           )) &&
-            !styles$256._p &&
-            ((resource$257.instance = styles$256),
-            (resource$257.state.loading = 5)),
+            !styles$249._p &&
+            ((resource$250.instance = styles$249),
+            (resource$250.state.loading = 5)),
           preloadPropsMap.has(type) ||
             ((pendingProps = {
               rel: "preload",
@@ -16134,16 +15611,16 @@ function getResource(type, currentProps, pendingProps, currentResource) {
               referrerPolicy: pendingProps.referrerPolicy
             }),
             preloadPropsMap.set(type, pendingProps),
-            styles$256 ||
+            styles$249 ||
               preloadStylesheet(
                 JSCompiler_inline_result,
                 type,
                 pendingProps,
-                resource$257.state
+                resource$250.state
               )));
         if (currentProps && null === currentResource)
           throw Error(formatProdErrorMessage(528, ""));
-        return resource$257;
+        return resource$250;
       }
       if (currentProps && null !== currentResource)
         throw Error(formatProdErrorMessage(529, ""));
@@ -16240,37 +15717,37 @@ function acquireResource(hoistableRoot, resource, props) {
         return (resource.instance = instance);
       case "stylesheet":
         styleProps = getStyleKey(props.href);
-        var instance$262 = hoistableRoot.querySelector(
+        var instance$255 = hoistableRoot.querySelector(
           getStylesheetSelectorFromKey(styleProps)
         );
-        if (instance$262)
+        if (instance$255)
           return (
             (resource.state.loading |= 4),
-            (resource.instance = instance$262),
-            markNodeAsHoistable(instance$262),
-            instance$262
+            (resource.instance = instance$255),
+            markNodeAsHoistable(instance$255),
+            instance$255
           );
         instance = stylesheetPropsFromRawProps(props);
         (styleProps = preloadPropsMap.get(styleProps)) &&
           adoptPreloadPropsForStylesheet(instance, styleProps);
-        instance$262 = (
+        instance$255 = (
           hoistableRoot.ownerDocument || hoistableRoot
         ).createElement("link");
-        markNodeAsHoistable(instance$262);
-        var linkInstance = instance$262;
+        markNodeAsHoistable(instance$255);
+        var linkInstance = instance$255;
         linkInstance._p = new Promise(function (resolve, reject) {
           linkInstance.onload = resolve;
           linkInstance.onerror = reject;
         });
-        setInitialProperties(instance$262, "link", instance);
+        setInitialProperties(instance$255, "link", instance);
         resource.state.loading |= 4;
-        insertStylesheet(instance$262, props.precedence, hoistableRoot);
-        return (resource.instance = instance$262);
+        insertStylesheet(instance$255, props.precedence, hoistableRoot);
+        return (resource.instance = instance$255);
       case "script":
-        instance$262 = getScriptKey(props.src);
+        instance$255 = getScriptKey(props.src);
         if (
           (styleProps = hoistableRoot.querySelector(
-            getScriptSelectorFromKey(instance$262)
+            getScriptSelectorFromKey(instance$255)
           ))
         )
           return (
@@ -16279,7 +15756,7 @@ function acquireResource(hoistableRoot, resource, props) {
             styleProps
           );
         instance = props;
-        if ((styleProps = preloadPropsMap.get(instance$262)))
+        if ((styleProps = preloadPropsMap.get(instance$255)))
           (instance = assign({}, props)),
             adoptPreloadPropsForScript(instance, styleProps);
         hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
@@ -16611,7 +16088,7 @@ function FiberRootNode(
   this.pooledCache = null;
   this.pooledCacheLanes = 0;
   this.formState = formState;
-  this.gestureClone = this.stoppingGestures = this.pendingGestures = null;
+  this.stoppingGestures = this.pendingGestures = null;
   this.incompleteTransitions = new Map();
 }
 function createFiberRoot(
@@ -17299,16 +16776,16 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
     0 === i && attemptExplicitHydrationTarget(target);
   }
 };
-var isomorphicReactPackageVersion$jscomp$inline_1909 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_1867 = React.version;
 if (
-  "19.1.0-experimental-f9d78089-20250306" !==
-  isomorphicReactPackageVersion$jscomp$inline_1909
+  "19.1.0-experimental-eda36a1c-20250228" !==
+  isomorphicReactPackageVersion$jscomp$inline_1867
 )
   throw Error(
     formatProdErrorMessage(
       527,
-      isomorphicReactPackageVersion$jscomp$inline_1909,
-      "19.1.0-experimental-f9d78089-20250306"
+      isomorphicReactPackageVersion$jscomp$inline_1867,
+      "19.1.0-experimental-eda36a1c-20250228"
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -17328,24 +16805,24 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
     null === componentOrElement ? null : componentOrElement.stateNode;
   return componentOrElement;
 };
-var internals$jscomp$inline_2526 = {
+var internals$jscomp$inline_2407 = {
   bundleType: 0,
-  version: "19.1.0-experimental-f9d78089-20250306",
+  version: "19.1.0-experimental-eda36a1c-20250228",
   rendererPackageName: "react-dom",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: "19.1.0-experimental-f9d78089-20250306"
+  reconcilerVersion: "19.1.0-experimental-eda36a1c-20250228"
 };
 if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
-  var hook$jscomp$inline_2527 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
+  var hook$jscomp$inline_2408 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
   if (
-    !hook$jscomp$inline_2527.isDisabled &&
-    hook$jscomp$inline_2527.supportsFiber
+    !hook$jscomp$inline_2408.isDisabled &&
+    hook$jscomp$inline_2408.supportsFiber
   )
     try {
-      (rendererID = hook$jscomp$inline_2527.inject(
-        internals$jscomp$inline_2526
+      (rendererID = hook$jscomp$inline_2408.inject(
+        internals$jscomp$inline_2407
       )),
-        (injectedHook = hook$jscomp$inline_2527);
+        (injectedHook = hook$jscomp$inline_2408);
     } catch (err) {}
 }
 exports.createRoot = function (container, options) {
@@ -17437,4 +16914,4 @@ exports.hydrateRoot = function (container, initialChildren, options) {
   listenToAllSupportedEvents(container);
   return new ReactDOMHydrationRoot(initialChildren);
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-profiling.development.js b/node_modules/react-dom/cjs/react-dom-profiling.development.js
index 65bc3da..123a95b 100644
--- a/node_modules/react-dom/cjs/react-dom-profiling.development.js
+++ b/node_modules/react-dom/cjs/react-dom-profiling.development.js
@@ -1036,11 +1036,6 @@
       console.error("Invalid attribute name: `%s`", attributeName);
       return !1;
     }
-    function pushMutationContext() {
-      var prev = viewTransitionMutationContext;
-      viewTransitionMutationContext = !1;
-      return prev;
-    }
     function getValueForAttributeOnCustomComponent(node, name, expected) {
       if (isAttributeNameSafe(name)) {
         if (!node.hasAttribute(name)) {
@@ -3501,7 +3496,7 @@
         )),
         dispatchQueue.push({ event: nativeEvent, listeners: inst }));
     }
-    function runEventInBatch$1(dispatchQueue) {
+    function runEventInBatch(dispatchQueue) {
       processDispatchQueue(dispatchQueue, 0);
     }
     function getInstIfValueChanged(targetInst) {
@@ -3528,7 +3523,7 @@
           nativeEvent,
           getEventTarget(nativeEvent)
         );
-        batchedUpdates$2(runEventInBatch$1, dispatchQueue);
+        batchedUpdates$2(runEventInBatch, dispatchQueue);
       }
     }
     function handleEventsForInputEventPolyfill(
@@ -9545,33 +9540,33 @@
       return current;
     }
     function updateSuspenseComponent(current, workInProgress, renderLanes) {
-      var JSCompiler_object_inline_componentStack_2762;
-      var JSCompiler_object_inline_stack_2761 = workInProgress.pendingProps;
+      var JSCompiler_object_inline_componentStack_2630;
+      var JSCompiler_object_inline_stack_2629 = workInProgress.pendingProps;
       shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
-      var JSCompiler_object_inline_message_2759 = !1;
+      var JSCompiler_object_inline_message_2627 = !1;
       var didSuspend = 0 !== (workInProgress.flags & 128);
-      (JSCompiler_object_inline_componentStack_2762 = didSuspend) ||
-        (JSCompiler_object_inline_componentStack_2762 =
+      (JSCompiler_object_inline_componentStack_2630 = didSuspend) ||
+        (JSCompiler_object_inline_componentStack_2630 =
           null !== current && null === current.memoizedState
             ? !1
             : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
-      JSCompiler_object_inline_componentStack_2762 &&
-        ((JSCompiler_object_inline_message_2759 = !0),
+      JSCompiler_object_inline_componentStack_2630 &&
+        ((JSCompiler_object_inline_message_2627 = !0),
         (workInProgress.flags &= -129));
-      JSCompiler_object_inline_componentStack_2762 =
+      JSCompiler_object_inline_componentStack_2630 =
         0 !== (workInProgress.flags & 32);
       workInProgress.flags &= -33;
       if (null === current) {
         if (isHydrating) {
-          JSCompiler_object_inline_message_2759
+          JSCompiler_object_inline_message_2627
             ? pushPrimaryTreeSuspenseHandler(workInProgress)
             : reuseSuspenseHandlerOnStack(workInProgress);
           if (isHydrating) {
-            var JSCompiler_object_inline_digest_2760 = nextHydratableInstance;
+            var JSCompiler_object_inline_digest_2628 = nextHydratableInstance;
             var JSCompiler_temp;
-            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2760)) {
+            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2628)) {
               c: {
-                var instance = JSCompiler_object_inline_digest_2760;
+                var instance = JSCompiler_object_inline_digest_2628;
                 for (
                   JSCompiler_temp = rootOrSingletonContext;
                   8 !== instance.nodeType;
@@ -9613,87 +9608,87 @@
             JSCompiler_temp &&
               (warnNonHydratedInstance(
                 workInProgress,
-                JSCompiler_object_inline_digest_2760
+                JSCompiler_object_inline_digest_2628
               ),
               throwOnHydrationMismatch(workInProgress));
           }
-          JSCompiler_object_inline_digest_2760 = workInProgress.memoizedState;
+          JSCompiler_object_inline_digest_2628 = workInProgress.memoizedState;
           if (
-            null !== JSCompiler_object_inline_digest_2760 &&
-            ((JSCompiler_object_inline_digest_2760 =
-              JSCompiler_object_inline_digest_2760.dehydrated),
-            null !== JSCompiler_object_inline_digest_2760)
+            null !== JSCompiler_object_inline_digest_2628 &&
+            ((JSCompiler_object_inline_digest_2628 =
+              JSCompiler_object_inline_digest_2628.dehydrated),
+            null !== JSCompiler_object_inline_digest_2628)
           )
             return (
-              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2760)
+              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2628)
                 ? (workInProgress.lanes = 32)
                 : (workInProgress.lanes = 536870912),
               null
             );
           popSuspenseHandler(workInProgress);
         }
-        JSCompiler_object_inline_digest_2760 =
-          JSCompiler_object_inline_stack_2761.children;
-        JSCompiler_temp = JSCompiler_object_inline_stack_2761.fallback;
-        if (JSCompiler_object_inline_message_2759)
+        JSCompiler_object_inline_digest_2628 =
+          JSCompiler_object_inline_stack_2629.children;
+        JSCompiler_temp = JSCompiler_object_inline_stack_2629.fallback;
+        if (JSCompiler_object_inline_message_2627)
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2761 =
+            (JSCompiler_object_inline_stack_2629 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2760,
+                JSCompiler_object_inline_digest_2628,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2759 = workInProgress.child),
-            (JSCompiler_object_inline_message_2759.memoizedState =
+            (JSCompiler_object_inline_message_2627 = workInProgress.child),
+            (JSCompiler_object_inline_message_2627.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2759.childLanes =
+            (JSCompiler_object_inline_message_2627.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2762,
+                JSCompiler_object_inline_componentStack_2630,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
-            JSCompiler_object_inline_stack_2761
+            JSCompiler_object_inline_stack_2629
           );
         if (
           "number" ===
-          typeof JSCompiler_object_inline_stack_2761.unstable_expectedLoadTime
+          typeof JSCompiler_object_inline_stack_2629.unstable_expectedLoadTime
         )
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2761 =
+            (JSCompiler_object_inline_stack_2629 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2760,
+                JSCompiler_object_inline_digest_2628,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2759 = workInProgress.child),
-            (JSCompiler_object_inline_message_2759.memoizedState =
+            (JSCompiler_object_inline_message_2627 = workInProgress.child),
+            (JSCompiler_object_inline_message_2627.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2759.childLanes =
+            (JSCompiler_object_inline_message_2627.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2762,
+                JSCompiler_object_inline_componentStack_2630,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
             (workInProgress.lanes = 4194304),
-            JSCompiler_object_inline_stack_2761
+            JSCompiler_object_inline_stack_2629
           );
         pushPrimaryTreeSuspenseHandler(workInProgress);
         return mountSuspensePrimaryChildren(
           workInProgress,
-          JSCompiler_object_inline_digest_2760
+          JSCompiler_object_inline_digest_2628
         );
       }
       var prevState = current.memoizedState;
       if (
         null !== prevState &&
-        ((JSCompiler_object_inline_digest_2760 = prevState.dehydrated),
-        null !== JSCompiler_object_inline_digest_2760)
+        ((JSCompiler_object_inline_digest_2628 = prevState.dehydrated),
+        null !== JSCompiler_object_inline_digest_2628)
       ) {
         if (didSuspend)
           workInProgress.flags & 256
@@ -9710,94 +9705,94 @@
                 (workInProgress.flags |= 128),
                 (workInProgress = null))
               : (reuseSuspenseHandlerOnStack(workInProgress),
-                (JSCompiler_object_inline_message_2759 =
-                  JSCompiler_object_inline_stack_2761.fallback),
-                (JSCompiler_object_inline_digest_2760 = workInProgress.mode),
-                (JSCompiler_object_inline_stack_2761 =
+                (JSCompiler_object_inline_message_2627 =
+                  JSCompiler_object_inline_stack_2629.fallback),
+                (JSCompiler_object_inline_digest_2628 = workInProgress.mode),
+                (JSCompiler_object_inline_stack_2629 =
                   mountWorkInProgressOffscreenFiber(
                     {
                       mode: "visible",
-                      children: JSCompiler_object_inline_stack_2761.children
+                      children: JSCompiler_object_inline_stack_2629.children
                     },
-                    JSCompiler_object_inline_digest_2760
+                    JSCompiler_object_inline_digest_2628
                   )),
-                (JSCompiler_object_inline_message_2759 =
+                (JSCompiler_object_inline_message_2627 =
                   createFiberFromFragment(
-                    JSCompiler_object_inline_message_2759,
-                    JSCompiler_object_inline_digest_2760,
+                    JSCompiler_object_inline_message_2627,
+                    JSCompiler_object_inline_digest_2628,
                     renderLanes,
                     null
                   )),
-                (JSCompiler_object_inline_message_2759.flags |= 2),
-                (JSCompiler_object_inline_stack_2761.return = workInProgress),
-                (JSCompiler_object_inline_message_2759.return = workInProgress),
-                (JSCompiler_object_inline_stack_2761.sibling =
-                  JSCompiler_object_inline_message_2759),
-                (workInProgress.child = JSCompiler_object_inline_stack_2761),
+                (JSCompiler_object_inline_message_2627.flags |= 2),
+                (JSCompiler_object_inline_stack_2629.return = workInProgress),
+                (JSCompiler_object_inline_message_2627.return = workInProgress),
+                (JSCompiler_object_inline_stack_2629.sibling =
+                  JSCompiler_object_inline_message_2627),
+                (workInProgress.child = JSCompiler_object_inline_stack_2629),
                 reconcileChildFibers(
                   workInProgress,
                   current.child,
                   null,
                   renderLanes
                 ),
-                (JSCompiler_object_inline_stack_2761 = workInProgress.child),
-                (JSCompiler_object_inline_stack_2761.memoizedState =
+                (JSCompiler_object_inline_stack_2629 = workInProgress.child),
+                (JSCompiler_object_inline_stack_2629.memoizedState =
                   mountSuspenseOffscreenState(renderLanes)),
-                (JSCompiler_object_inline_stack_2761.childLanes =
+                (JSCompiler_object_inline_stack_2629.childLanes =
                   getRemainingWorkInPrimaryTree(
                     current,
-                    JSCompiler_object_inline_componentStack_2762,
+                    JSCompiler_object_inline_componentStack_2630,
                     renderLanes
                   )),
                 (workInProgress.memoizedState = SUSPENDED_MARKER),
-                (workInProgress = JSCompiler_object_inline_message_2759));
+                (workInProgress = JSCompiler_object_inline_message_2627));
         else if (
           (pushPrimaryTreeSuspenseHandler(workInProgress),
           isHydrating &&
             console.error(
               "We should not be hydrating here. This is a bug in React. Please file a bug."
             ),
-          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2760))
+          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2628))
         ) {
-          JSCompiler_object_inline_componentStack_2762 =
-            JSCompiler_object_inline_digest_2760.nextSibling &&
-            JSCompiler_object_inline_digest_2760.nextSibling.dataset;
-          if (JSCompiler_object_inline_componentStack_2762) {
-            JSCompiler_temp = JSCompiler_object_inline_componentStack_2762.dgst;
-            var message = JSCompiler_object_inline_componentStack_2762.msg;
-            instance = JSCompiler_object_inline_componentStack_2762.stck;
+          JSCompiler_object_inline_componentStack_2630 =
+            JSCompiler_object_inline_digest_2628.nextSibling &&
+            JSCompiler_object_inline_digest_2628.nextSibling.dataset;
+          if (JSCompiler_object_inline_componentStack_2630) {
+            JSCompiler_temp = JSCompiler_object_inline_componentStack_2630.dgst;
+            var message = JSCompiler_object_inline_componentStack_2630.msg;
+            instance = JSCompiler_object_inline_componentStack_2630.stck;
             var componentStack =
-              JSCompiler_object_inline_componentStack_2762.cstck;
+              JSCompiler_object_inline_componentStack_2630.cstck;
           }
-          JSCompiler_object_inline_message_2759 = message;
-          JSCompiler_object_inline_digest_2760 = JSCompiler_temp;
-          JSCompiler_object_inline_stack_2761 = instance;
-          JSCompiler_temp = JSCompiler_object_inline_componentStack_2762 =
+          JSCompiler_object_inline_message_2627 = message;
+          JSCompiler_object_inline_digest_2628 = JSCompiler_temp;
+          JSCompiler_object_inline_stack_2629 = instance;
+          JSCompiler_temp = JSCompiler_object_inline_componentStack_2630 =
             componentStack;
-          "POSTPONE" !== JSCompiler_object_inline_digest_2760 &&
-            ((JSCompiler_object_inline_componentStack_2762 =
-              JSCompiler_object_inline_message_2759
-                ? Error(JSCompiler_object_inline_message_2759)
+          "POSTPONE" !== JSCompiler_object_inline_digest_2628 &&
+            ((JSCompiler_object_inline_componentStack_2630 =
+              JSCompiler_object_inline_message_2627
+                ? Error(JSCompiler_object_inline_message_2627)
                 : Error(
                     "The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."
                   )),
-            (JSCompiler_object_inline_componentStack_2762.stack =
-              JSCompiler_object_inline_stack_2761 || ""),
-            (JSCompiler_object_inline_componentStack_2762.digest =
-              JSCompiler_object_inline_digest_2760),
-            (JSCompiler_object_inline_stack_2761 =
+            (JSCompiler_object_inline_componentStack_2630.stack =
+              JSCompiler_object_inline_stack_2629 || ""),
+            (JSCompiler_object_inline_componentStack_2630.digest =
+              JSCompiler_object_inline_digest_2628),
+            (JSCompiler_object_inline_stack_2629 =
               void 0 === JSCompiler_temp ? null : JSCompiler_temp),
-            (JSCompiler_object_inline_message_2759 = {
-              value: JSCompiler_object_inline_componentStack_2762,
+            (JSCompiler_object_inline_message_2627 = {
+              value: JSCompiler_object_inline_componentStack_2630,
               source: null,
-              stack: JSCompiler_object_inline_stack_2761
+              stack: JSCompiler_object_inline_stack_2629
             }),
-            "string" === typeof JSCompiler_object_inline_stack_2761 &&
+            "string" === typeof JSCompiler_object_inline_stack_2629 &&
               CapturedStacks.set(
-                JSCompiler_object_inline_componentStack_2762,
-                JSCompiler_object_inline_message_2759
+                JSCompiler_object_inline_componentStack_2630,
+                JSCompiler_object_inline_message_2627
               ),
-            queueHydrationError(JSCompiler_object_inline_message_2759));
+            queueHydrationError(JSCompiler_object_inline_message_2627));
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
             workInProgress,
@@ -9811,44 +9806,44 @@
               renderLanes,
               !1
             ),
-          (JSCompiler_object_inline_componentStack_2762 =
+          (JSCompiler_object_inline_componentStack_2630 =
             0 !== (renderLanes & current.childLanes)),
-          didReceiveUpdate || JSCompiler_object_inline_componentStack_2762)
+          didReceiveUpdate || JSCompiler_object_inline_componentStack_2630)
         ) {
-          JSCompiler_object_inline_componentStack_2762 = workInProgressRoot;
+          JSCompiler_object_inline_componentStack_2630 = workInProgressRoot;
           if (
-            null !== JSCompiler_object_inline_componentStack_2762 &&
-            ((JSCompiler_object_inline_stack_2761 = renderLanes & -renderLanes),
-            (JSCompiler_object_inline_stack_2761 =
-              0 !== (JSCompiler_object_inline_stack_2761 & 42)
+            null !== JSCompiler_object_inline_componentStack_2630 &&
+            ((JSCompiler_object_inline_stack_2629 = renderLanes & -renderLanes),
+            (JSCompiler_object_inline_stack_2629 =
+              0 !== (JSCompiler_object_inline_stack_2629 & 42)
                 ? 1
                 : getBumpedLaneForHydrationByLane(
-                    JSCompiler_object_inline_stack_2761
+                    JSCompiler_object_inline_stack_2629
                   )),
-            (JSCompiler_object_inline_stack_2761 =
+            (JSCompiler_object_inline_stack_2629 =
               0 !==
-              (JSCompiler_object_inline_stack_2761 &
-                (JSCompiler_object_inline_componentStack_2762.suspendedLanes |
+              (JSCompiler_object_inline_stack_2629 &
+                (JSCompiler_object_inline_componentStack_2630.suspendedLanes |
                   renderLanes))
                 ? 0
-                : JSCompiler_object_inline_stack_2761),
-            0 !== JSCompiler_object_inline_stack_2761 &&
-              JSCompiler_object_inline_stack_2761 !== prevState.retryLane)
+                : JSCompiler_object_inline_stack_2629),
+            0 !== JSCompiler_object_inline_stack_2629 &&
+              JSCompiler_object_inline_stack_2629 !== prevState.retryLane)
           )
             throw (
-              ((prevState.retryLane = JSCompiler_object_inline_stack_2761),
+              ((prevState.retryLane = JSCompiler_object_inline_stack_2629),
               enqueueConcurrentRenderForLane(
                 current,
-                JSCompiler_object_inline_stack_2761
+                JSCompiler_object_inline_stack_2629
               ),
               scheduleUpdateOnFiber(
-                JSCompiler_object_inline_componentStack_2762,
+                JSCompiler_object_inline_componentStack_2630,
                 current,
-                JSCompiler_object_inline_stack_2761
+                JSCompiler_object_inline_stack_2629
               ),
               SelectiveHydrationException)
             );
-          JSCompiler_object_inline_digest_2760.data ===
+          JSCompiler_object_inline_digest_2628.data ===
             SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
@@ -9856,14 +9851,14 @@
             renderLanes
           );
         } else
-          JSCompiler_object_inline_digest_2760.data ===
+          JSCompiler_object_inline_digest_2628.data ===
           SUSPENSE_PENDING_START_DATA
             ? ((workInProgress.flags |= 192),
               (workInProgress.child = current.child),
               (workInProgress = null))
             : ((current = prevState.treeContext),
               (nextHydratableInstance = getNextHydratable(
-                JSCompiler_object_inline_digest_2760.nextSibling
+                JSCompiler_object_inline_digest_2628.nextSibling
               )),
               (hydrationParentFiber = workInProgress),
               (isHydrating = !0),
@@ -9881,54 +9876,54 @@
                 (treeContextProvider = workInProgress)),
               (workInProgress = mountSuspensePrimaryChildren(
                 workInProgress,
-                JSCompiler_object_inline_stack_2761.children
+                JSCompiler_object_inline_stack_2629.children
               )),
               (workInProgress.flags |= 4096));
         return workInProgress;
       }
-      if (JSCompiler_object_inline_message_2759)
+      if (JSCompiler_object_inline_message_2627)
         return (
           reuseSuspenseHandlerOnStack(workInProgress),
-          (JSCompiler_object_inline_message_2759 =
-            JSCompiler_object_inline_stack_2761.fallback),
-          (JSCompiler_object_inline_digest_2760 = workInProgress.mode),
+          (JSCompiler_object_inline_message_2627 =
+            JSCompiler_object_inline_stack_2629.fallback),
+          (JSCompiler_object_inline_digest_2628 = workInProgress.mode),
           (JSCompiler_temp = current.child),
           (instance = JSCompiler_temp.sibling),
-          (JSCompiler_object_inline_stack_2761 = createWorkInProgress(
+          (JSCompiler_object_inline_stack_2629 = createWorkInProgress(
             JSCompiler_temp,
             {
               mode: "hidden",
-              children: JSCompiler_object_inline_stack_2761.children
+              children: JSCompiler_object_inline_stack_2629.children
             }
           )),
-          (JSCompiler_object_inline_stack_2761.subtreeFlags =
+          (JSCompiler_object_inline_stack_2629.subtreeFlags =
             JSCompiler_temp.subtreeFlags & 65011712),
           null !== instance
-            ? (JSCompiler_object_inline_message_2759 = createWorkInProgress(
+            ? (JSCompiler_object_inline_message_2627 = createWorkInProgress(
                 instance,
-                JSCompiler_object_inline_message_2759
+                JSCompiler_object_inline_message_2627
               ))
-            : ((JSCompiler_object_inline_message_2759 = createFiberFromFragment(
-                JSCompiler_object_inline_message_2759,
-                JSCompiler_object_inline_digest_2760,
+            : ((JSCompiler_object_inline_message_2627 = createFiberFromFragment(
+                JSCompiler_object_inline_message_2627,
+                JSCompiler_object_inline_digest_2628,
                 renderLanes,
                 null
               )),
-              (JSCompiler_object_inline_message_2759.flags |= 2)),
-          (JSCompiler_object_inline_message_2759.return = workInProgress),
-          (JSCompiler_object_inline_stack_2761.return = workInProgress),
-          (JSCompiler_object_inline_stack_2761.sibling =
-            JSCompiler_object_inline_message_2759),
-          (workInProgress.child = JSCompiler_object_inline_stack_2761),
-          (JSCompiler_object_inline_stack_2761 =
-            JSCompiler_object_inline_message_2759),
-          (JSCompiler_object_inline_message_2759 = workInProgress.child),
-          (JSCompiler_object_inline_digest_2760 = current.child.memoizedState),
-          null === JSCompiler_object_inline_digest_2760
-            ? (JSCompiler_object_inline_digest_2760 =
+              (JSCompiler_object_inline_message_2627.flags |= 2)),
+          (JSCompiler_object_inline_message_2627.return = workInProgress),
+          (JSCompiler_object_inline_stack_2629.return = workInProgress),
+          (JSCompiler_object_inline_stack_2629.sibling =
+            JSCompiler_object_inline_message_2627),
+          (workInProgress.child = JSCompiler_object_inline_stack_2629),
+          (JSCompiler_object_inline_stack_2629 =
+            JSCompiler_object_inline_message_2627),
+          (JSCompiler_object_inline_message_2627 = workInProgress.child),
+          (JSCompiler_object_inline_digest_2628 = current.child.memoizedState),
+          null === JSCompiler_object_inline_digest_2628
+            ? (JSCompiler_object_inline_digest_2628 =
                 mountSuspenseOffscreenState(renderLanes))
             : ((JSCompiler_temp =
-                JSCompiler_object_inline_digest_2760.cachePool),
+                JSCompiler_object_inline_digest_2628.cachePool),
               null !== JSCompiler_temp
                 ? ((instance = CacheContext._currentValue),
                   (JSCompiler_temp =
@@ -9936,38 +9931,38 @@
                       ? { parent: instance, pool: instance }
                       : JSCompiler_temp))
                 : (JSCompiler_temp = getSuspendedCache()),
-              (JSCompiler_object_inline_digest_2760 = {
+              (JSCompiler_object_inline_digest_2628 = {
                 baseLanes:
-                  JSCompiler_object_inline_digest_2760.baseLanes | renderLanes,
+                  JSCompiler_object_inline_digest_2628.baseLanes | renderLanes,
                 cachePool: JSCompiler_temp
               })),
-          (JSCompiler_object_inline_message_2759.memoizedState =
-            JSCompiler_object_inline_digest_2760),
-          (JSCompiler_object_inline_message_2759.childLanes =
+          (JSCompiler_object_inline_message_2627.memoizedState =
+            JSCompiler_object_inline_digest_2628),
+          (JSCompiler_object_inline_message_2627.childLanes =
             getRemainingWorkInPrimaryTree(
               current,
-              JSCompiler_object_inline_componentStack_2762,
+              JSCompiler_object_inline_componentStack_2630,
               renderLanes
             )),
           (workInProgress.memoizedState = SUSPENDED_MARKER),
-          JSCompiler_object_inline_stack_2761
+          JSCompiler_object_inline_stack_2629
         );
       pushPrimaryTreeSuspenseHandler(workInProgress);
       renderLanes = current.child;
       current = renderLanes.sibling;
       renderLanes = createWorkInProgress(renderLanes, {
         mode: "visible",
-        children: JSCompiler_object_inline_stack_2761.children
+        children: JSCompiler_object_inline_stack_2629.children
       });
       renderLanes.return = workInProgress;
       renderLanes.sibling = null;
       null !== current &&
-        ((JSCompiler_object_inline_componentStack_2762 =
+        ((JSCompiler_object_inline_componentStack_2630 =
           workInProgress.deletions),
-        null === JSCompiler_object_inline_componentStack_2762
+        null === JSCompiler_object_inline_componentStack_2630
           ? ((workInProgress.deletions = [current]),
             (workInProgress.flags |= 16))
-          : JSCompiler_object_inline_componentStack_2762.push(current));
+          : JSCompiler_object_inline_componentStack_2630.push(current));
       workInProgress.child = renderLanes;
       workInProgress.memoizedState = null;
       return renderLanes;
@@ -12130,7 +12125,7 @@
         focusedElem: root,
         selectionRange: JSCompiler_temp
       };
-      _enabled = !1;
+      shouldStartViewTransition = _enabled = !1;
       committedLanes = (committedLanes & 335544064) === committedLanes;
       nextEffect = firstChild;
       for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
@@ -13283,7 +13278,8 @@
             (offscreenSubtreeWasHidden ||
               null === current ||
               safelyDetachRef(current, current.return));
-          flags = pushMutationContext();
+          flags = viewTransitionMutationContext;
+          viewTransitionMutationContext = !1;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
           (lanes & 335544064) === lanes &&
@@ -13369,30 +13365,7 @@
                       }
                     );
                 }
-              finishedWork = root.containerInfo;
-              finishedWork =
-                9 === finishedWork.nodeType
-                  ? finishedWork.documentElement
-                  : finishedWork.ownerDocument.documentElement;
-              null !== finishedWork &&
-                "" === finishedWork.style.viewTransitionName &&
-                ((finishedWork.style.viewTransitionName = "none"),
-                finishedWork.animate(
-                  { opacity: [0, 0], pointerEvents: ["none", "none"] },
-                  {
-                    duration: 0,
-                    fill: "forwards",
-                    pseudoElement: "::view-transition-group(root)"
-                  }
-                ),
-                finishedWork.animate(
-                  { width: [0, 0], height: [0, 0] },
-                  {
-                    duration: 0,
-                    fill: "forwards",
-                    pseudoElement: "::view-transition"
-                  }
-                ));
+              cancelRootViewTransitionName(root.containerInfo);
             }
             break;
           case 5:
@@ -14999,8 +14972,7 @@
           null != props.onScroll &&
             listenToNonDelegatedEvent("scroll", didHydrate),
           null != props.onScrollEnd &&
-            (listenToNonDelegatedEvent("scrollend", didHydrate),
-            listenToNonDelegatedEvent("scroll", didHydrate)),
+            listenToNonDelegatedEvent("scrollend", didHydrate),
           null != props.onClick && (didHydrate.onclick = noop$2),
           (didHydrate = !0))
         : (didHydrate = !1);
@@ -15094,18 +15066,14 @@
     }
     function emitPendingHydrationWarnings() {
       var diffRoot = hydrationDiffRootDEV;
-      if (null !== diffRoot) {
-        hydrationDiffRootDEV = null;
-        for (var diff = describeDiff(diffRoot); 0 < diffRoot.children.length; )
-          diffRoot = diffRoot.children[0];
-        runWithFiberInDEV(diffRoot.fiber, function () {
-          console.error(
-            "A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s",
-            "https://react.dev/link/hydration-mismatch",
-            diff
-          );
-        });
-      }
+      null !== diffRoot &&
+        ((hydrationDiffRootDEV = null),
+        (diffRoot = describeDiff(diffRoot)),
+        console.error(
+          "A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s",
+          "https://react.dev/link/hydration-mismatch",
+          diffRoot
+        ));
     }
     function getViewTransitionName(props, instance) {
       return null != props.name && "auto" !== props.name
@@ -15934,173 +15902,6 @@
           popProvider(CacheContext, interruptedWork);
       }
     }
-    function recursivelyInsertClonesFromExistingTree(
-      parentFiber,
-      hostParentClone
-    ) {
-      for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-        switch (parentFiber.tag) {
-          case 5:
-            var clone = parentFiber.stateNode.cloneNode(!0);
-            hostParentClone.appendChild(clone);
-            unhideHostChildren &&
-              unhideInstance(clone, parentFiber.memoizedProps);
-            break;
-          case 6:
-            clone = parentFiber.stateNode;
-            if (null === clone)
-              throw Error(
-                "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
-              );
-            clone = clone.cloneNode(!1);
-            hostParentClone.appendChild(clone);
-            unhideHostChildren && (clone.nodeValue = parentFiber.memoizedProps);
-            break;
-          case 4:
-            break;
-          case 22:
-            null === parentFiber.memoizedState &&
-              recursivelyInsertClonesFromExistingTree(
-                parentFiber,
-                hostParentClone
-              );
-            break;
-          case 30:
-            clone = pushMutationContext();
-            recursivelyInsertClonesFromExistingTree(
-              parentFiber,
-              hostParentClone
-            );
-            viewTransitionMutationContext = clone;
-            break;
-          default:
-            recursivelyInsertClonesFromExistingTree(
-              parentFiber,
-              hostParentClone
-            );
-        }
-        parentFiber = parentFiber.sibling;
-      }
-    }
-    function recursivelyInsertClones(parentFiber, hostParentClone$jscomp$0) {
-      if (
-        null === parentFiber.alternate ||
-        0 !== (parentFiber.subtreeFlags & 13878)
-      )
-        for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-          var finishedWork = parentFiber,
-            hostParentClone = hostParentClone$jscomp$0,
-            current = finishedWork.alternate,
-            flags = finishedWork.flags;
-          switch (finishedWork.tag) {
-            case 26:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              break;
-            case 27:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              if (flags & 4)
-                if (null === current)
-                  console.error(
-                    "useSwipeTransition() caused something to render a new <%s>. This is not possible in the current implementation. Make sure that the swipe doesn't mount any new <%s> elements.",
-                    finishedWork.type,
-                    finishedWork.type
-                  );
-                else {
-                  hostParentClone = finishedWork.memoizedProps;
-                  current = current.memoizedProps;
-                  flags = finishedWork.stateNode;
-                  var clone = finishedWork.type;
-                  var prev = pushMutationContext();
-                  try {
-                    commitUpdate(
-                      flags,
-                      clone,
-                      current,
-                      hostParentClone,
-                      finishedWork
-                    ),
-                      viewTransitionMutationContext &&
-                        console.error(
-                          "useSwipeTransition() caused something to mutate <%s>. This is not possible in the current implementation. Make sure that the swipe doesn't update any state which causes <%s> to change.",
-                          finishedWork.type,
-                          finishedWork.type
-                        ),
-                      commitUpdate(
-                        flags,
-                        clone,
-                        hostParentClone,
-                        current,
-                        finishedWork
-                      );
-                  } finally {
-                    viewTransitionMutationContext = prev;
-                  }
-                }
-              break;
-            case 5:
-              clone = finishedWork.stateNode;
-              null === current
-                ? hostParentClone.appendChild(clone)
-                : (null === finishedWork.child
-                    ? ((clone = clone.cloneNode(!0)),
-                      finishedWork.flags & 32 && resetTextContent(clone))
-                    : (clone = clone.cloneNode(!1)),
-                  flags & 4 &&
-                    commitUpdate(
-                      clone,
-                      finishedWork.type,
-                      current.memoizedProps,
-                      finishedWork.memoizedProps
-                    ),
-                  unhideHostChildren
-                    ? ((unhideHostChildren = !1),
-                      recursivelyInsertClones(finishedWork, clone),
-                      hostParentClone.appendChild(clone),
-                      (unhideHostChildren = !0),
-                      unhideInstance(clone, finishedWork.memoizedProps))
-                    : (recursivelyInsertClones(finishedWork, clone),
-                      hostParentClone.appendChild(clone)));
-              break;
-            case 6:
-              clone = finishedWork.stateNode;
-              if (null === clone)
-                throw Error(
-                  "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
-                );
-              null === current
-                ? hostParentClone.appendChild(clone)
-                : ((clone = clone.cloneNode(!1)),
-                  flags & 4 && (clone.nodeValue = current.memoizedProps),
-                  hostParentClone.appendChild(clone),
-                  unhideHostChildren &&
-                    (clone.nodeValue = finishedWork.memoizedProps));
-              break;
-            case 4:
-              break;
-            case 22:
-              null === finishedWork.memoizedState &&
-                ((unhideHostChildren =
-                  (current = unhideHostChildren) || 0 !== (flags & 8192)),
-                recursivelyInsertClones(finishedWork, hostParentClone),
-                (unhideHostChildren = current));
-              break;
-            case 30:
-              current = pushMutationContext();
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              viewTransitionMutationContext && (finishedWork.flags |= 4);
-              viewTransitionMutationContext = current;
-              break;
-            default:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-          }
-          parentFiber = parentFiber.sibling;
-        }
-      else
-        recursivelyInsertClonesFromExistingTree(
-          parentFiber,
-          hostParentClone$jscomp$0
-        );
-    }
     function onCommitRoot() {
       commitHooks.forEach(function (commitHook) {
         return commitHook();
@@ -17447,7 +17248,6 @@
             ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
             : suspendedCommitReason === THROTTLED_COMMIT &&
               logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-          shouldStartViewTransition = !1;
           suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
           if (
             0 !== (finishedWork.subtreeFlags & 13878) ||
@@ -17797,158 +17597,22 @@
         flushSyncWorkAcrossRoots_impl(0, !1);
       }
     }
-    function commitGestureOnRoot(root, finishedWork) {
+    function commitGestureOnRoot(root) {
       var finishedGesture = root.pendingGestures;
       if (null === finishedGesture) ensureRootIsScheduled(root);
       else {
         deleteScheduledGesture(root, finishedGesture);
-        var prevTransition = ReactSharedInternals.T;
-        ReactSharedInternals.T = null;
-        var previousPriority = ReactDOMSharedInternals.p;
-        ReactDOMSharedInternals.p = DiscreteEventPriority;
-        var prevExecutionContext = executionContext;
+        var prevTransition = ReactSharedInternals.T,
+          previousPriority = ReactDOMSharedInternals.p,
+          prevExecutionContext = executionContext;
         executionContext |= CommitContext;
-        try {
-          unhideHostChildren = !1;
-          didWarnForRootClone ||
-            ((didWarnForRootClone = !0),
-            console.warn(
-              "useSwipeTransition() caused something to mutate or relayout the root. This currently requires a clone of the whole document. Make sure to add a <ViewTransition> directly around an absolutely positioned DOM node to minimize the impact of any changes caused by the Swipe Transition."
-            ));
-          var rootContainer = root.containerInfo,
-            documentElement =
-              9 === rootContainer.nodeType
-                ? rootContainer.documentElement
-                : rootContainer.ownerDocument.documentElement;
-          null !== documentElement &&
-            "" === documentElement.style.viewTransitionName &&
-            (documentElement.style.viewTransitionName = "none");
-          var containerInstance =
-            9 === rootContainer.nodeType
-              ? rootContainer.body
-              : "HTML" === rootContainer.nodeName
-                ? rootContainer.ownerDocument.body
-                : rootContainer;
-          var containerParent = containerInstance.parentNode;
-          if (null === containerParent)
-            throw Error(
-              "Cannot use a useSwipeTransition() in a detached root."
-            );
-          var clone = containerInstance.cloneNode(!1),
-            computedStyle = getComputedStyle(containerInstance);
-          if (
-            "absolute" !== computedStyle.position &&
-            "fixed" !== computedStyle.position
-          ) {
-            for (
-              rootContainer = containerParent;
-              null != rootContainer.parentNode &&
-              9 !== rootContainer.parentNode.nodeType &&
-              "static" === getComputedStyle(rootContainer).position;
-
-            )
-              rootContainer = rootContainer.parentNode;
-            var positionedAncestorStyle = rootContainer.style,
-              containerInstanceStyle = containerInstance.style,
-              prevAncestorTranslate = positionedAncestorStyle.translate,
-              prevAncestorScale = positionedAncestorStyle.scale,
-              prevAncestorRotate = positionedAncestorStyle.rotate,
-              prevAncestorTransform = positionedAncestorStyle.transform,
-              prevTranslate = containerInstanceStyle.translate,
-              prevScale = containerInstanceStyle.scale,
-              prevRotate = containerInstanceStyle.rotate,
-              prevTransform = containerInstanceStyle.transform;
-            positionedAncestorStyle.translate = "none";
-            positionedAncestorStyle.scale = "none";
-            positionedAncestorStyle.rotate = "none";
-            positionedAncestorStyle.transform = "none";
-            containerInstanceStyle.translate = "none";
-            containerInstanceStyle.scale = "none";
-            containerInstanceStyle.rotate = "none";
-            containerInstanceStyle.transform = "none";
-            var ancestorRect = rootContainer.getBoundingClientRect(),
-              rect = containerInstance.getBoundingClientRect(),
-              cloneStyle = clone.style;
-            cloneStyle.position = "absolute";
-            cloneStyle.top = rect.top - ancestorRect.top + "px";
-            cloneStyle.left = rect.left - ancestorRect.left + "px";
-            cloneStyle.width = rect.width + "px";
-            cloneStyle.height = rect.height + "px";
-            cloneStyle.margin = "0px";
-            cloneStyle.boxSizing = "border-box";
-            positionedAncestorStyle.translate = prevAncestorTranslate;
-            positionedAncestorStyle.scale = prevAncestorScale;
-            positionedAncestorStyle.rotate = prevAncestorRotate;
-            positionedAncestorStyle.transform = prevAncestorTransform;
-            containerInstanceStyle.translate = prevTranslate;
-            containerInstanceStyle.scale = prevScale;
-            containerInstanceStyle.rotate = prevRotate;
-            containerInstanceStyle.transform = prevTransform;
-          }
-          clone.style.viewTransitionName = "root";
-          var transform = computedStyle.transform;
-          "none" === transform && (transform = "");
-          var scale = computedStyle.scale;
-          if ("none" !== scale && "" !== scale) {
-            var parts = scale.split(" ");
-            transform =
-              (3 === parts.length ? "scale3d" : "scale") +
-              "(" +
-              parts.join(", ") +
-              ") " +
-              transform;
-          }
-          var rotate = computedStyle.rotate;
-          if ("none" !== rotate && "" !== rotate) {
-            var _parts = rotate.split(" ");
-            transform =
-              1 === _parts.length
-                ? "rotate(" + _parts[0] + ") " + transform
-                : 2 === _parts.length
-                  ? "rotate" +
-                    _parts[0].toUpperCase() +
-                    "(" +
-                    _parts[1] +
-                    ") " +
-                    transform
-                  : "rotate3d(" + _parts.join(", ") + ") " + transform;
-          }
-          var translate = computedStyle.translate;
-          if ("none" !== translate && "" !== translate) {
-            var _parts2 = translate.split(" ");
-            transform =
-              (3 === _parts2.length ? "translate3d" : "translate") +
-              "(" +
-              _parts2.join(", ") +
-              ") " +
-              transform;
-          }
-          var transform$jscomp$0 = transform;
-          clone.style.translate = "none";
-          clone.style.scale = "none";
-          clone.style.rotate = "none";
-          clone.style.transform =
-            "translate(-20000px, -20000px) " + transform$jscomp$0;
-          containerInstance.parentNode.insertBefore(
-            clone,
-            containerInstance.nextSibling
-          );
-          root.gestureClone = clone;
-          recursivelyInsertClones(finishedWork, clone);
-        } finally {
-          (executionContext = prevExecutionContext),
-            (ReactDOMSharedInternals.p = previousPriority),
-            (ReactSharedInternals.T = prevTransition);
-        }
+        executionContext = prevExecutionContext;
+        ReactDOMSharedInternals.p = previousPriority;
+        ReactSharedInternals.T = prevTransition;
         pendingTransitionTypes = null;
         pendingEffectsStatus = PENDING_GESTURE_MUTATION_PHASE;
         finishedGesture.running = startGestureTransition(
           root.containerInfo,
-          finishedGesture.provider,
-          finishedGesture.rangeCurrent,
-          finishedGesture.direction
-            ? finishedGesture.rangeNext
-            : finishedGesture.rangePrevious,
           pendingTransitionTypes,
           flushGestureMutations,
           flushGestureAnimations
@@ -17966,24 +17630,7 @@
         var prevExecutionContext = executionContext;
         executionContext |= CommitContext;
         try {
-          var rootClone = root.gestureClone;
-          if (null !== rootClone) {
-            root.gestureClone = null;
-            var rootContainer = root.containerInfo;
-            var containerInstance =
-              9 === rootContainer.nodeType
-                ? rootContainer.body
-                : "HTML" === rootContainer.nodeName
-                  ? rootContainer.ownerDocument.body
-                  : rootContainer;
-            var containerParent = containerInstance.parentNode;
-            if (null === containerParent)
-              throw Error(
-                "Cannot use a useSwipeTransition() in a detached root."
-              );
-            containerParent.removeChild(rootClone);
-            containerInstance.style.viewTransitionName = "root";
-          }
+          cancelRootViewTransitionName(root.containerInfo);
         } finally {
           (executionContext = prevExecutionContext),
             (ReactDOMSharedInternals.p = previousPriority),
@@ -18657,7 +18304,7 @@
       temp.parentNode.removeChild(temp);
       return form;
     }
-    function extractEvents$2(
+    function extractEvents$1(
       dispatchQueue,
       domEventName,
       maybeTargetInst,
@@ -18743,38 +18390,6 @@
         });
       }
     }
-    function runEventInBatch(dispatchQueue) {
-      processDispatchQueue(dispatchQueue, 0);
-    }
-    function fireScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-      nativeEventTarget[internalScrollTimer] = void 0;
-      if (isMouseDown || isTouchStarted)
-        debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-      else {
-        var dispatchQueue = [];
-        targetInst = accumulateTwoPhaseListeners(targetInst, "onScrollEnd");
-        0 < targetInst.length &&
-          ((nativeEvent = new SyntheticUIEvent(
-            "onScrollEnd",
-            "scrollend",
-            null,
-            nativeEvent,
-            nativeEventTarget
-          )),
-          dispatchQueue.push({ event: nativeEvent, listeners: targetInst }));
-        batchedUpdates$2(runEventInBatch, dispatchQueue);
-      }
-    }
-    function debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-      var existingTimer = nativeEventTarget[internalScrollTimer];
-      null != existingTimer && clearTimeout(existingTimer);
-      null !== targetInst &&
-        ((targetInst = setTimeout(
-          fireScrollEnd.bind(null, targetInst, nativeEvent, nativeEventTarget),
-          DEBOUNCE_TIMEOUT
-        )),
-        (nativeEventTarget[internalScrollTimer] = targetInst));
-    }
     function executeDispatch(event, listener, currentTarget) {
       event.currentTarget = currentTarget;
       try {
@@ -19072,15 +18687,39 @@
               case "beforetoggle":
                 SyntheticEventCtor = SyntheticToggleEvent;
             }
-            var inCapturePhase = 0 !== (eventSystemFlags & 4);
-            inCapturePhase = accumulateSinglePhaseListeners(
-              targetInst,
-              reactName,
-              nativeEvent.type,
-              inCapturePhase,
-              !inCapturePhase &&
-                ("scroll" === domEventName || "scrollend" === domEventName)
-            );
+            var inCapturePhase = 0 !== (eventSystemFlags & 4),
+              accumulateTargetOnly =
+                !inCapturePhase &&
+                ("scroll" === domEventName || "scrollend" === domEventName),
+              reactEventName = inCapturePhase
+                ? null !== reactName
+                  ? reactName + "Capture"
+                  : null
+                : reactName;
+            inCapturePhase = [];
+            for (
+              var instance = targetInst, lastHostComponent;
+              null !== instance;
+
+            ) {
+              var _instance2 = instance;
+              lastHostComponent = _instance2.stateNode;
+              _instance2 = _instance2.tag;
+              (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
+                null === lastHostComponent ||
+                null === reactEventName ||
+                ((_instance2 = getListener(instance, reactEventName)),
+                null != _instance2 &&
+                  inCapturePhase.push(
+                    createDispatchListener(
+                      instance,
+                      _instance2,
+                      lastHostComponent
+                    )
+                  ));
+              if (accumulateTargetOnly) break;
+              instance = instance.return;
+            }
             0 < inCapturePhase.length &&
               ((reactName = new SyntheticEventCtor(
                 reactName,
@@ -19125,106 +18764,111 @@
                   (reactEventType = reactEventType
                     ? getClosestInstanceFromNode(reactEventType)
                     : null),
-                  null !== reactEventType)
-                ) {
-                  inCapturePhase = getNearestMountedFiber(reactEventType);
-                  var tag = reactEventType.tag;
-                  if (
-                    reactEventType !== inCapturePhase ||
-                    (5 !== tag && 27 !== tag && 6 !== tag)
-                  )
-                    reactEventType = null;
-                }
+                  null !== reactEventType &&
+                    ((accumulateTargetOnly =
+                      getNearestMountedFiber(reactEventType)),
+                    (inCapturePhase = reactEventType.tag),
+                    reactEventType !== accumulateTargetOnly ||
+                      (5 !== inCapturePhase &&
+                        27 !== inCapturePhase &&
+                        6 !== inCapturePhase)))
+                )
+                  reactEventType = null;
               } else (SyntheticEventCtor = null), (reactEventType = targetInst);
               if (SyntheticEventCtor !== reactEventType) {
-                tag = SyntheticMouseEvent;
-                var leaveEventType = "onMouseLeave",
-                  enterEventType = "onMouseEnter",
-                  eventTypePrefix = "mouse";
+                inCapturePhase = SyntheticMouseEvent;
+                _instance2 = "onMouseLeave";
+                reactEventName = "onMouseEnter";
+                instance = "mouse";
                 if (
                   "pointerout" === domEventName ||
                   "pointerover" === domEventName
                 )
-                  (tag = SyntheticPointerEvent),
-                    (leaveEventType = "onPointerLeave"),
-                    (enterEventType = "onPointerEnter"),
-                    (eventTypePrefix = "pointer");
-                inCapturePhase =
+                  (inCapturePhase = SyntheticPointerEvent),
+                    (_instance2 = "onPointerLeave"),
+                    (reactEventName = "onPointerEnter"),
+                    (instance = "pointer");
+                accumulateTargetOnly =
                   null == SyntheticEventCtor
                     ? reactName
                     : getNodeFromInstance(SyntheticEventCtor);
-                var toNode =
+                lastHostComponent =
                   null == reactEventType
                     ? reactName
                     : getNodeFromInstance(reactEventType);
-                reactName = new tag(
-                  leaveEventType,
-                  eventTypePrefix + "leave",
+                reactName = new inCapturePhase(
+                  _instance2,
+                  instance + "leave",
                   SyntheticEventCtor,
                   nativeEvent,
                   nativeEventTarget
                 );
-                reactName.target = inCapturePhase;
-                reactName.relatedTarget = toNode;
-                leaveEventType = null;
+                reactName.target = accumulateTargetOnly;
+                reactName.relatedTarget = lastHostComponent;
+                _instance2 = null;
                 getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
-                  ((tag = new tag(
-                    enterEventType,
-                    eventTypePrefix + "enter",
+                  ((inCapturePhase = new inCapturePhase(
+                    reactEventName,
+                    instance + "enter",
                     reactEventType,
                     nativeEvent,
                     nativeEventTarget
                   )),
-                  (tag.target = toNode),
-                  (tag.relatedTarget = inCapturePhase),
-                  (leaveEventType = tag));
-                inCapturePhase = leaveEventType;
+                  (inCapturePhase.target = lastHostComponent),
+                  (inCapturePhase.relatedTarget = accumulateTargetOnly),
+                  (_instance2 = inCapturePhase));
+                accumulateTargetOnly = _instance2;
                 if (SyntheticEventCtor && reactEventType)
                   b: {
-                    tag = SyntheticEventCtor;
-                    enterEventType = reactEventType;
-                    eventTypePrefix = 0;
-                    for (toNode = tag; toNode; toNode = getParent(toNode))
-                      eventTypePrefix++;
-                    toNode = 0;
+                    inCapturePhase = SyntheticEventCtor;
+                    reactEventName = reactEventType;
+                    instance = 0;
                     for (
-                      leaveEventType = enterEventType;
-                      leaveEventType;
-                      leaveEventType = getParent(leaveEventType)
+                      lastHostComponent = inCapturePhase;
+                      lastHostComponent;
+                      lastHostComponent = getParent(lastHostComponent)
                     )
-                      toNode++;
-                    for (; 0 < eventTypePrefix - toNode; )
-                      (tag = getParent(tag)), eventTypePrefix--;
-                    for (; 0 < toNode - eventTypePrefix; )
-                      (enterEventType = getParent(enterEventType)), toNode--;
-                    for (; eventTypePrefix--; ) {
+                      instance++;
+                    lastHostComponent = 0;
+                    for (
+                      _instance2 = reactEventName;
+                      _instance2;
+                      _instance2 = getParent(_instance2)
+                    )
+                      lastHostComponent++;
+                    for (; 0 < instance - lastHostComponent; )
+                      (inCapturePhase = getParent(inCapturePhase)), instance--;
+                    for (; 0 < lastHostComponent - instance; )
+                      (reactEventName = getParent(reactEventName)),
+                        lastHostComponent--;
+                    for (; instance--; ) {
                       if (
-                        tag === enterEventType ||
-                        (null !== enterEventType &&
-                          tag === enterEventType.alternate)
+                        inCapturePhase === reactEventName ||
+                        (null !== reactEventName &&
+                          inCapturePhase === reactEventName.alternate)
                       )
                         break b;
-                      tag = getParent(tag);
-                      enterEventType = getParent(enterEventType);
+                      inCapturePhase = getParent(inCapturePhase);
+                      reactEventName = getParent(reactEventName);
                     }
-                    tag = null;
+                    inCapturePhase = null;
                   }
-                else tag = null;
+                else inCapturePhase = null;
                 null !== SyntheticEventCtor &&
                   accumulateEnterLeaveListenersForEvent(
                     dispatchQueue,
                     reactName,
                     SyntheticEventCtor,
-                    tag,
+                    inCapturePhase,
                     !1
                   );
                 null !== reactEventType &&
-                  null !== inCapturePhase &&
+                  null !== accumulateTargetOnly &&
                   accumulateEnterLeaveListenersForEvent(
                     dispatchQueue,
-                    inCapturePhase,
+                    accumulateTargetOnly,
                     reactEventType,
-                    tag,
+                    inCapturePhase,
                     !0
                   );
               }
@@ -19389,7 +19033,7 @@
                   listeners: eventType
                 }),
                 (handleEventFunc.data = fallbackData));
-          extractEvents$2(
+          extractEvents$1(
             dispatchQueue,
             domEventName,
             targetInst,
@@ -19397,58 +19041,6 @@
             nativeEventTarget
           );
         }
-        a: if (
-          ((fallbackData = 0 !== (eventSystemFlags & 4)),
-          "scrollend" !== domEventName)
-        ) {
-          if (!isScrollEndEventSupported && fallbackData)
-            switch (domEventName) {
-              case "scroll":
-                null !== nativeEventTarget &&
-                  debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-                break;
-              case "touchstart":
-                isTouchStarted = !0;
-                break;
-              case "touchcancel":
-              case "touchend":
-                isTouchStarted = !1;
-                break;
-              case "mousedown":
-                isMouseDown = !0;
-                break;
-              case "mouseup":
-                isMouseDown = !1;
-            }
-        } else {
-          if (!isScrollEndEventSupported && null !== nativeEventTarget)
-            if (
-              ((eventType = nativeEventTarget[internalScrollTimer]),
-              null != eventType)
-            )
-              clearTimeout(eventType),
-                (nativeEventTarget[internalScrollTimer] = void 0);
-            else break a;
-          targetInst = accumulateSinglePhaseListeners(
-            targetInst,
-            "onScrollEnd",
-            "scrollend",
-            fallbackData,
-            !fallbackData
-          );
-          0 < targetInst.length &&
-            ((nativeEventTarget = new SyntheticUIEvent(
-              "onScrollEnd",
-              "scrollend",
-              null,
-              nativeEvent,
-              nativeEventTarget
-            )),
-            dispatchQueue.push({
-              event: nativeEventTarget,
-              listeners: targetInst
-            }));
-        }
         processDispatchQueue(dispatchQueue, eventSystemFlags);
       });
     }
@@ -19459,35 +19051,6 @@
         currentTarget: currentTarget
       };
     }
-    function accumulateSinglePhaseListeners(
-      targetFiber,
-      reactName,
-      nativeEventType,
-      inCapturePhase,
-      accumulateTargetOnly
-    ) {
-      reactName = inCapturePhase
-        ? null !== reactName
-          ? reactName + "Capture"
-          : null
-        : reactName;
-      for (nativeEventType = []; null !== targetFiber; ) {
-        var _instance2 = targetFiber;
-        inCapturePhase = _instance2.stateNode;
-        _instance2 = _instance2.tag;
-        (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
-          null === inCapturePhase ||
-          null === reactName ||
-          ((_instance2 = getListener(targetFiber, reactName)),
-          null != _instance2 &&
-            nativeEventType.push(
-              createDispatchListener(targetFiber, _instance2, inCapturePhase)
-            ));
-        if (accumulateTargetOnly) break;
-        targetFiber = targetFiber.return;
-      }
-      return nativeEventType;
-    }
     function accumulateTwoPhaseListeners(targetFiber, reactName) {
       for (
         var captureName = reactName + "Capture", listeners = [];
@@ -19509,10 +19072,9 @@
             listeners.push(
               createDispatchListener(targetFiber, _instance3, stateNode)
             ));
-        if (3 === targetFiber.tag) return listeners;
         targetFiber = targetFiber.return;
       }
-      return [];
+      return listeners;
     }
     function getParent(inst) {
       if (null === inst) return null;
@@ -19867,8 +19429,7 @@
           null != value &&
             ("function" !== typeof value &&
               warnForInvalidEventListener(key, value),
-            listenToNonDelegatedEvent("scrollend", domElement),
-            listenToNonDelegatedEvent("scroll", domElement));
+            listenToNonDelegatedEvent("scrollend", domElement));
           return;
         case "dangerouslySetInnerHTML":
           if (null != value) {
@@ -20159,8 +19720,7 @@
           null != value &&
             ("function" !== typeof value &&
               warnForInvalidEventListener(key, value),
-            listenToNonDelegatedEvent("scrollend", domElement),
-            listenToNonDelegatedEvent("scroll", domElement));
+            listenToNonDelegatedEvent("scrollend", domElement));
           return;
         case "onClick":
           null != value &&
@@ -20405,8 +19965,6 @@
               }
           return;
         case "dialog":
-          listenToNonDelegatedEvent("beforetoggle", domElement);
-          listenToNonDelegatedEvent("toggle", domElement);
           listenToNonDelegatedEvent("cancel", domElement);
           listenToNonDelegatedEvent("close", domElement);
           break;
@@ -21967,16 +21525,32 @@
       instance.style.viewTransitionClass =
         null == props || "boolean" === typeof props ? "" : ("" + props).trim();
     }
+    function cancelRootViewTransitionName(rootContainer) {
+      rootContainer =
+        9 === rootContainer.nodeType
+          ? rootContainer.documentElement
+          : rootContainer.ownerDocument.documentElement;
+      null !== rootContainer &&
+        "" === rootContainer.style.viewTransitionName &&
+        ((rootContainer.style.viewTransitionName = "none"),
+        rootContainer.animate(
+          { opacity: [0, 0], pointerEvents: ["none", "none"] },
+          {
+            duration: 0,
+            fill: "forwards",
+            pseudoElement: "::view-transition-group(root)"
+          }
+        ),
+        rootContainer.animate(
+          { width: [0, 0], height: [0, 0] },
+          { duration: 0, fill: "forwards", pseudoElement: "::view-transition" }
+        ));
+    }
     function restoreRootViewTransitionName(rootContainer) {
       rootContainer =
         9 === rootContainer.nodeType
-          ? rootContainer.body
-          : "HTML" === rootContainer.nodeName
-            ? rootContainer.ownerDocument.body
-            : rootContainer;
-      "root" === rootContainer.style.viewTransitionName &&
-        (rootContainer.style.viewTransitionName = "");
-      rootContainer = rootContainer.ownerDocument.documentElement;
+          ? rootContainer.documentElement
+          : rootContainer.ownerDocument.documentElement;
       null !== rootContainer &&
         "none" === rootContainer.style.viewTransitionName &&
         (rootContainer.style.viewTransitionName = "");
@@ -22073,78 +21647,8 @@
         return !1;
       }
     }
-    function mergeTranslate(translateA, translateB) {
-      if (!translateA || "none" === translateA) return translateB || "";
-      if (!translateB || "none" === translateB) return translateA || "";
-      translateA = translateA.split(" ");
-      translateB = translateB.split(" ");
-      var i,
-        result = "";
-      for (i = 0; i < translateA.length && i < translateB.length; i++)
-        0 < i && (result += " "),
-          (result += "calc(" + translateA[i] + " + " + translateB[i] + ")");
-      for (; i < translateA.length; i++) result += " " + translateA[i];
-      for (; i < translateB.length; i++) result += " " + translateB[i];
-      return result;
-    }
-    function animateGesture(
-      keyframes,
-      targetElement,
-      pseudoElement,
-      timeline,
-      rangeStart,
-      rangeEnd,
-      moveFirstFrameIntoViewport,
-      moveAllFramesIntoViewport
-    ) {
-      for (var i = 0; i < keyframes.length; i++) {
-        var keyframe = keyframes[i];
-        delete keyframe.easing;
-        delete keyframe.computedOffset;
-        "auto" === keyframe.width && delete keyframe.width;
-        "auto" === keyframe.height && delete keyframe.height;
-        "none" === keyframe.transform && delete keyframe.transform;
-        if (moveAllFramesIntoViewport && null == keyframe.transform)
-          if (null == keyframe.translate || "" === keyframe.translate) {
-            var elementTranslate = getComputedStyle(
-              targetElement,
-              pseudoElement
-            ).translate;
-            keyframe.translate = mergeTranslate(
-              elementTranslate,
-              "20000px 20000px"
-            );
-          } else
-            keyframe.translate = mergeTranslate(
-              keyframe.translate,
-              "20000px 20000px"
-            );
-      }
-      moveFirstFrameIntoViewport &&
-        ((moveFirstFrameIntoViewport = keyframes[0]),
-        (moveAllFramesIntoViewport = moveFirstFrameIntoViewport.transform),
-        null != moveAllFramesIntoViewport &&
-          (moveFirstFrameIntoViewport.transform =
-            "translate(20000px, 20000px) " +
-            ("none" === moveAllFramesIntoViewport
-              ? ""
-              : moveAllFramesIntoViewport)));
-      moveFirstFrameIntoViewport = rangeStart > rangeEnd;
-      targetElement.animate(keyframes, {
-        pseudoElement: pseudoElement,
-        timeline: timeline,
-        easing: "linear",
-        fill: "both",
-        direction: moveFirstFrameIntoViewport ? "normal" : "reverse",
-        rangeStart: (moveFirstFrameIntoViewport ? rangeEnd : rangeStart) + "%",
-        rangeEnd: (moveFirstFrameIntoViewport ? rangeStart : rangeEnd) + "%"
-      });
-    }
     function startGestureTransition(
       rootContainer,
-      timeline,
-      rangeStart,
-      rangeEnd,
       transitionTypes,
       mutationCallback,
       animateCallback
@@ -22159,100 +21663,18 @@
           types: transitionTypes
         });
         ownerDocument.__reactViewTransition = transition;
-        var readyCallback = function () {
-            for (
-              var documentElement = ownerDocument.documentElement,
-                animations = documentElement.getAnimations({ subtree: !0 }),
-                foundGroups = new Set(),
-                foundNews = new Set(),
-                i = 0;
-              i < animations.length;
-              i++
-            ) {
-              var pseudoElement = animations[i].effect.pseudoElement;
-              null != pseudoElement &&
-                (pseudoElement.startsWith("::view-transition-group")
-                  ? foundGroups.add(pseudoElement.slice(23))
-                  : pseudoElement.startsWith("::view-transition-new") &&
-                    foundNews.add(pseudoElement.slice(21)));
-            }
-            for (i = 0; i < animations.length; i++) {
-              var anim = animations[i];
-              pseudoElement = anim.effect;
-              var _pseudoElement = pseudoElement.pseudoElement;
-              if (
-                null != _pseudoElement &&
-                _pseudoElement.startsWith("::view-transition")
-              ) {
-                anim.cancel();
-                var isGeneratedGroupAnim = !1,
-                  isExitGroupAnim = !1;
-                if (_pseudoElement.startsWith("::view-transition-group")) {
-                  var groupName = _pseudoElement.slice(23);
-                  foundNews.has(groupName)
-                    ? ((anim = anim.animationName),
-                      (isGeneratedGroupAnim =
-                        null != anim &&
-                        anim.startsWith("-ua-view-transition-group-anim-")))
-                    : (isExitGroupAnim = !0);
-                }
-                animateGesture(
-                  pseudoElement.getKeyframes(),
-                  pseudoElement.target,
-                  _pseudoElement,
-                  timeline,
-                  rangeStart,
-                  rangeEnd,
-                  isGeneratedGroupAnim,
-                  isExitGroupAnim
-                );
-                _pseudoElement.startsWith("::view-transition-old") &&
-                  ((_pseudoElement = _pseudoElement.slice(21)),
-                  foundGroups.has(_pseudoElement) ||
-                    foundNews.has(_pseudoElement) ||
-                    (foundGroups.add(_pseudoElement),
-                    animateGesture(
-                      [{}, {}],
-                      pseudoElement.target,
-                      "::view-transition-group" + _pseudoElement,
-                      timeline,
-                      rangeStart,
-                      rangeEnd,
-                      !1,
-                      !0
-                    )));
-              }
-            }
-            documentElement
-              .animate([{}, {}], {
-                pseudoElement: "::view-transition",
-                duration: 1
-              })
-              .pause();
-            animateCallback();
-          },
-          readyForAnimations =
-            -1 !== navigator.userAgent.indexOf("Chrome")
-              ? function () {
-                  return requestAnimationFrame(readyCallback);
-                }
-              : readyCallback;
-        transition.ready.then(readyForAnimations, readyCallback);
+        var blockingAnim = null;
+        rootContainer = function () {
+          blockingAnim = ownerDocument.documentElement.animate([{}, {}], {
+            pseudoElement: "::view-transition",
+            duration: 1
+          });
+          blockingAnim.pause();
+          animateCallback();
+        };
+        transition.ready.then(rootContainer, rootContainer);
         transition.finished.then(function () {
-          for (
-            var animations = ownerDocument.documentElement.getAnimations({
-                subtree: !0
-              }),
-              i = 0;
-            i < animations.length;
-            i++
-          ) {
-            var anim = animations[i],
-              pseudo = anim.effect.pseudoElement;
-            null != pseudo &&
-              pseudo.startsWith("::view-transition") &&
-              anim.cancel();
-          }
+          null !== blockingAnim && blockingAnim.cancel();
           ownerDocument.__reactViewTransition === transition &&
             (ownerDocument.__reactViewTransition = null);
         });
@@ -23353,7 +22775,7 @@
       this.pooledCache = null;
       this.pooledCacheLanes = 0;
       this.formState = formState;
-      this.gestureClone = this.stoppingGestures = this.pendingGestures = null;
+      this.stoppingGestures = this.pendingGestures = null;
       this.incompleteTransitions = new Map();
       this.passiveEffectDuration = this.effectDuration = -0;
       this.memoizedUpdaters = new Set();
@@ -24195,7 +23617,6 @@
       internalEventHandlesSetKey = "__reactHandles$" + randomKey,
       internalRootNodeResourcesKey = "__reactResources$" + randomKey,
       internalHoistableMarker = "__reactMarker$" + randomKey,
-      internalScrollTimer = "__reactScroll$" + randomKey,
       allNativeEvents = new Set(),
       registrationNameDependencies = {},
       possibleRegistrationNames = {},
@@ -25390,7 +24811,7 @@
       TRANSITION_END = getVendorPrefixedEventName("transitionend"),
       topLevelEventsToReactNames = new Map(),
       simpleEventPluginEvents =
-        "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
+        "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(
           " "
         ),
       CapturedStacks = new WeakMap(),
@@ -27245,8 +26666,6 @@
         "Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."
       ),
       globalClientIdCounter = 0,
-      didWarnForRootClone = !1,
-      unhideHostChildren = !1,
       DefaultAsyncDispatcher = {
         getCacheForType: function (resourceType) {
           var cache = readContext(CacheContext),
@@ -27357,11 +26776,7 @@
       mightHavePendingSyncWork = !1,
       isFlushingWork = !1,
       currentEventTransitionLane = 0,
-      fakeActCallbackNode = {},
-      isScrollEndEventSupported = canUseDOM && isEventSupported("scrollend"),
-      isTouchStarted = !1,
-      isMouseDown = !1,
-      DEBOUNCE_TIMEOUT = 200;
+      fakeActCallbackNode = {};
     (function () {
       for (var i = 0; i < simpleEventPluginEvents.length; i++) {
         var eventName = simpleEventPluginEvents[i],
@@ -27414,12 +26829,6 @@
       "onCompositionUpdate",
       "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
     );
-    registerTwoPhaseEvent(
-      "onScrollEnd",
-      "scroll scrollend touchstart touchcancel touchend mousedown mouseup".split(
-        " "
-      )
-    );
     var mediaEventTypes =
         "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
           " "
@@ -27926,11 +27335,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     })();
     ("function" === typeof Map &&
@@ -27967,10 +27376,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: "19.1.0-experimental-f9d78089-20250306",
+          version: "19.1.0-experimental-eda36a1c-20250228",
           rendererPackageName: "react-dom",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: "19.1.0-experimental-f9d78089-20250306"
+          reconcilerVersion: "19.1.0-experimental-eda36a1c-20250228"
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -28442,7 +27851,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
     "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       "function" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom-profiling.profiling.js b/node_modules/react-dom/cjs/react-dom-profiling.profiling.js
index 4970c91..2529720 100644
--- a/node_modules/react-dom/cjs/react-dom-profiling.profiling.js
+++ b/node_modules/react-dom/cjs/react-dom-profiling.profiling.js
@@ -738,8 +738,7 @@ var randomKey = Math.random().toString(36).slice(2),
   internalEventHandlerListenersKey = "__reactListeners$" + randomKey,
   internalEventHandlesSetKey = "__reactHandles$" + randomKey,
   internalRootNodeResourcesKey = "__reactResources$" + randomKey,
-  internalHoistableMarker = "__reactMarker$" + randomKey,
-  internalScrollTimer = "__reactScroll$" + randomKey;
+  internalHoistableMarker = "__reactMarker$" + randomKey;
 function detachDeletedInstance(node) {
   delete node[internalInstanceKey];
   delete node[internalPropsKey];
@@ -838,11 +837,6 @@ function isAttributeNameSafe(attributeName) {
   return !1;
 }
 var viewTransitionMutationContext = !1;
-function pushMutationContext() {
-  var prev = viewTransitionMutationContext;
-  viewTransitionMutationContext = !1;
-  return prev;
-}
 function setValueForAttribute(node, name, value) {
   if (isAttributeNameSafe(name))
     if (null === value) node.removeAttribute(name);
@@ -2084,16 +2078,6 @@ function isTextInputElement(elem) {
       ? !0
       : !1;
 }
-function isEventSupported(eventNameSuffix) {
-  if (!canUseDOM) return !1;
-  eventNameSuffix = "on" + eventNameSuffix;
-  var isSupported = eventNameSuffix in document;
-  isSupported ||
-    ((isSupported = document.createElement("div")),
-    isSupported.setAttribute(eventNameSuffix, "return;"),
-    (isSupported = "function" === typeof isSupported[eventNameSuffix]));
-  return isSupported;
-}
 function createAndAccumulateChangeEvent(
   dispatchQueue,
   inst,
@@ -2118,7 +2102,7 @@ function createAndAccumulateChangeEvent(
 }
 var activeElement$1 = null,
   activeElementInst$1 = null;
-function runEventInBatch$1(dispatchQueue) {
+function runEventInBatch(dispatchQueue) {
   processDispatchQueue(dispatchQueue, 0);
 }
 function getInstIfValueChanged(targetInst) {
@@ -2129,10 +2113,22 @@ function getTargetInstForChangeEvent(domEventName, targetInst) {
   if ("change" === domEventName) return targetInst;
 }
 var isInputEventSupported = !1;
-canUseDOM &&
-  (isInputEventSupported =
-    isEventSupported("input") &&
-    (!document.documentMode || 9 < document.documentMode));
+if (canUseDOM) {
+  var JSCompiler_inline_result$jscomp$311;
+  if (canUseDOM) {
+    var isSupported$jscomp$inline_450 = "oninput" in document;
+    if (!isSupported$jscomp$inline_450) {
+      var element$jscomp$inline_451 = document.createElement("div");
+      element$jscomp$inline_451.setAttribute("oninput", "return;");
+      isSupported$jscomp$inline_450 =
+        "function" === typeof element$jscomp$inline_451.oninput;
+    }
+    JSCompiler_inline_result$jscomp$311 = isSupported$jscomp$inline_450;
+  } else JSCompiler_inline_result$jscomp$311 = !1;
+  isInputEventSupported =
+    JSCompiler_inline_result$jscomp$311 &&
+    (!document.documentMode || 9 < document.documentMode);
+}
 function stopWatchingForValueChange() {
   activeElement$1 &&
     (activeElement$1.detachEvent("onpropertychange", handlePropertyChange),
@@ -2150,7 +2146,7 @@ function handlePropertyChange(nativeEvent) {
       nativeEvent,
       getEventTarget(nativeEvent)
     );
-    batchedUpdates$2(runEventInBatch$1, dispatchQueue);
+    batchedUpdates$2(runEventInBatch, dispatchQueue);
   }
 }
 function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
@@ -2370,7 +2366,7 @@ var ANIMATION_END = getVendorPrefixedEventName("animationend"),
   TRANSITION_END = getVendorPrefixedEventName("transitionend"),
   topLevelEventsToReactNames = new Map(),
   simpleEventPluginEvents =
-    "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
+    "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(
       " "
     );
 function registerSimpleEvent(domEventName, reactName) {
@@ -8961,7 +8957,7 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
     JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };
   } else JSCompiler_temp = null;
   selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };
-  _enabled = !1;
+  shouldStartViewTransition = _enabled = !1;
   committedLanes = (committedLanes & 335544064) === committedLanes;
   nextEffect = firstChild;
   for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
@@ -9927,7 +9923,20 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                   "function" === typeof style.setProperty
                     ? style.setProperty("display", "none", "important")
                     : (style.display = "none");
-                } else unhideInstance(lanes.stateNode, lanes.memoizedProps);
+                } else {
+                  var instance = lanes.stateNode,
+                    styleProp = lanes.memoizedProps.style,
+                    display =
+                      void 0 !== styleProp &&
+                      null !== styleProp &&
+                      styleProp.hasOwnProperty("display")
+                        ? styleProp.display
+                        : null;
+                  instance.style.display =
+                    null == display || "boolean" === typeof display
+                      ? ""
+                      : ("" + display).trim();
+                }
               } catch (error) {
                 captureCommitPhaseError(lanes, lanes.return, error);
               }
@@ -9985,7 +9994,8 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      flags = pushMutationContext();
+      flags = viewTransitionMutationContext;
+      viewTransitionMutationContext = !1;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
       (lanes & 335544064) === lanes &&
@@ -10106,30 +10116,7 @@ function commitAfterMutationEffectsOnFiber(finishedWork, root) {
                   }
                 );
             }
-          finishedWork = root.containerInfo;
-          finishedWork =
-            9 === finishedWork.nodeType
-              ? finishedWork.documentElement
-              : finishedWork.ownerDocument.documentElement;
-          null !== finishedWork &&
-            "" === finishedWork.style.viewTransitionName &&
-            ((finishedWork.style.viewTransitionName = "none"),
-            finishedWork.animate(
-              { opacity: [0, 0], pointerEvents: ["none", "none"] },
-              {
-                duration: 0,
-                fill: "forwards",
-                pseudoElement: "::view-transition-group(root)"
-              }
-            ),
-            finishedWork.animate(
-              { width: [0, 0], height: [0, 0] },
-              {
-                duration: 0,
-                fill: "forwards",
-                pseudoElement: "::view-transition"
-              }
-            ));
+          cancelRootViewTransitionName(root.containerInfo);
         }
         break;
       case 5:
@@ -11508,8 +11495,7 @@ function prepareToHydrateHostInstance(fiber) {
         listenToNonDelegatedEvent("toggle", instance)),
       null != props.onScroll && listenToNonDelegatedEvent("scroll", instance),
       null != props.onScrollEnd &&
-        (listenToNonDelegatedEvent("scrollend", instance),
-        listenToNonDelegatedEvent("scroll", instance)),
+        listenToNonDelegatedEvent("scrollend", instance),
       null != props.onClick && (instance.onclick = noop$2),
       (instance = !0))
     : (instance = !1);
@@ -12316,122 +12302,6 @@ function unwindInterruptedWork(current, interruptedWork) {
       popProvider(CacheContext);
   }
 }
-var unhideHostChildren = !1;
-function recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone) {
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-    switch (parentFiber.tag) {
-      case 5:
-        var clone = parentFiber.stateNode.cloneNode(!0);
-        hostParentClone.appendChild(clone);
-        unhideHostChildren && unhideInstance(clone, parentFiber.memoizedProps);
-        break;
-      case 6:
-        clone = parentFiber.stateNode;
-        if (null === clone) throw Error(formatProdErrorMessage(162));
-        clone = clone.cloneNode(!1);
-        hostParentClone.appendChild(clone);
-        unhideHostChildren && (clone.nodeValue = parentFiber.memoizedProps);
-        break;
-      case 4:
-        break;
-      case 22:
-        null === parentFiber.memoizedState &&
-          recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-        break;
-      case 30:
-        clone = pushMutationContext();
-        recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-        viewTransitionMutationContext = clone;
-        break;
-      default:
-        recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-    }
-    parentFiber = parentFiber.sibling;
-  }
-}
-function recursivelyInsertClones(parentFiber, hostParentClone$jscomp$0) {
-  if (
-    null === parentFiber.alternate ||
-    0 !== (parentFiber.subtreeFlags & 13878)
-  )
-    for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-      var finishedWork = parentFiber,
-        hostParentClone = hostParentClone$jscomp$0,
-        current = finishedWork.alternate,
-        flags = finishedWork.flags;
-      switch (finishedWork.tag) {
-        case 26:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          break;
-        case 27:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          break;
-        case 5:
-          var clone = finishedWork.stateNode;
-          if (null === current) hostParentClone.appendChild(clone);
-          else {
-            null === finishedWork.child
-              ? ((clone = clone.cloneNode(!0)),
-                finishedWork.flags & 32 && setTextContent(clone, ""))
-              : (clone = clone.cloneNode(!1));
-            if (flags & 4) {
-              flags = clone;
-              var newProps = finishedWork.memoizedProps;
-              updateProperties(
-                flags,
-                finishedWork.type,
-                current.memoizedProps,
-                newProps
-              );
-              flags[internalPropsKey] = newProps;
-            }
-            unhideHostChildren
-              ? ((unhideHostChildren = !1),
-                recursivelyInsertClones(finishedWork, clone),
-                hostParentClone.appendChild(clone),
-                (unhideHostChildren = !0),
-                unhideInstance(clone, finishedWork.memoizedProps))
-              : (recursivelyInsertClones(finishedWork, clone),
-                hostParentClone.appendChild(clone));
-          }
-          break;
-        case 6:
-          clone = finishedWork.stateNode;
-          if (null === clone) throw Error(formatProdErrorMessage(162));
-          null === current
-            ? hostParentClone.appendChild(clone)
-            : ((clone = clone.cloneNode(!1)),
-              flags & 4 && (clone.nodeValue = current.memoizedProps),
-              hostParentClone.appendChild(clone),
-              unhideHostChildren &&
-                (clone.nodeValue = finishedWork.memoizedProps));
-          break;
-        case 4:
-          break;
-        case 22:
-          null === finishedWork.memoizedState &&
-            ((unhideHostChildren =
-              (current = unhideHostChildren) || 0 !== (flags & 8192)),
-            recursivelyInsertClones(finishedWork, hostParentClone),
-            (unhideHostChildren = current));
-          break;
-        case 30:
-          current = pushMutationContext();
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          viewTransitionMutationContext && (finishedWork.flags |= 4);
-          viewTransitionMutationContext = current;
-          break;
-        default:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-      }
-      parentFiber = parentFiber.sibling;
-    }
-  else
-    recursivelyInsertClonesFromExistingTree(
-      parentFiber,
-      hostParentClone$jscomp$0
-    );
-}
 var DefaultAsyncDispatcher = {
     getCacheForType: function (resourceType) {
       var cache = readContext(CacheContext),
@@ -13224,8 +13094,8 @@ function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       workLoopSync();
       memoizedUpdaters = workInProgressRootExitStatus;
       break;
-    } catch (thrownValue$195) {
-      handleThrow(root, thrownValue$195);
+    } catch (thrownValue$193) {
+      handleThrow(root, thrownValue$193);
     }
   while (1);
   lanes && root.shellSuspendCounter++;
@@ -13346,8 +13216,8 @@ function renderRootConcurrent(root, lanes) {
         }
       workLoopConcurrentByScheduler();
       break;
-    } catch (thrownValue$197) {
-      handleThrow(root, thrownValue$197);
+    } catch (thrownValue$195) {
+      handleThrow(root, thrownValue$195);
     }
   while (1);
   lastContextDependency = currentlyRenderingFiber$1 = null;
@@ -13630,7 +13500,6 @@ function commitRoot(
         ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
         : 2 === suspendedCommitReason &&
           logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-      shouldStartViewTransition = !1;
       suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
       if (0 !== (finishedWork.subtreeFlags & 13878) || suspendedCommitReason) {
         suspendedCommitReason = ReactSharedInternals.T;
@@ -13941,150 +13810,22 @@ function flushSpawnedWork() {
     flushSyncWorkAcrossRoots_impl(0, !1);
   }
 }
-function commitGestureOnRoot(root, finishedWork) {
+function commitGestureOnRoot(root) {
   var finishedGesture = root.pendingGestures;
   if (null === finishedGesture) ensureRootIsScheduled(root);
   else {
     deleteScheduledGesture(root, finishedGesture);
-    var prevTransition = ReactSharedInternals.T;
-    ReactSharedInternals.T = null;
-    var previousPriority = ReactDOMSharedInternals.p;
-    ReactDOMSharedInternals.p = 2;
-    var prevExecutionContext = executionContext;
+    var prevTransition = ReactSharedInternals.T,
+      previousPriority = ReactDOMSharedInternals.p,
+      prevExecutionContext = executionContext;
     executionContext |= 4;
-    try {
-      unhideHostChildren = !1;
-      var rootContainer = root.containerInfo,
-        documentElement =
-          9 === rootContainer.nodeType
-            ? rootContainer.documentElement
-            : rootContainer.ownerDocument.documentElement;
-      null !== documentElement &&
-        "" === documentElement.style.viewTransitionName &&
-        (documentElement.style.viewTransitionName = "none");
-      var containerInstance =
-        9 === rootContainer.nodeType
-          ? rootContainer.body
-          : "HTML" === rootContainer.nodeName
-            ? rootContainer.ownerDocument.body
-            : rootContainer;
-      var containerParent = containerInstance.parentNode;
-      if (null === containerParent) throw Error(formatProdErrorMessage(552));
-      var clone = containerInstance.cloneNode(!1),
-        computedStyle = getComputedStyle(containerInstance);
-      if (
-        "absolute" !== computedStyle.position &&
-        "fixed" !== computedStyle.position
-      ) {
-        for (
-          rootContainer = containerParent;
-          null != rootContainer.parentNode &&
-          9 !== rootContainer.parentNode.nodeType &&
-          "static" === getComputedStyle(rootContainer).position;
-
-        )
-          rootContainer = rootContainer.parentNode;
-        var positionedAncestorStyle = rootContainer.style,
-          containerInstanceStyle = containerInstance.style,
-          prevAncestorTranslate = positionedAncestorStyle.translate,
-          prevAncestorScale = positionedAncestorStyle.scale,
-          prevAncestorRotate = positionedAncestorStyle.rotate,
-          prevAncestorTransform = positionedAncestorStyle.transform,
-          prevTranslate = containerInstanceStyle.translate,
-          prevScale = containerInstanceStyle.scale,
-          prevRotate = containerInstanceStyle.rotate,
-          prevTransform = containerInstanceStyle.transform;
-        positionedAncestorStyle.translate = "none";
-        positionedAncestorStyle.scale = "none";
-        positionedAncestorStyle.rotate = "none";
-        positionedAncestorStyle.transform = "none";
-        containerInstanceStyle.translate = "none";
-        containerInstanceStyle.scale = "none";
-        containerInstanceStyle.rotate = "none";
-        containerInstanceStyle.transform = "none";
-        var ancestorRect = rootContainer.getBoundingClientRect(),
-          rect = containerInstance.getBoundingClientRect(),
-          cloneStyle = clone.style;
-        cloneStyle.position = "absolute";
-        cloneStyle.top = rect.top - ancestorRect.top + "px";
-        cloneStyle.left = rect.left - ancestorRect.left + "px";
-        cloneStyle.width = rect.width + "px";
-        cloneStyle.height = rect.height + "px";
-        cloneStyle.margin = "0px";
-        cloneStyle.boxSizing = "border-box";
-        positionedAncestorStyle.translate = prevAncestorTranslate;
-        positionedAncestorStyle.scale = prevAncestorScale;
-        positionedAncestorStyle.rotate = prevAncestorRotate;
-        positionedAncestorStyle.transform = prevAncestorTransform;
-        containerInstanceStyle.translate = prevTranslate;
-        containerInstanceStyle.scale = prevScale;
-        containerInstanceStyle.rotate = prevRotate;
-        containerInstanceStyle.transform = prevTransform;
-      }
-      clone.style.viewTransitionName = "root";
-      var transform = computedStyle.transform;
-      "none" === transform && (transform = "");
-      var scale = computedStyle.scale;
-      if ("none" !== scale && "" !== scale) {
-        var parts = scale.split(" ");
-        transform =
-          (3 === parts.length ? "scale3d" : "scale") +
-          "(" +
-          parts.join(", ") +
-          ") " +
-          transform;
-      }
-      var rotate = computedStyle.rotate;
-      if ("none" !== rotate && "" !== rotate) {
-        var parts$272 = rotate.split(" ");
-        transform =
-          1 === parts$272.length
-            ? "rotate(" + parts$272[0] + ") " + transform
-            : 2 === parts$272.length
-              ? "rotate" +
-                parts$272[0].toUpperCase() +
-                "(" +
-                parts$272[1] +
-                ") " +
-                transform
-              : "rotate3d(" + parts$272.join(", ") + ") " + transform;
-      }
-      var translate = computedStyle.translate;
-      if ("none" !== translate && "" !== translate) {
-        var parts$273 = translate.split(" ");
-        transform =
-          (3 === parts$273.length ? "translate3d" : "translate") +
-          "(" +
-          parts$273.join(", ") +
-          ") " +
-          transform;
-      }
-      var JSCompiler_inline_result = transform;
-      clone.style.translate = "none";
-      clone.style.scale = "none";
-      clone.style.rotate = "none";
-      clone.style.transform =
-        "translate(-20000px, -20000px) " + JSCompiler_inline_result;
-      containerInstance.parentNode.insertBefore(
-        clone,
-        containerInstance.nextSibling
-      );
-      root.gestureClone = clone;
-      recursivelyInsertClones(finishedWork, clone);
-    } finally {
-      (executionContext = prevExecutionContext),
-        (ReactDOMSharedInternals.p = previousPriority),
-        (ReactSharedInternals.T = prevTransition);
-    }
+    executionContext = prevExecutionContext;
+    ReactDOMSharedInternals.p = previousPriority;
+    ReactSharedInternals.T = prevTransition;
     pendingTransitionTypes = null;
     pendingEffectsStatus = 6;
     finishedGesture.running = startGestureTransition(
       root.containerInfo,
-      finishedGesture.provider,
-      finishedGesture.rangeCurrent,
-      finishedGesture.direction
-        ? finishedGesture.rangeNext
-        : finishedGesture.rangePrevious,
       pendingTransitionTypes,
       flushGestureMutations,
       flushGestureAnimations
@@ -14102,21 +13843,7 @@ function flushGestureMutations() {
     var prevExecutionContext = executionContext;
     executionContext |= 4;
     try {
-      var rootClone = root.gestureClone;
-      if (null !== rootClone) {
-        root.gestureClone = null;
-        var rootContainer = root.containerInfo;
-        var containerInstance =
-          9 === rootContainer.nodeType
-            ? rootContainer.body
-            : "HTML" === rootContainer.nodeName
-              ? rootContainer.ownerDocument.body
-              : rootContainer;
-        var containerParent = containerInstance.parentNode;
-        if (null === containerParent) throw Error(formatProdErrorMessage(552));
-        containerParent.removeChild(rootClone);
-        containerInstance.style.viewTransitionName = "root";
-      }
+      cancelRootViewTransitionName(root.containerInfo);
     } finally {
       (executionContext = prevExecutionContext),
         (ReactDOMSharedInternals.p = previousPriority),
@@ -14396,14 +14123,14 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root$203 = firstScheduledRoot; null !== root$203; ) {
+      for (var root$201 = firstScheduledRoot; null !== root$201; ) {
         if (!onlyLegacy)
           if (0 !== syncTransitionLanes) {
-            var pendingLanes = root$203.pendingLanes;
+            var pendingLanes = root$201.pendingLanes;
             if (0 === pendingLanes) var JSCompiler_inline_result = 0;
             else {
-              var suspendedLanes = root$203.suspendedLanes,
-                pingedLanes = root$203.pingedLanes;
+              var suspendedLanes = root$201.suspendedLanes,
+                pingedLanes = root$201.pingedLanes;
               JSCompiler_inline_result =
                 (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
               JSCompiler_inline_result &=
@@ -14417,21 +14144,21 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
             }
             0 !== JSCompiler_inline_result &&
               ((didPerformSomeWork = !0),
-              performSyncWorkOnRoot(root$203, JSCompiler_inline_result));
+              performSyncWorkOnRoot(root$201, JSCompiler_inline_result));
           } else
             (JSCompiler_inline_result = workInProgressRootRenderLanes),
               (JSCompiler_inline_result = getNextLanes(
-                root$203,
-                root$203 === workInProgressRoot ? JSCompiler_inline_result : 0,
-                null !== root$203.cancelPendingCommit ||
-                  -1 !== root$203.timeoutHandle
+                root$201,
+                root$201 === workInProgressRoot ? JSCompiler_inline_result : 0,
+                null !== root$201.cancelPendingCommit ||
+                  -1 !== root$201.timeoutHandle
               )),
               (0 === (JSCompiler_inline_result & 3) &&
                 64 !== JSCompiler_inline_result) ||
-                checkIfRootIsPrerendering(root$203, JSCompiler_inline_result) ||
+                checkIfRootIsPrerendering(root$201, JSCompiler_inline_result) ||
                 ((didPerformSomeWork = !0),
-                performSyncWorkOnRoot(root$203, JSCompiler_inline_result));
-        root$203 = root$203.next;
+                performSyncWorkOnRoot(root$201, JSCompiler_inline_result));
+        root$201 = root$201.next;
       }
     } while (didPerformSomeWork);
     isFlushingWork = !1;
@@ -14604,7 +14331,7 @@ function createFormDataWithSubmitter(form, submitter) {
   temp.parentNode.removeChild(temp);
   return form;
 }
-function extractEvents$2(
+function extractEvents$1(
   dispatchQueue,
   domEventName,
   maybeTargetInst,
@@ -14679,56 +14406,21 @@ function extractEvents$2(
     });
   }
 }
-var isScrollEndEventSupported = canUseDOM && isEventSupported("scrollend"),
-  isTouchStarted = !1,
-  isMouseDown = !1;
-function runEventInBatch(dispatchQueue) {
-  processDispatchQueue(dispatchQueue, 0);
-}
-function fireScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-  nativeEventTarget[internalScrollTimer] = void 0;
-  if (isMouseDown || isTouchStarted)
-    debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-  else {
-    var dispatchQueue = [];
-    targetInst = accumulateTwoPhaseListeners(targetInst, "onScrollEnd");
-    0 < targetInst.length &&
-      ((nativeEvent = new SyntheticUIEvent(
-        "onScrollEnd",
-        "scrollend",
-        null,
-        nativeEvent,
-        nativeEventTarget
-      )),
-      dispatchQueue.push({ event: nativeEvent, listeners: targetInst }));
-    batchedUpdates$2(runEventInBatch, dispatchQueue);
-  }
-}
-function debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-  var existingTimer = nativeEventTarget[internalScrollTimer];
-  null != existingTimer && clearTimeout(existingTimer);
-  null !== targetInst &&
-    ((targetInst = setTimeout(
-      fireScrollEnd.bind(null, targetInst, nativeEvent, nativeEventTarget),
-      200
-    )),
-    (nativeEventTarget[internalScrollTimer] = targetInst));
-}
 for (
-  var i$jscomp$inline_1796 = 0;
-  i$jscomp$inline_1796 < simpleEventPluginEvents.length;
-  i$jscomp$inline_1796++
+  var i$jscomp$inline_1763 = 0;
+  i$jscomp$inline_1763 < simpleEventPluginEvents.length;
+  i$jscomp$inline_1763++
 ) {
-  var eventName$jscomp$inline_1797 =
-      simpleEventPluginEvents[i$jscomp$inline_1796],
-    domEventName$jscomp$inline_1798 =
-      eventName$jscomp$inline_1797.toLowerCase(),
-    capitalizedEvent$jscomp$inline_1799 =
-      eventName$jscomp$inline_1797[0].toUpperCase() +
-      eventName$jscomp$inline_1797.slice(1);
+  var eventName$jscomp$inline_1764 =
+      simpleEventPluginEvents[i$jscomp$inline_1763],
+    domEventName$jscomp$inline_1765 =
+      eventName$jscomp$inline_1764.toLowerCase(),
+    capitalizedEvent$jscomp$inline_1766 =
+      eventName$jscomp$inline_1764[0].toUpperCase() +
+      eventName$jscomp$inline_1764.slice(1);
   registerSimpleEvent(
-    domEventName$jscomp$inline_1798,
-    "on" + capitalizedEvent$jscomp$inline_1799
+    domEventName$jscomp$inline_1765,
+    "on" + capitalizedEvent$jscomp$inline_1766
   );
 }
 registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
@@ -14773,12 +14465,6 @@ registerTwoPhaseEvent(
   "onCompositionUpdate",
   "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
 );
-registerTwoPhaseEvent(
-  "onScrollEnd",
-  "scroll scrollend touchstart touchcancel touchend mousedown mouseup".split(
-    " "
-  )
-);
 var mediaEventTypes =
     "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
       " "
@@ -15061,15 +14747,35 @@ function dispatchEventForPluginEventSystem(
           case "beforetoggle":
             SyntheticEventCtor = SyntheticToggleEvent;
         }
-        var inCapturePhase = 0 !== (eventSystemFlags & 4);
-        inCapturePhase = accumulateSinglePhaseListeners(
-          targetInst,
-          reactName,
-          nativeEvent.type,
-          inCapturePhase,
-          !inCapturePhase &&
-            ("scroll" === domEventName || "scrollend" === domEventName)
-        );
+        var inCapturePhase = 0 !== (eventSystemFlags & 4),
+          accumulateTargetOnly =
+            !inCapturePhase &&
+            ("scroll" === domEventName || "scrollend" === domEventName),
+          reactEventName = inCapturePhase
+            ? null !== reactName
+              ? reactName + "Capture"
+              : null
+            : reactName;
+        inCapturePhase = [];
+        for (
+          var instance = targetInst, lastHostComponent;
+          null !== instance;
+
+        ) {
+          var _instance = instance;
+          lastHostComponent = _instance.stateNode;
+          _instance = _instance.tag;
+          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||
+            null === lastHostComponent ||
+            null === reactEventName ||
+            ((_instance = getListener(instance, reactEventName)),
+            null != _instance &&
+              inCapturePhase.push(
+                createDispatchListener(instance, _instance, lastHostComponent)
+              ));
+          if (accumulateTargetOnly) break;
+          instance = instance.return;
+        }
         0 < inCapturePhase.length &&
           ((reactName = new SyntheticEventCtor(
             reactName,
@@ -15111,103 +14817,108 @@ function dispatchEventForPluginEventSystem(
               (reactEventType = reactEventType
                 ? getClosestInstanceFromNode(reactEventType)
                 : null),
-              null !== reactEventType)
-            ) {
-              inCapturePhase = getNearestMountedFiber(reactEventType);
-              var tag = reactEventType.tag;
-              if (
-                reactEventType !== inCapturePhase ||
-                (5 !== tag && 27 !== tag && 6 !== tag)
-              )
-                reactEventType = null;
-            }
+              null !== reactEventType &&
+                ((accumulateTargetOnly =
+                  getNearestMountedFiber(reactEventType)),
+                (inCapturePhase = reactEventType.tag),
+                reactEventType !== accumulateTargetOnly ||
+                  (5 !== inCapturePhase &&
+                    27 !== inCapturePhase &&
+                    6 !== inCapturePhase)))
+            )
+              reactEventType = null;
           } else (SyntheticEventCtor = null), (reactEventType = targetInst);
           if (SyntheticEventCtor !== reactEventType) {
-            tag = SyntheticMouseEvent;
-            var leaveEventType = "onMouseLeave",
-              enterEventType = "onMouseEnter",
-              eventTypePrefix = "mouse";
+            inCapturePhase = SyntheticMouseEvent;
+            _instance = "onMouseLeave";
+            reactEventName = "onMouseEnter";
+            instance = "mouse";
             if ("pointerout" === domEventName || "pointerover" === domEventName)
-              (tag = SyntheticPointerEvent),
-                (leaveEventType = "onPointerLeave"),
-                (enterEventType = "onPointerEnter"),
-                (eventTypePrefix = "pointer");
-            inCapturePhase =
+              (inCapturePhase = SyntheticPointerEvent),
+                (_instance = "onPointerLeave"),
+                (reactEventName = "onPointerEnter"),
+                (instance = "pointer");
+            accumulateTargetOnly =
               null == SyntheticEventCtor
                 ? reactName
                 : getNodeFromInstance(SyntheticEventCtor);
-            var toNode =
+            lastHostComponent =
               null == reactEventType
                 ? reactName
                 : getNodeFromInstance(reactEventType);
-            reactName = new tag(
-              leaveEventType,
-              eventTypePrefix + "leave",
+            reactName = new inCapturePhase(
+              _instance,
+              instance + "leave",
               SyntheticEventCtor,
               nativeEvent,
               nativeEventTarget
             );
-            reactName.target = inCapturePhase;
-            reactName.relatedTarget = toNode;
-            leaveEventType = null;
+            reactName.target = accumulateTargetOnly;
+            reactName.relatedTarget = lastHostComponent;
+            _instance = null;
             getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
-              ((tag = new tag(
-                enterEventType,
-                eventTypePrefix + "enter",
+              ((inCapturePhase = new inCapturePhase(
+                reactEventName,
+                instance + "enter",
                 reactEventType,
                 nativeEvent,
                 nativeEventTarget
               )),
-              (tag.target = toNode),
-              (tag.relatedTarget = inCapturePhase),
-              (leaveEventType = tag));
-            inCapturePhase = leaveEventType;
+              (inCapturePhase.target = lastHostComponent),
+              (inCapturePhase.relatedTarget = accumulateTargetOnly),
+              (_instance = inCapturePhase));
+            accumulateTargetOnly = _instance;
             if (SyntheticEventCtor && reactEventType)
               b: {
-                tag = SyntheticEventCtor;
-                enterEventType = reactEventType;
-                eventTypePrefix = 0;
-                for (toNode = tag; toNode; toNode = getParent(toNode))
-                  eventTypePrefix++;
-                toNode = 0;
+                inCapturePhase = SyntheticEventCtor;
+                reactEventName = reactEventType;
+                instance = 0;
+                for (
+                  lastHostComponent = inCapturePhase;
+                  lastHostComponent;
+                  lastHostComponent = getParent(lastHostComponent)
+                )
+                  instance++;
+                lastHostComponent = 0;
                 for (
-                  leaveEventType = enterEventType;
-                  leaveEventType;
-                  leaveEventType = getParent(leaveEventType)
+                  _instance = reactEventName;
+                  _instance;
+                  _instance = getParent(_instance)
                 )
-                  toNode++;
-                for (; 0 < eventTypePrefix - toNode; )
-                  (tag = getParent(tag)), eventTypePrefix--;
-                for (; 0 < toNode - eventTypePrefix; )
-                  (enterEventType = getParent(enterEventType)), toNode--;
-                for (; eventTypePrefix--; ) {
+                  lastHostComponent++;
+                for (; 0 < instance - lastHostComponent; )
+                  (inCapturePhase = getParent(inCapturePhase)), instance--;
+                for (; 0 < lastHostComponent - instance; )
+                  (reactEventName = getParent(reactEventName)),
+                    lastHostComponent--;
+                for (; instance--; ) {
                   if (
-                    tag === enterEventType ||
-                    (null !== enterEventType &&
-                      tag === enterEventType.alternate)
+                    inCapturePhase === reactEventName ||
+                    (null !== reactEventName &&
+                      inCapturePhase === reactEventName.alternate)
                   )
                     break b;
-                  tag = getParent(tag);
-                  enterEventType = getParent(enterEventType);
+                  inCapturePhase = getParent(inCapturePhase);
+                  reactEventName = getParent(reactEventName);
                 }
-                tag = null;
+                inCapturePhase = null;
               }
-            else tag = null;
+            else inCapturePhase = null;
             null !== SyntheticEventCtor &&
               accumulateEnterLeaveListenersForEvent(
                 dispatchQueue,
                 reactName,
                 SyntheticEventCtor,
-                tag,
+                inCapturePhase,
                 !1
               );
             null !== reactEventType &&
-              null !== inCapturePhase &&
+              null !== accumulateTargetOnly &&
               accumulateEnterLeaveListenersForEvent(
                 dispatchQueue,
-                inCapturePhase,
+                accumulateTargetOnly,
                 reactEventType,
-                tag,
+                inCapturePhase,
                 !0
               );
           }
@@ -15352,7 +15063,7 @@ function dispatchEventForPluginEventSystem(
               listeners: eventType
             }),
             (handleEventFunc.data = fallbackData));
-      extractEvents$2(
+      extractEvents$1(
         dispatchQueue,
         domEventName,
         targetInst,
@@ -15360,58 +15071,6 @@ function dispatchEventForPluginEventSystem(
         nativeEventTarget
       );
     }
-    a: if (
-      ((fallbackData = 0 !== (eventSystemFlags & 4)),
-      "scrollend" !== domEventName)
-    ) {
-      if (!isScrollEndEventSupported && fallbackData)
-        switch (domEventName) {
-          case "scroll":
-            null !== nativeEventTarget &&
-              debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-            break;
-          case "touchstart":
-            isTouchStarted = !0;
-            break;
-          case "touchcancel":
-          case "touchend":
-            isTouchStarted = !1;
-            break;
-          case "mousedown":
-            isMouseDown = !0;
-            break;
-          case "mouseup":
-            isMouseDown = !1;
-        }
-    } else {
-      if (!isScrollEndEventSupported && null !== nativeEventTarget)
-        if (
-          ((eventType = nativeEventTarget[internalScrollTimer]),
-          null != eventType)
-        )
-          clearTimeout(eventType),
-            (nativeEventTarget[internalScrollTimer] = void 0);
-        else break a;
-      targetInst = accumulateSinglePhaseListeners(
-        targetInst,
-        "onScrollEnd",
-        "scrollend",
-        fallbackData,
-        !fallbackData
-      );
-      0 < targetInst.length &&
-        ((nativeEventTarget = new SyntheticUIEvent(
-          "onScrollEnd",
-          "scrollend",
-          null,
-          nativeEvent,
-          nativeEventTarget
-        )),
-        dispatchQueue.push({
-          event: nativeEventTarget,
-          listeners: targetInst
-        }));
-    }
     processDispatchQueue(dispatchQueue, eventSystemFlags);
   });
 }
@@ -15422,35 +15081,6 @@ function createDispatchListener(instance, listener, currentTarget) {
     currentTarget: currentTarget
   };
 }
-function accumulateSinglePhaseListeners(
-  targetFiber,
-  reactName,
-  nativeEventType,
-  inCapturePhase,
-  accumulateTargetOnly
-) {
-  reactName = inCapturePhase
-    ? null !== reactName
-      ? reactName + "Capture"
-      : null
-    : reactName;
-  for (nativeEventType = []; null !== targetFiber; ) {
-    var _instance = targetFiber;
-    inCapturePhase = _instance.stateNode;
-    _instance = _instance.tag;
-    (5 !== _instance && 26 !== _instance && 27 !== _instance) ||
-      null === inCapturePhase ||
-      null === reactName ||
-      ((_instance = getListener(targetFiber, reactName)),
-      null != _instance &&
-        nativeEventType.push(
-          createDispatchListener(targetFiber, _instance, inCapturePhase)
-        ));
-    if (accumulateTargetOnly) break;
-    targetFiber = targetFiber.return;
-  }
-  return nativeEventType;
-}
 function accumulateTwoPhaseListeners(targetFiber, reactName) {
   for (
     var captureName = reactName + "Capture", listeners = [];
@@ -15472,10 +15102,9 @@ function accumulateTwoPhaseListeners(targetFiber, reactName) {
         listeners.push(
           createDispatchListener(targetFiber, _instance2, stateNode)
         ));
-    if (3 === targetFiber.tag) return listeners;
     targetFiber = targetFiber.return;
   }
-  return [];
+  return listeners;
 }
 function getParent(inst) {
   if (null === inst) return null;
@@ -15640,9 +15269,7 @@ function setProp(domElement, tag, key, value, props, prevValue) {
       null != value && listenToNonDelegatedEvent("scroll", domElement);
       return;
     case "onScrollEnd":
-      null != value &&
-        (listenToNonDelegatedEvent("scrollend", domElement),
-        listenToNonDelegatedEvent("scroll", domElement));
+      null != value && listenToNonDelegatedEvent("scrollend", domElement);
       return;
     case "dangerouslySetInnerHTML":
       if (null != value) {
@@ -15881,9 +15508,7 @@ function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
       null != value && listenToNonDelegatedEvent("scroll", domElement);
       return;
     case "onScrollEnd":
-      null != value &&
-        (listenToNonDelegatedEvent("scrollend", domElement),
-        listenToNonDelegatedEvent("scroll", domElement));
+      null != value && listenToNonDelegatedEvent("scrollend", domElement);
       return;
     case "onClick":
       null != value && (domElement.onclick = noop$2);
@@ -15976,34 +15601,34 @@ function setInitialProperties(domElement, tag, props) {
         defaultChecked = null;
       for (hasSrc in props)
         if (props.hasOwnProperty(hasSrc)) {
-          var propValue$217 = props[hasSrc];
-          if (null != propValue$217)
+          var propValue$215 = props[hasSrc];
+          if (null != propValue$215)
             switch (hasSrc) {
               case "name":
-                hasSrcSet = propValue$217;
+                hasSrcSet = propValue$215;
                 break;
               case "type":
-                propValue = propValue$217;
+                propValue = propValue$215;
                 break;
               case "checked":
-                checked = propValue$217;
+                checked = propValue$215;
                 break;
               case "defaultChecked":
-                defaultChecked = propValue$217;
+                defaultChecked = propValue$215;
                 break;
               case "value":
-                propKey = propValue$217;
+                propKey = propValue$215;
                 break;
               case "defaultValue":
-                defaultValue = propValue$217;
+                defaultValue = propValue$215;
                 break;
               case "children":
               case "dangerouslySetInnerHTML":
-                if (null != propValue$217)
+                if (null != propValue$215)
                   throw Error(formatProdErrorMessage(137, tag));
                 break;
               default:
-                setProp(domElement, tag, hasSrc, propValue$217, props, null);
+                setProp(domElement, tag, hasSrc, propValue$215, props, null);
             }
         }
       initInput(
@@ -16090,8 +15715,6 @@ function setInitialProperties(domElement, tag, props) {
           }
       return;
     case "dialog":
-      listenToNonDelegatedEvent("beforetoggle", domElement);
-      listenToNonDelegatedEvent("toggle", domElement);
       listenToNonDelegatedEvent("cancel", domElement);
       listenToNonDelegatedEvent("close", domElement);
       break;
@@ -16142,14 +15765,14 @@ function setInitialProperties(domElement, tag, props) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (propValue$217 in props)
-          props.hasOwnProperty(propValue$217) &&
-            ((hasSrc = props[propValue$217]),
+        for (propValue$215 in props)
+          props.hasOwnProperty(propValue$215) &&
+            ((hasSrc = props[propValue$215]),
             void 0 !== hasSrc &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propValue$217,
+                propValue$215,
                 hasSrc,
                 props,
                 void 0
@@ -16197,14 +15820,14 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(domElement, tag, propKey, null, nextProps, lastProp);
           }
       }
-      for (var propKey$234 in nextProps) {
-        var propKey = nextProps[propKey$234];
-        lastProp = lastProps[propKey$234];
+      for (var propKey$232 in nextProps) {
+        var propKey = nextProps[propKey$232];
+        lastProp = lastProps[propKey$232];
         if (
-          nextProps.hasOwnProperty(propKey$234) &&
+          nextProps.hasOwnProperty(propKey$232) &&
           (null != propKey || null != lastProp)
         )
-          switch (propKey$234) {
+          switch (propKey$232) {
             case "type":
               propKey !== lastProp && (viewTransitionMutationContext = !0);
               type = propKey;
@@ -16239,7 +15862,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(
                   domElement,
                   tag,
-                  propKey$234,
+                  propKey$232,
                   propKey,
                   nextProps,
                   lastProp
@@ -16258,7 +15881,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       );
       return;
     case "select":
-      propKey = value = defaultValue = propKey$234 = null;
+      propKey = value = defaultValue = propKey$232 = null;
       for (type in lastProps)
         if (
           ((lastDefaultValue = lastProps[type]),
@@ -16290,7 +15913,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (name) {
             case "value":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
-              propKey$234 = type;
+              propKey$232 = type;
               break;
             case "defaultValue":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
@@ -16313,15 +15936,15 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       tag = defaultValue;
       lastProps = value;
       nextProps = propKey;
-      null != propKey$234
-        ? updateOptions(domElement, !!lastProps, propKey$234, !1)
+      null != propKey$232
+        ? updateOptions(domElement, !!lastProps, propKey$232, !1)
         : !!nextProps !== !!lastProps &&
           (null != tag
             ? updateOptions(domElement, !!lastProps, tag, !0)
             : updateOptions(domElement, !!lastProps, lastProps ? [] : "", !1));
       return;
     case "textarea":
-      propKey = propKey$234 = null;
+      propKey = propKey$232 = null;
       for (defaultValue in lastProps)
         if (
           ((name = lastProps[defaultValue]),
@@ -16346,7 +15969,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (value) {
             case "value":
               name !== type && (viewTransitionMutationContext = !0);
-              propKey$234 = name;
+              propKey$232 = name;
               break;
             case "defaultValue":
               name !== type && (viewTransitionMutationContext = !0);
@@ -16361,17 +15984,17 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               name !== type &&
                 setProp(domElement, tag, value, name, nextProps, type);
           }
-      updateTextarea(domElement, propKey$234, propKey);
+      updateTextarea(domElement, propKey$232, propKey);
       return;
     case "option":
-      for (var propKey$250 in lastProps)
+      for (var propKey$248 in lastProps)
         if (
-          ((propKey$234 = lastProps[propKey$250]),
-          lastProps.hasOwnProperty(propKey$250) &&
-            null != propKey$234 &&
-            !nextProps.hasOwnProperty(propKey$250))
+          ((propKey$232 = lastProps[propKey$248]),
+          lastProps.hasOwnProperty(propKey$248) &&
+            null != propKey$232 &&
+            !nextProps.hasOwnProperty(propKey$248))
         )
-          switch (propKey$250) {
+          switch (propKey$248) {
             case "selected":
               domElement.selected = !1;
               break;
@@ -16379,34 +16002,34 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               setProp(
                 domElement,
                 tag,
-                propKey$250,
+                propKey$248,
                 null,
                 nextProps,
-                propKey$234
+                propKey$232
               );
           }
       for (lastDefaultValue in nextProps)
         if (
-          ((propKey$234 = nextProps[lastDefaultValue]),
+          ((propKey$232 = nextProps[lastDefaultValue]),
           (propKey = lastProps[lastDefaultValue]),
           nextProps.hasOwnProperty(lastDefaultValue) &&
-            propKey$234 !== propKey &&
-            (null != propKey$234 || null != propKey))
+            propKey$232 !== propKey &&
+            (null != propKey$232 || null != propKey))
         )
           switch (lastDefaultValue) {
             case "selected":
-              propKey$234 !== propKey && (viewTransitionMutationContext = !0);
+              propKey$232 !== propKey && (viewTransitionMutationContext = !0);
               domElement.selected =
-                propKey$234 &&
-                "function" !== typeof propKey$234 &&
-                "symbol" !== typeof propKey$234;
+                propKey$232 &&
+                "function" !== typeof propKey$232 &&
+                "symbol" !== typeof propKey$232;
               break;
             default:
               setProp(
                 domElement,
                 tag,
                 lastDefaultValue,
-                propKey$234,
+                propKey$232,
                 nextProps,
                 propKey
               );
@@ -16427,24 +16050,24 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
     case "track":
     case "wbr":
     case "menuitem":
-      for (var propKey$255 in lastProps)
-        (propKey$234 = lastProps[propKey$255]),
-          lastProps.hasOwnProperty(propKey$255) &&
-            null != propKey$234 &&
-            !nextProps.hasOwnProperty(propKey$255) &&
-            setProp(domElement, tag, propKey$255, null, nextProps, propKey$234);
+      for (var propKey$253 in lastProps)
+        (propKey$232 = lastProps[propKey$253]),
+          lastProps.hasOwnProperty(propKey$253) &&
+            null != propKey$232 &&
+            !nextProps.hasOwnProperty(propKey$253) &&
+            setProp(domElement, tag, propKey$253, null, nextProps, propKey$232);
       for (checked in nextProps)
         if (
-          ((propKey$234 = nextProps[checked]),
+          ((propKey$232 = nextProps[checked]),
           (propKey = lastProps[checked]),
           nextProps.hasOwnProperty(checked) &&
-            propKey$234 !== propKey &&
-            (null != propKey$234 || null != propKey))
+            propKey$232 !== propKey &&
+            (null != propKey$232 || null != propKey))
         )
           switch (checked) {
             case "children":
             case "dangerouslySetInnerHTML":
-              if (null != propKey$234)
+              if (null != propKey$232)
                 throw Error(formatProdErrorMessage(137, tag));
               break;
             default:
@@ -16452,7 +16075,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 domElement,
                 tag,
                 checked,
-                propKey$234,
+                propKey$232,
                 nextProps,
                 propKey
               );
@@ -16460,49 +16083,49 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (var propKey$260 in lastProps)
-          (propKey$234 = lastProps[propKey$260]),
-            lastProps.hasOwnProperty(propKey$260) &&
-              void 0 !== propKey$234 &&
-              !nextProps.hasOwnProperty(propKey$260) &&
+        for (var propKey$258 in lastProps)
+          (propKey$232 = lastProps[propKey$258]),
+            lastProps.hasOwnProperty(propKey$258) &&
+              void 0 !== propKey$232 &&
+              !nextProps.hasOwnProperty(propKey$258) &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propKey$260,
+                propKey$258,
                 void 0,
                 nextProps,
-                propKey$234
+                propKey$232
               );
         for (defaultChecked in nextProps)
-          (propKey$234 = nextProps[defaultChecked]),
+          (propKey$232 = nextProps[defaultChecked]),
             (propKey = lastProps[defaultChecked]),
             !nextProps.hasOwnProperty(defaultChecked) ||
-              propKey$234 === propKey ||
-              (void 0 === propKey$234 && void 0 === propKey) ||
+              propKey$232 === propKey ||
+              (void 0 === propKey$232 && void 0 === propKey) ||
               setPropOnCustomElement(
                 domElement,
                 tag,
                 defaultChecked,
-                propKey$234,
+                propKey$232,
                 nextProps,
                 propKey
               );
         return;
       }
   }
-  for (var propKey$265 in lastProps)
-    (propKey$234 = lastProps[propKey$265]),
-      lastProps.hasOwnProperty(propKey$265) &&
-        null != propKey$234 &&
-        !nextProps.hasOwnProperty(propKey$265) &&
-        setProp(domElement, tag, propKey$265, null, nextProps, propKey$234);
+  for (var propKey$263 in lastProps)
+    (propKey$232 = lastProps[propKey$263]),
+      lastProps.hasOwnProperty(propKey$263) &&
+        null != propKey$232 &&
+        !nextProps.hasOwnProperty(propKey$263) &&
+        setProp(domElement, tag, propKey$263, null, nextProps, propKey$232);
   for (lastProp in nextProps)
-    (propKey$234 = nextProps[lastProp]),
+    (propKey$232 = nextProps[lastProp]),
       (propKey = lastProps[lastProp]),
       !nextProps.hasOwnProperty(lastProp) ||
-        propKey$234 === propKey ||
-        (null == propKey$234 && null == propKey) ||
-        setProp(domElement, tag, lastProp, propKey$234, nextProps, propKey);
+        propKey$232 === propKey ||
+        (null == propKey$232 && null == propKey) ||
+        setProp(domElement, tag, lastProp, propKey$232, nextProps, propKey);
 }
 var eventsEnabled = null,
   selectionInformation = null;
@@ -16640,15 +16263,6 @@ function clearSuspenseBoundary(parentInstance, suspenseInstance) {
   } while (node);
   retryIfBlockedOn(suspenseInstance);
 }
-function unhideInstance(instance, props) {
-  props = props.style;
-  props =
-    void 0 !== props && null !== props && props.hasOwnProperty("display")
-      ? props.display
-      : null;
-  instance.style.display =
-    null == props || "boolean" === typeof props ? "" : ("" + props).trim();
-}
 function restoreViewTransitionName(instance, props) {
   props = props.style;
   var viewTransitionName =
@@ -16674,16 +16288,32 @@ function restoreViewTransitionName(instance, props) {
   instance.style.viewTransitionClass =
     null == props || "boolean" === typeof props ? "" : ("" + props).trim();
 }
+function cancelRootViewTransitionName(rootContainer) {
+  rootContainer =
+    9 === rootContainer.nodeType
+      ? rootContainer.documentElement
+      : rootContainer.ownerDocument.documentElement;
+  null !== rootContainer &&
+    "" === rootContainer.style.viewTransitionName &&
+    ((rootContainer.style.viewTransitionName = "none"),
+    rootContainer.animate(
+      { opacity: [0, 0], pointerEvents: ["none", "none"] },
+      {
+        duration: 0,
+        fill: "forwards",
+        pseudoElement: "::view-transition-group(root)"
+      }
+    ),
+    rootContainer.animate(
+      { width: [0, 0], height: [0, 0] },
+      { duration: 0, fill: "forwards", pseudoElement: "::view-transition" }
+    ));
+}
 function restoreRootViewTransitionName(rootContainer) {
   rootContainer =
     9 === rootContainer.nodeType
-      ? rootContainer.body
-      : "HTML" === rootContainer.nodeName
-        ? rootContainer.ownerDocument.body
-        : rootContainer;
-  "root" === rootContainer.style.viewTransitionName &&
-    (rootContainer.style.viewTransitionName = "");
-  rootContainer = rootContainer.ownerDocument.documentElement;
+      ? rootContainer.documentElement
+      : rootContainer.ownerDocument.documentElement;
   null !== rootContainer &&
     "none" === rootContainer.style.viewTransitionName &&
     (rootContainer.style.viewTransitionName = "");
@@ -16770,78 +16400,8 @@ function startViewTransition(
     return !1;
   }
 }
-function mergeTranslate(translateA, translateB) {
-  if (!translateA || "none" === translateA) return translateB || "";
-  if (!translateB || "none" === translateB) return translateA || "";
-  translateA = translateA.split(" ");
-  translateB = translateB.split(" ");
-  var i,
-    result = "";
-  for (i = 0; i < translateA.length && i < translateB.length; i++)
-    0 < i && (result += " "),
-      (result += "calc(" + translateA[i] + " + " + translateB[i] + ")");
-  for (; i < translateA.length; i++) result += " " + translateA[i];
-  for (; i < translateB.length; i++) result += " " + translateB[i];
-  return result;
-}
-function animateGesture(
-  keyframes,
-  targetElement,
-  pseudoElement,
-  timeline,
-  rangeStart,
-  rangeEnd,
-  moveFirstFrameIntoViewport,
-  moveAllFramesIntoViewport
-) {
-  for (var i = 0; i < keyframes.length; i++) {
-    var keyframe = keyframes[i];
-    delete keyframe.easing;
-    delete keyframe.computedOffset;
-    "auto" === keyframe.width && delete keyframe.width;
-    "auto" === keyframe.height && delete keyframe.height;
-    "none" === keyframe.transform && delete keyframe.transform;
-    if (moveAllFramesIntoViewport && null == keyframe.transform)
-      if (null == keyframe.translate || "" === keyframe.translate) {
-        var elementTranslate = getComputedStyle(
-          targetElement,
-          pseudoElement
-        ).translate;
-        keyframe.translate = mergeTranslate(
-          elementTranslate,
-          "20000px 20000px"
-        );
-      } else
-        keyframe.translate = mergeTranslate(
-          keyframe.translate,
-          "20000px 20000px"
-        );
-  }
-  moveFirstFrameIntoViewport &&
-    ((moveFirstFrameIntoViewport = keyframes[0]),
-    (moveAllFramesIntoViewport = moveFirstFrameIntoViewport.transform),
-    null != moveAllFramesIntoViewport &&
-      (moveFirstFrameIntoViewport.transform =
-        "translate(20000px, 20000px) " +
-        ("none" === moveAllFramesIntoViewport
-          ? ""
-          : moveAllFramesIntoViewport)));
-  moveFirstFrameIntoViewport = rangeStart > rangeEnd;
-  targetElement.animate(keyframes, {
-    pseudoElement: pseudoElement,
-    timeline: timeline,
-    easing: "linear",
-    fill: "both",
-    direction: moveFirstFrameIntoViewport ? "normal" : "reverse",
-    rangeStart: (moveFirstFrameIntoViewport ? rangeEnd : rangeStart) + "%",
-    rangeEnd: (moveFirstFrameIntoViewport ? rangeStart : rangeEnd) + "%"
-  });
-}
 function startGestureTransition(
   rootContainer,
-  timeline,
-  rangeStart,
-  rangeEnd,
   transitionTypes,
   mutationCallback,
   animateCallback
@@ -16854,100 +16414,18 @@ function startGestureTransition(
       types: transitionTypes
     });
     ownerDocument.__reactViewTransition = transition;
-    var readyCallback = function () {
-        for (
-          var documentElement = ownerDocument.documentElement,
-            animations = documentElement.getAnimations({ subtree: !0 }),
-            foundGroups = new Set(),
-            foundNews = new Set(),
-            i = 0;
-          i < animations.length;
-          i++
-        ) {
-          var pseudoElement = animations[i].effect.pseudoElement;
-          null != pseudoElement &&
-            (pseudoElement.startsWith("::view-transition-group")
-              ? foundGroups.add(pseudoElement.slice(23))
-              : pseudoElement.startsWith("::view-transition-new") &&
-                foundNews.add(pseudoElement.slice(21)));
-        }
-        for (i = 0; i < animations.length; i++) {
-          var anim = animations[i];
-          pseudoElement = anim.effect;
-          var pseudoElement$275 = pseudoElement.pseudoElement;
-          if (
-            null != pseudoElement$275 &&
-            pseudoElement$275.startsWith("::view-transition")
-          ) {
-            anim.cancel();
-            var isGeneratedGroupAnim = !1,
-              isExitGroupAnim = !1;
-            if (pseudoElement$275.startsWith("::view-transition-group")) {
-              var groupName = pseudoElement$275.slice(23);
-              foundNews.has(groupName)
-                ? ((anim = anim.animationName),
-                  (isGeneratedGroupAnim =
-                    null != anim &&
-                    anim.startsWith("-ua-view-transition-group-anim-")))
-                : (isExitGroupAnim = !0);
-            }
-            animateGesture(
-              pseudoElement.getKeyframes(),
-              pseudoElement.target,
-              pseudoElement$275,
-              timeline,
-              rangeStart,
-              rangeEnd,
-              isGeneratedGroupAnim,
-              isExitGroupAnim
-            );
-            pseudoElement$275.startsWith("::view-transition-old") &&
-              ((pseudoElement$275 = pseudoElement$275.slice(21)),
-              foundGroups.has(pseudoElement$275) ||
-                foundNews.has(pseudoElement$275) ||
-                (foundGroups.add(pseudoElement$275),
-                animateGesture(
-                  [{}, {}],
-                  pseudoElement.target,
-                  "::view-transition-group" + pseudoElement$275,
-                  timeline,
-                  rangeStart,
-                  rangeEnd,
-                  !1,
-                  !0
-                )));
-          }
-        }
-        documentElement
-          .animate([{}, {}], {
-            pseudoElement: "::view-transition",
-            duration: 1
-          })
-          .pause();
-        animateCallback();
-      },
-      readyForAnimations =
-        -1 !== navigator.userAgent.indexOf("Chrome")
-          ? function () {
-              return requestAnimationFrame(readyCallback);
-            }
-          : readyCallback;
-    transition.ready.then(readyForAnimations, readyCallback);
+    var blockingAnim = null;
+    rootContainer = function () {
+      blockingAnim = ownerDocument.documentElement.animate([{}, {}], {
+        pseudoElement: "::view-transition",
+        duration: 1
+      });
+      blockingAnim.pause();
+      animateCallback();
+    };
+    transition.ready.then(rootContainer, rootContainer);
     transition.finished.then(function () {
-      for (
-        var animations = ownerDocument.documentElement.getAnimations({
-            subtree: !0
-          }),
-          i = 0;
-        i < animations.length;
-        i++
-      ) {
-        var anim = animations[i],
-          pseudo = anim.effect.pseudoElement;
-        null != pseudo &&
-          pseudo.startsWith("::view-transition") &&
-          anim.cancel();
-      }
+      null !== blockingAnim && blockingAnim.cancel();
       ownerDocument.__reactViewTransition === transition &&
         (ownerDocument.__reactViewTransition = null);
     });
@@ -17512,26 +16990,26 @@ function getResource(type, currentProps, pendingProps, currentResource) {
         "string" === typeof pendingProps.precedence
       ) {
         type = getStyleKey(pendingProps.href);
-        var styles$278 = getResourcesFromRoot(
+        var styles$271 = getResourcesFromRoot(
             JSCompiler_inline_result
           ).hoistableStyles,
-          resource$279 = styles$278.get(type);
-        resource$279 ||
+          resource$272 = styles$271.get(type);
+        resource$272 ||
           ((JSCompiler_inline_result =
             JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),
-          (resource$279 = {
+          (resource$272 = {
             type: "stylesheet",
             instance: null,
             count: 0,
             state: { loading: 0, preload: null }
           }),
-          styles$278.set(type, resource$279),
-          (styles$278 = JSCompiler_inline_result.querySelector(
+          styles$271.set(type, resource$272),
+          (styles$271 = JSCompiler_inline_result.querySelector(
             getStylesheetSelectorFromKey(type)
           )) &&
-            !styles$278._p &&
-            ((resource$279.instance = styles$278),
-            (resource$279.state.loading = 5)),
+            !styles$271._p &&
+            ((resource$272.instance = styles$271),
+            (resource$272.state.loading = 5)),
           preloadPropsMap.has(type) ||
             ((pendingProps = {
               rel: "preload",
@@ -17544,16 +17022,16 @@ function getResource(type, currentProps, pendingProps, currentResource) {
               referrerPolicy: pendingProps.referrerPolicy
             }),
             preloadPropsMap.set(type, pendingProps),
-            styles$278 ||
+            styles$271 ||
               preloadStylesheet(
                 JSCompiler_inline_result,
                 type,
                 pendingProps,
-                resource$279.state
+                resource$272.state
               )));
         if (currentProps && null === currentResource)
           throw Error(formatProdErrorMessage(528, ""));
-        return resource$279;
+        return resource$272;
       }
       if (currentProps && null !== currentResource)
         throw Error(formatProdErrorMessage(529, ""));
@@ -17650,37 +17128,37 @@ function acquireResource(hoistableRoot, resource, props) {
         return (resource.instance = instance);
       case "stylesheet":
         styleProps = getStyleKey(props.href);
-        var instance$284 = hoistableRoot.querySelector(
+        var instance$277 = hoistableRoot.querySelector(
           getStylesheetSelectorFromKey(styleProps)
         );
-        if (instance$284)
+        if (instance$277)
           return (
             (resource.state.loading |= 4),
-            (resource.instance = instance$284),
-            markNodeAsHoistable(instance$284),
-            instance$284
+            (resource.instance = instance$277),
+            markNodeAsHoistable(instance$277),
+            instance$277
           );
         instance = stylesheetPropsFromRawProps(props);
         (styleProps = preloadPropsMap.get(styleProps)) &&
           adoptPreloadPropsForStylesheet(instance, styleProps);
-        instance$284 = (
+        instance$277 = (
           hoistableRoot.ownerDocument || hoistableRoot
         ).createElement("link");
-        markNodeAsHoistable(instance$284);
-        var linkInstance = instance$284;
+        markNodeAsHoistable(instance$277);
+        var linkInstance = instance$277;
         linkInstance._p = new Promise(function (resolve, reject) {
           linkInstance.onload = resolve;
           linkInstance.onerror = reject;
         });
-        setInitialProperties(instance$284, "link", instance);
+        setInitialProperties(instance$277, "link", instance);
         resource.state.loading |= 4;
-        insertStylesheet(instance$284, props.precedence, hoistableRoot);
-        return (resource.instance = instance$284);
+        insertStylesheet(instance$277, props.precedence, hoistableRoot);
+        return (resource.instance = instance$277);
       case "script":
-        instance$284 = getScriptKey(props.src);
+        instance$277 = getScriptKey(props.src);
         if (
           (styleProps = hoistableRoot.querySelector(
-            getScriptSelectorFromKey(instance$284)
+            getScriptSelectorFromKey(instance$277)
           ))
         )
           return (
@@ -17689,7 +17167,7 @@ function acquireResource(hoistableRoot, resource, props) {
             styleProps
           );
         instance = props;
-        if ((styleProps = preloadPropsMap.get(instance$284)))
+        if ((styleProps = preloadPropsMap.get(instance$277)))
           (instance = assign({}, props)),
             adoptPreloadPropsForScript(instance, styleProps);
         hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
@@ -18021,7 +17499,7 @@ function FiberRootNode(
   this.pooledCache = null;
   this.pooledCacheLanes = 0;
   this.formState = formState;
-  this.gestureClone = this.stoppingGestures = this.pendingGestures = null;
+  this.stoppingGestures = this.pendingGestures = null;
   this.incompleteTransitions = new Map();
   this.passiveEffectDuration = this.effectDuration = -0;
   this.memoizedUpdaters = new Set();
@@ -18726,16 +18204,16 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
     0 === i && attemptExplicitHydrationTarget(target);
   }
 };
-var isomorphicReactPackageVersion$jscomp$inline_2057 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_2015 = React.version;
 if (
-  "19.1.0-experimental-f9d78089-20250306" !==
-  isomorphicReactPackageVersion$jscomp$inline_2057
+  "19.1.0-experimental-eda36a1c-20250228" !==
+  isomorphicReactPackageVersion$jscomp$inline_2015
 )
   throw Error(
     formatProdErrorMessage(
       527,
-      isomorphicReactPackageVersion$jscomp$inline_2057,
-      "19.1.0-experimental-f9d78089-20250306"
+      isomorphicReactPackageVersion$jscomp$inline_2015,
+      "19.1.0-experimental-eda36a1c-20250228"
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -18755,24 +18233,24 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
     null === componentOrElement ? null : componentOrElement.stateNode;
   return componentOrElement;
 };
-var internals$jscomp$inline_2667 = {
+var internals$jscomp$inline_2548 = {
   bundleType: 0,
-  version: "19.1.0-experimental-f9d78089-20250306",
+  version: "19.1.0-experimental-eda36a1c-20250228",
   rendererPackageName: "react-dom",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: "19.1.0-experimental-f9d78089-20250306"
+  reconcilerVersion: "19.1.0-experimental-eda36a1c-20250228"
 };
 if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
-  var hook$jscomp$inline_2668 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
+  var hook$jscomp$inline_2549 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
   if (
-    !hook$jscomp$inline_2668.isDisabled &&
-    hook$jscomp$inline_2668.supportsFiber
+    !hook$jscomp$inline_2549.isDisabled &&
+    hook$jscomp$inline_2549.supportsFiber
   )
     try {
-      (rendererID = hook$jscomp$inline_2668.inject(
-        internals$jscomp$inline_2667
+      (rendererID = hook$jscomp$inline_2549.inject(
+        internals$jscomp$inline_2548
       )),
-        (injectedHook = hook$jscomp$inline_2668);
+        (injectedHook = hook$jscomp$inline_2549);
     } catch (err) {}
 }
 function noop() {}
@@ -19025,7 +18503,7 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
 "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
   "function" ===
     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
index f8d101e..097db68 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
@@ -9600,5 +9600,5 @@
         'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server'
       );
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js
index 364fd12..2c12af6 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js
@@ -6351,4 +6351,4 @@ exports.renderToString = function (children, options) {
     'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server'
   );
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js b/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js
index 0b22dd6..5e1eeda 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js
@@ -9600,5 +9600,5 @@
         'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
       );
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js b/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js
index c57b9f4..a5ef671 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js
@@ -6445,4 +6445,4 @@ exports.renderToString = function (children, options) {
     'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
   );
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-server.browser.development.js b/node_modules/react-dom/cjs/react-dom-server.browser.development.js
index 137de48..0241823 100644
--- a/node_modules/react-dom/cjs/react-dom-server.browser.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.browser.development.js
@@ -8503,11 +8503,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     }
     var React = require("react"),
@@ -10294,5 +10294,5 @@
         startWork(request);
       });
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server.browser.production.js b/node_modules/react-dom/cjs/react-dom-server.browser.production.js
index e6f9a16..bbe8775 100644
--- a/node_modules/react-dom/cjs/react-dom-server.browser.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.browser.production.js
@@ -6892,12 +6892,12 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+  if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        "19.1.0-experimental-f9d78089-20250306"
+        "19.1.0-experimental-eda36a1c-20250228"
       )
     );
 }
@@ -7152,4 +7152,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-server.bun.development.js b/node_modules/react-dom/cjs/react-dom-server.bun.development.js
index 1c4dd6d..5f67df0 100644
--- a/node_modules/react-dom/cjs/react-dom-server.bun.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.bun.development.js
@@ -9218,13 +9218,13 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
 }
 var isomorphicReactPackageVersion$jscomp$inline_780 = React.version;
 if (
-  "19.1.0-experimental-f9d78089-20250306" !==
+  "19.1.0-experimental-eda36a1c-20250228" !==
   isomorphicReactPackageVersion$jscomp$inline_780
 )
   throw Error(
     'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
       (isomorphicReactPackageVersion$jscomp$inline_780 +
-        "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+        "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -9317,4 +9317,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request$jscomp$0);
   });
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-server.bun.production.js b/node_modules/react-dom/cjs/react-dom-server.bun.production.js
index 9832833..437307a 100644
--- a/node_modules/react-dom/cjs/react-dom-server.bun.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.bun.production.js
@@ -6370,13 +6370,13 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
 }
 var isomorphicReactPackageVersion$jscomp$inline_810 = React.version;
 if (
-  "19.1.0-experimental-f9d78089-20250306" !==
+  "19.1.0-experimental-eda36a1c-20250228" !==
   isomorphicReactPackageVersion$jscomp$inline_810
 )
   throw Error(
     'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
       (isomorphicReactPackageVersion$jscomp$inline_810 +
-        "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+        "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -6467,4 +6467,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-server.edge.development.js b/node_modules/react-dom/cjs/react-dom-server.edge.development.js
index 204bd2c..6556e9b 100644
--- a/node_modules/react-dom/cjs/react-dom-server.edge.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.edge.development.js
@@ -8526,11 +8526,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     }
     var React = require("react"),
@@ -10313,5 +10313,5 @@
         startWork(request);
       });
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server.edge.production.js b/node_modules/react-dom/cjs/react-dom-server.edge.production.js
index f60fcbd..59efc19 100644
--- a/node_modules/react-dom/cjs/react-dom-server.edge.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.edge.production.js
@@ -7001,11 +7001,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+  if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+          "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7259,4 +7259,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-server.node.development.js b/node_modules/react-dom/cjs/react-dom-server.node.development.js
index eefae42..d180179 100644
--- a/node_modules/react-dom/cjs/react-dom-server.node.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.node.development.js
@@ -8390,11 +8390,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     }
     function createDrainHandler(destination, request) {
@@ -10174,5 +10174,5 @@
         }
       };
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server.node.production.js b/node_modules/react-dom/cjs/react-dom-server.node.production.js
index 4138b1e..2e9a30a 100644
--- a/node_modules/react-dom/cjs/react-dom-server.node.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.node.production.js
@@ -6880,11 +6880,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+  if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+          "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7135,4 +7135,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js b/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js
index 50650bd..1b3c9ed 100644
--- a/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js
+++ b/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js
@@ -1069,11 +1069,6 @@
       console.error("Invalid attribute name: `%s`", attributeName);
       return !1;
     }
-    function pushMutationContext() {
-      var prev = viewTransitionMutationContext;
-      viewTransitionMutationContext = !1;
-      return prev;
-    }
     function getValueForAttributeOnCustomComponent(node, name, expected) {
       if (isAttributeNameSafe(name)) {
         if (!node.hasAttribute(name)) {
@@ -3534,7 +3529,7 @@
         )),
         dispatchQueue.push({ event: nativeEvent, listeners: inst }));
     }
-    function runEventInBatch$1(dispatchQueue) {
+    function runEventInBatch(dispatchQueue) {
       processDispatchQueue(dispatchQueue, 0);
     }
     function getInstIfValueChanged(targetInst) {
@@ -3561,7 +3556,7 @@
           nativeEvent,
           getEventTarget(nativeEvent)
         );
-        batchedUpdates$1(runEventInBatch$1, dispatchQueue);
+        batchedUpdates$1(runEventInBatch, dispatchQueue);
       }
     }
     function handleEventsForInputEventPolyfill(
@@ -9578,33 +9573,33 @@
       return current;
     }
     function updateSuspenseComponent(current, workInProgress, renderLanes) {
-      var JSCompiler_object_inline_componentStack_2791;
-      var JSCompiler_object_inline_stack_2790 = workInProgress.pendingProps;
+      var JSCompiler_object_inline_componentStack_2659;
+      var JSCompiler_object_inline_stack_2658 = workInProgress.pendingProps;
       shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
-      var JSCompiler_object_inline_message_2788 = !1;
+      var JSCompiler_object_inline_message_2656 = !1;
       var didSuspend = 0 !== (workInProgress.flags & 128);
-      (JSCompiler_object_inline_componentStack_2791 = didSuspend) ||
-        (JSCompiler_object_inline_componentStack_2791 =
+      (JSCompiler_object_inline_componentStack_2659 = didSuspend) ||
+        (JSCompiler_object_inline_componentStack_2659 =
           null !== current && null === current.memoizedState
             ? !1
             : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
-      JSCompiler_object_inline_componentStack_2791 &&
-        ((JSCompiler_object_inline_message_2788 = !0),
+      JSCompiler_object_inline_componentStack_2659 &&
+        ((JSCompiler_object_inline_message_2656 = !0),
         (workInProgress.flags &= -129));
-      JSCompiler_object_inline_componentStack_2791 =
+      JSCompiler_object_inline_componentStack_2659 =
         0 !== (workInProgress.flags & 32);
       workInProgress.flags &= -33;
       if (null === current) {
         if (isHydrating) {
-          JSCompiler_object_inline_message_2788
+          JSCompiler_object_inline_message_2656
             ? pushPrimaryTreeSuspenseHandler(workInProgress)
             : reuseSuspenseHandlerOnStack(workInProgress);
           if (isHydrating) {
-            var JSCompiler_object_inline_digest_2789 = nextHydratableInstance;
+            var JSCompiler_object_inline_digest_2657 = nextHydratableInstance;
             var JSCompiler_temp;
-            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2789)) {
+            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2657)) {
               c: {
-                var instance = JSCompiler_object_inline_digest_2789;
+                var instance = JSCompiler_object_inline_digest_2657;
                 for (
                   JSCompiler_temp = rootOrSingletonContext;
                   8 !== instance.nodeType;
@@ -9646,87 +9641,87 @@
             JSCompiler_temp &&
               (warnNonHydratedInstance(
                 workInProgress,
-                JSCompiler_object_inline_digest_2789
+                JSCompiler_object_inline_digest_2657
               ),
               throwOnHydrationMismatch(workInProgress));
           }
-          JSCompiler_object_inline_digest_2789 = workInProgress.memoizedState;
+          JSCompiler_object_inline_digest_2657 = workInProgress.memoizedState;
           if (
-            null !== JSCompiler_object_inline_digest_2789 &&
-            ((JSCompiler_object_inline_digest_2789 =
-              JSCompiler_object_inline_digest_2789.dehydrated),
-            null !== JSCompiler_object_inline_digest_2789)
+            null !== JSCompiler_object_inline_digest_2657 &&
+            ((JSCompiler_object_inline_digest_2657 =
+              JSCompiler_object_inline_digest_2657.dehydrated),
+            null !== JSCompiler_object_inline_digest_2657)
           )
             return (
-              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2789)
+              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2657)
                 ? (workInProgress.lanes = 32)
                 : (workInProgress.lanes = 536870912),
               null
             );
           popSuspenseHandler(workInProgress);
         }
-        JSCompiler_object_inline_digest_2789 =
-          JSCompiler_object_inline_stack_2790.children;
-        JSCompiler_temp = JSCompiler_object_inline_stack_2790.fallback;
-        if (JSCompiler_object_inline_message_2788)
+        JSCompiler_object_inline_digest_2657 =
+          JSCompiler_object_inline_stack_2658.children;
+        JSCompiler_temp = JSCompiler_object_inline_stack_2658.fallback;
+        if (JSCompiler_object_inline_message_2656)
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2790 =
+            (JSCompiler_object_inline_stack_2658 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2789,
+                JSCompiler_object_inline_digest_2657,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2788 = workInProgress.child),
-            (JSCompiler_object_inline_message_2788.memoizedState =
+            (JSCompiler_object_inline_message_2656 = workInProgress.child),
+            (JSCompiler_object_inline_message_2656.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2788.childLanes =
+            (JSCompiler_object_inline_message_2656.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2791,
+                JSCompiler_object_inline_componentStack_2659,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
-            JSCompiler_object_inline_stack_2790
+            JSCompiler_object_inline_stack_2658
           );
         if (
           "number" ===
-          typeof JSCompiler_object_inline_stack_2790.unstable_expectedLoadTime
+          typeof JSCompiler_object_inline_stack_2658.unstable_expectedLoadTime
         )
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2790 =
+            (JSCompiler_object_inline_stack_2658 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2789,
+                JSCompiler_object_inline_digest_2657,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2788 = workInProgress.child),
-            (JSCompiler_object_inline_message_2788.memoizedState =
+            (JSCompiler_object_inline_message_2656 = workInProgress.child),
+            (JSCompiler_object_inline_message_2656.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2788.childLanes =
+            (JSCompiler_object_inline_message_2656.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2791,
+                JSCompiler_object_inline_componentStack_2659,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
             (workInProgress.lanes = 4194304),
-            JSCompiler_object_inline_stack_2790
+            JSCompiler_object_inline_stack_2658
           );
         pushPrimaryTreeSuspenseHandler(workInProgress);
         return mountSuspensePrimaryChildren(
           workInProgress,
-          JSCompiler_object_inline_digest_2789
+          JSCompiler_object_inline_digest_2657
         );
       }
       var prevState = current.memoizedState;
       if (
         null !== prevState &&
-        ((JSCompiler_object_inline_digest_2789 = prevState.dehydrated),
-        null !== JSCompiler_object_inline_digest_2789)
+        ((JSCompiler_object_inline_digest_2657 = prevState.dehydrated),
+        null !== JSCompiler_object_inline_digest_2657)
       ) {
         if (didSuspend)
           workInProgress.flags & 256
@@ -9743,94 +9738,94 @@
                 (workInProgress.flags |= 128),
                 (workInProgress = null))
               : (reuseSuspenseHandlerOnStack(workInProgress),
-                (JSCompiler_object_inline_message_2788 =
-                  JSCompiler_object_inline_stack_2790.fallback),
-                (JSCompiler_object_inline_digest_2789 = workInProgress.mode),
-                (JSCompiler_object_inline_stack_2790 =
+                (JSCompiler_object_inline_message_2656 =
+                  JSCompiler_object_inline_stack_2658.fallback),
+                (JSCompiler_object_inline_digest_2657 = workInProgress.mode),
+                (JSCompiler_object_inline_stack_2658 =
                   mountWorkInProgressOffscreenFiber(
                     {
                       mode: "visible",
-                      children: JSCompiler_object_inline_stack_2790.children
+                      children: JSCompiler_object_inline_stack_2658.children
                     },
-                    JSCompiler_object_inline_digest_2789
+                    JSCompiler_object_inline_digest_2657
                   )),
-                (JSCompiler_object_inline_message_2788 =
+                (JSCompiler_object_inline_message_2656 =
                   createFiberFromFragment(
-                    JSCompiler_object_inline_message_2788,
-                    JSCompiler_object_inline_digest_2789,
+                    JSCompiler_object_inline_message_2656,
+                    JSCompiler_object_inline_digest_2657,
                     renderLanes,
                     null
                   )),
-                (JSCompiler_object_inline_message_2788.flags |= 2),
-                (JSCompiler_object_inline_stack_2790.return = workInProgress),
-                (JSCompiler_object_inline_message_2788.return = workInProgress),
-                (JSCompiler_object_inline_stack_2790.sibling =
-                  JSCompiler_object_inline_message_2788),
-                (workInProgress.child = JSCompiler_object_inline_stack_2790),
+                (JSCompiler_object_inline_message_2656.flags |= 2),
+                (JSCompiler_object_inline_stack_2658.return = workInProgress),
+                (JSCompiler_object_inline_message_2656.return = workInProgress),
+                (JSCompiler_object_inline_stack_2658.sibling =
+                  JSCompiler_object_inline_message_2656),
+                (workInProgress.child = JSCompiler_object_inline_stack_2658),
                 reconcileChildFibers(
                   workInProgress,
                   current.child,
                   null,
                   renderLanes
                 ),
-                (JSCompiler_object_inline_stack_2790 = workInProgress.child),
-                (JSCompiler_object_inline_stack_2790.memoizedState =
+                (JSCompiler_object_inline_stack_2658 = workInProgress.child),
+                (JSCompiler_object_inline_stack_2658.memoizedState =
                   mountSuspenseOffscreenState(renderLanes)),
-                (JSCompiler_object_inline_stack_2790.childLanes =
+                (JSCompiler_object_inline_stack_2658.childLanes =
                   getRemainingWorkInPrimaryTree(
                     current,
-                    JSCompiler_object_inline_componentStack_2791,
+                    JSCompiler_object_inline_componentStack_2659,
                     renderLanes
                   )),
                 (workInProgress.memoizedState = SUSPENDED_MARKER),
-                (workInProgress = JSCompiler_object_inline_message_2788));
+                (workInProgress = JSCompiler_object_inline_message_2656));
         else if (
           (pushPrimaryTreeSuspenseHandler(workInProgress),
           isHydrating &&
             console.error(
               "We should not be hydrating here. This is a bug in React. Please file a bug."
             ),
-          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2789))
+          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2657))
         ) {
-          JSCompiler_object_inline_componentStack_2791 =
-            JSCompiler_object_inline_digest_2789.nextSibling &&
-            JSCompiler_object_inline_digest_2789.nextSibling.dataset;
-          if (JSCompiler_object_inline_componentStack_2791) {
-            JSCompiler_temp = JSCompiler_object_inline_componentStack_2791.dgst;
-            var message = JSCompiler_object_inline_componentStack_2791.msg;
-            instance = JSCompiler_object_inline_componentStack_2791.stck;
+          JSCompiler_object_inline_componentStack_2659 =
+            JSCompiler_object_inline_digest_2657.nextSibling &&
+            JSCompiler_object_inline_digest_2657.nextSibling.dataset;
+          if (JSCompiler_object_inline_componentStack_2659) {
+            JSCompiler_temp = JSCompiler_object_inline_componentStack_2659.dgst;
+            var message = JSCompiler_object_inline_componentStack_2659.msg;
+            instance = JSCompiler_object_inline_componentStack_2659.stck;
             var componentStack =
-              JSCompiler_object_inline_componentStack_2791.cstck;
+              JSCompiler_object_inline_componentStack_2659.cstck;
           }
-          JSCompiler_object_inline_message_2788 = message;
-          JSCompiler_object_inline_digest_2789 = JSCompiler_temp;
-          JSCompiler_object_inline_stack_2790 = instance;
-          JSCompiler_temp = JSCompiler_object_inline_componentStack_2791 =
+          JSCompiler_object_inline_message_2656 = message;
+          JSCompiler_object_inline_digest_2657 = JSCompiler_temp;
+          JSCompiler_object_inline_stack_2658 = instance;
+          JSCompiler_temp = JSCompiler_object_inline_componentStack_2659 =
             componentStack;
-          "POSTPONE" !== JSCompiler_object_inline_digest_2789 &&
-            ((JSCompiler_object_inline_componentStack_2791 =
-              JSCompiler_object_inline_message_2788
-                ? Error(JSCompiler_object_inline_message_2788)
+          "POSTPONE" !== JSCompiler_object_inline_digest_2657 &&
+            ((JSCompiler_object_inline_componentStack_2659 =
+              JSCompiler_object_inline_message_2656
+                ? Error(JSCompiler_object_inline_message_2656)
                 : Error(
                     "The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."
                   )),
-            (JSCompiler_object_inline_componentStack_2791.stack =
-              JSCompiler_object_inline_stack_2790 || ""),
-            (JSCompiler_object_inline_componentStack_2791.digest =
-              JSCompiler_object_inline_digest_2789),
-            (JSCompiler_object_inline_stack_2790 =
+            (JSCompiler_object_inline_componentStack_2659.stack =
+              JSCompiler_object_inline_stack_2658 || ""),
+            (JSCompiler_object_inline_componentStack_2659.digest =
+              JSCompiler_object_inline_digest_2657),
+            (JSCompiler_object_inline_stack_2658 =
               void 0 === JSCompiler_temp ? null : JSCompiler_temp),
-            (JSCompiler_object_inline_message_2788 = {
-              value: JSCompiler_object_inline_componentStack_2791,
+            (JSCompiler_object_inline_message_2656 = {
+              value: JSCompiler_object_inline_componentStack_2659,
               source: null,
-              stack: JSCompiler_object_inline_stack_2790
+              stack: JSCompiler_object_inline_stack_2658
             }),
-            "string" === typeof JSCompiler_object_inline_stack_2790 &&
+            "string" === typeof JSCompiler_object_inline_stack_2658 &&
               CapturedStacks.set(
-                JSCompiler_object_inline_componentStack_2791,
-                JSCompiler_object_inline_message_2788
+                JSCompiler_object_inline_componentStack_2659,
+                JSCompiler_object_inline_message_2656
               ),
-            queueHydrationError(JSCompiler_object_inline_message_2788));
+            queueHydrationError(JSCompiler_object_inline_message_2656));
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
             workInProgress,
@@ -9844,44 +9839,44 @@
               renderLanes,
               !1
             ),
-          (JSCompiler_object_inline_componentStack_2791 =
+          (JSCompiler_object_inline_componentStack_2659 =
             0 !== (renderLanes & current.childLanes)),
-          didReceiveUpdate || JSCompiler_object_inline_componentStack_2791)
+          didReceiveUpdate || JSCompiler_object_inline_componentStack_2659)
         ) {
-          JSCompiler_object_inline_componentStack_2791 = workInProgressRoot;
+          JSCompiler_object_inline_componentStack_2659 = workInProgressRoot;
           if (
-            null !== JSCompiler_object_inline_componentStack_2791 &&
-            ((JSCompiler_object_inline_stack_2790 = renderLanes & -renderLanes),
-            (JSCompiler_object_inline_stack_2790 =
-              0 !== (JSCompiler_object_inline_stack_2790 & 42)
+            null !== JSCompiler_object_inline_componentStack_2659 &&
+            ((JSCompiler_object_inline_stack_2658 = renderLanes & -renderLanes),
+            (JSCompiler_object_inline_stack_2658 =
+              0 !== (JSCompiler_object_inline_stack_2658 & 42)
                 ? 1
                 : getBumpedLaneForHydrationByLane(
-                    JSCompiler_object_inline_stack_2790
+                    JSCompiler_object_inline_stack_2658
                   )),
-            (JSCompiler_object_inline_stack_2790 =
+            (JSCompiler_object_inline_stack_2658 =
               0 !==
-              (JSCompiler_object_inline_stack_2790 &
-                (JSCompiler_object_inline_componentStack_2791.suspendedLanes |
+              (JSCompiler_object_inline_stack_2658 &
+                (JSCompiler_object_inline_componentStack_2659.suspendedLanes |
                   renderLanes))
                 ? 0
-                : JSCompiler_object_inline_stack_2790),
-            0 !== JSCompiler_object_inline_stack_2790 &&
-              JSCompiler_object_inline_stack_2790 !== prevState.retryLane)
+                : JSCompiler_object_inline_stack_2658),
+            0 !== JSCompiler_object_inline_stack_2658 &&
+              JSCompiler_object_inline_stack_2658 !== prevState.retryLane)
           )
             throw (
-              ((prevState.retryLane = JSCompiler_object_inline_stack_2790),
+              ((prevState.retryLane = JSCompiler_object_inline_stack_2658),
               enqueueConcurrentRenderForLane(
                 current,
-                JSCompiler_object_inline_stack_2790
+                JSCompiler_object_inline_stack_2658
               ),
               scheduleUpdateOnFiber(
-                JSCompiler_object_inline_componentStack_2791,
+                JSCompiler_object_inline_componentStack_2659,
                 current,
-                JSCompiler_object_inline_stack_2790
+                JSCompiler_object_inline_stack_2658
               ),
               SelectiveHydrationException)
             );
-          JSCompiler_object_inline_digest_2789.data ===
+          JSCompiler_object_inline_digest_2657.data ===
             SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
@@ -9889,14 +9884,14 @@
             renderLanes
           );
         } else
-          JSCompiler_object_inline_digest_2789.data ===
+          JSCompiler_object_inline_digest_2657.data ===
           SUSPENSE_PENDING_START_DATA
             ? ((workInProgress.flags |= 192),
               (workInProgress.child = current.child),
               (workInProgress = null))
             : ((current = prevState.treeContext),
               (nextHydratableInstance = getNextHydratable(
-                JSCompiler_object_inline_digest_2789.nextSibling
+                JSCompiler_object_inline_digest_2657.nextSibling
               )),
               (hydrationParentFiber = workInProgress),
               (isHydrating = !0),
@@ -9914,54 +9909,54 @@
                 (treeContextProvider = workInProgress)),
               (workInProgress = mountSuspensePrimaryChildren(
                 workInProgress,
-                JSCompiler_object_inline_stack_2790.children
+                JSCompiler_object_inline_stack_2658.children
               )),
               (workInProgress.flags |= 4096));
         return workInProgress;
       }
-      if (JSCompiler_object_inline_message_2788)
+      if (JSCompiler_object_inline_message_2656)
         return (
           reuseSuspenseHandlerOnStack(workInProgress),
-          (JSCompiler_object_inline_message_2788 =
-            JSCompiler_object_inline_stack_2790.fallback),
-          (JSCompiler_object_inline_digest_2789 = workInProgress.mode),
+          (JSCompiler_object_inline_message_2656 =
+            JSCompiler_object_inline_stack_2658.fallback),
+          (JSCompiler_object_inline_digest_2657 = workInProgress.mode),
           (JSCompiler_temp = current.child),
           (instance = JSCompiler_temp.sibling),
-          (JSCompiler_object_inline_stack_2790 = createWorkInProgress(
+          (JSCompiler_object_inline_stack_2658 = createWorkInProgress(
             JSCompiler_temp,
             {
               mode: "hidden",
-              children: JSCompiler_object_inline_stack_2790.children
+              children: JSCompiler_object_inline_stack_2658.children
             }
           )),
-          (JSCompiler_object_inline_stack_2790.subtreeFlags =
+          (JSCompiler_object_inline_stack_2658.subtreeFlags =
             JSCompiler_temp.subtreeFlags & 65011712),
           null !== instance
-            ? (JSCompiler_object_inline_message_2788 = createWorkInProgress(
+            ? (JSCompiler_object_inline_message_2656 = createWorkInProgress(
                 instance,
-                JSCompiler_object_inline_message_2788
+                JSCompiler_object_inline_message_2656
               ))
-            : ((JSCompiler_object_inline_message_2788 = createFiberFromFragment(
-                JSCompiler_object_inline_message_2788,
-                JSCompiler_object_inline_digest_2789,
+            : ((JSCompiler_object_inline_message_2656 = createFiberFromFragment(
+                JSCompiler_object_inline_message_2656,
+                JSCompiler_object_inline_digest_2657,
                 renderLanes,
                 null
               )),
-              (JSCompiler_object_inline_message_2788.flags |= 2)),
-          (JSCompiler_object_inline_message_2788.return = workInProgress),
-          (JSCompiler_object_inline_stack_2790.return = workInProgress),
-          (JSCompiler_object_inline_stack_2790.sibling =
-            JSCompiler_object_inline_message_2788),
-          (workInProgress.child = JSCompiler_object_inline_stack_2790),
-          (JSCompiler_object_inline_stack_2790 =
-            JSCompiler_object_inline_message_2788),
-          (JSCompiler_object_inline_message_2788 = workInProgress.child),
-          (JSCompiler_object_inline_digest_2789 = current.child.memoizedState),
-          null === JSCompiler_object_inline_digest_2789
-            ? (JSCompiler_object_inline_digest_2789 =
+              (JSCompiler_object_inline_message_2656.flags |= 2)),
+          (JSCompiler_object_inline_message_2656.return = workInProgress),
+          (JSCompiler_object_inline_stack_2658.return = workInProgress),
+          (JSCompiler_object_inline_stack_2658.sibling =
+            JSCompiler_object_inline_message_2656),
+          (workInProgress.child = JSCompiler_object_inline_stack_2658),
+          (JSCompiler_object_inline_stack_2658 =
+            JSCompiler_object_inline_message_2656),
+          (JSCompiler_object_inline_message_2656 = workInProgress.child),
+          (JSCompiler_object_inline_digest_2657 = current.child.memoizedState),
+          null === JSCompiler_object_inline_digest_2657
+            ? (JSCompiler_object_inline_digest_2657 =
                 mountSuspenseOffscreenState(renderLanes))
             : ((JSCompiler_temp =
-                JSCompiler_object_inline_digest_2789.cachePool),
+                JSCompiler_object_inline_digest_2657.cachePool),
               null !== JSCompiler_temp
                 ? ((instance = CacheContext._currentValue),
                   (JSCompiler_temp =
@@ -9969,38 +9964,38 @@
                       ? { parent: instance, pool: instance }
                       : JSCompiler_temp))
                 : (JSCompiler_temp = getSuspendedCache()),
-              (JSCompiler_object_inline_digest_2789 = {
+              (JSCompiler_object_inline_digest_2657 = {
                 baseLanes:
-                  JSCompiler_object_inline_digest_2789.baseLanes | renderLanes,
+                  JSCompiler_object_inline_digest_2657.baseLanes | renderLanes,
                 cachePool: JSCompiler_temp
               })),
-          (JSCompiler_object_inline_message_2788.memoizedState =
-            JSCompiler_object_inline_digest_2789),
-          (JSCompiler_object_inline_message_2788.childLanes =
+          (JSCompiler_object_inline_message_2656.memoizedState =
+            JSCompiler_object_inline_digest_2657),
+          (JSCompiler_object_inline_message_2656.childLanes =
             getRemainingWorkInPrimaryTree(
               current,
-              JSCompiler_object_inline_componentStack_2791,
+              JSCompiler_object_inline_componentStack_2659,
               renderLanes
             )),
           (workInProgress.memoizedState = SUSPENDED_MARKER),
-          JSCompiler_object_inline_stack_2790
+          JSCompiler_object_inline_stack_2658
         );
       pushPrimaryTreeSuspenseHandler(workInProgress);
       renderLanes = current.child;
       current = renderLanes.sibling;
       renderLanes = createWorkInProgress(renderLanes, {
         mode: "visible",
-        children: JSCompiler_object_inline_stack_2790.children
+        children: JSCompiler_object_inline_stack_2658.children
       });
       renderLanes.return = workInProgress;
       renderLanes.sibling = null;
       null !== current &&
-        ((JSCompiler_object_inline_componentStack_2791 =
+        ((JSCompiler_object_inline_componentStack_2659 =
           workInProgress.deletions),
-        null === JSCompiler_object_inline_componentStack_2791
+        null === JSCompiler_object_inline_componentStack_2659
           ? ((workInProgress.deletions = [current]),
             (workInProgress.flags |= 16))
-          : JSCompiler_object_inline_componentStack_2791.push(current));
+          : JSCompiler_object_inline_componentStack_2659.push(current));
       workInProgress.child = renderLanes;
       workInProgress.memoizedState = null;
       return renderLanes;
@@ -12163,7 +12158,7 @@
         focusedElem: root,
         selectionRange: JSCompiler_temp
       };
-      _enabled = !1;
+      shouldStartViewTransition = _enabled = !1;
       committedLanes = (committedLanes & 335544064) === committedLanes;
       nextEffect = firstChild;
       for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
@@ -13316,7 +13311,8 @@
             (offscreenSubtreeWasHidden ||
               null === current ||
               safelyDetachRef(current, current.return));
-          flags = pushMutationContext();
+          flags = viewTransitionMutationContext;
+          viewTransitionMutationContext = !1;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
           (lanes & 335544064) === lanes &&
@@ -13402,30 +13398,7 @@
                       }
                     );
                 }
-              finishedWork = root.containerInfo;
-              finishedWork =
-                9 === finishedWork.nodeType
-                  ? finishedWork.documentElement
-                  : finishedWork.ownerDocument.documentElement;
-              null !== finishedWork &&
-                "" === finishedWork.style.viewTransitionName &&
-                ((finishedWork.style.viewTransitionName = "none"),
-                finishedWork.animate(
-                  { opacity: [0, 0], pointerEvents: ["none", "none"] },
-                  {
-                    duration: 0,
-                    fill: "forwards",
-                    pseudoElement: "::view-transition-group(root)"
-                  }
-                ),
-                finishedWork.animate(
-                  { width: [0, 0], height: [0, 0] },
-                  {
-                    duration: 0,
-                    fill: "forwards",
-                    pseudoElement: "::view-transition"
-                  }
-                ));
+              cancelRootViewTransitionName(root.containerInfo);
             }
             break;
           case 5:
@@ -15032,8 +15005,7 @@
           null != props.onScroll &&
             listenToNonDelegatedEvent("scroll", didHydrate),
           null != props.onScrollEnd &&
-            (listenToNonDelegatedEvent("scrollend", didHydrate),
-            listenToNonDelegatedEvent("scroll", didHydrate)),
+            listenToNonDelegatedEvent("scrollend", didHydrate),
           null != props.onClick && (didHydrate.onclick = noop$1),
           (didHydrate = !0))
         : (didHydrate = !1);
@@ -15127,18 +15099,14 @@
     }
     function emitPendingHydrationWarnings() {
       var diffRoot = hydrationDiffRootDEV;
-      if (null !== diffRoot) {
-        hydrationDiffRootDEV = null;
-        for (var diff = describeDiff(diffRoot); 0 < diffRoot.children.length; )
-          diffRoot = diffRoot.children[0];
-        runWithFiberInDEV(diffRoot.fiber, function () {
-          console.error(
-            "A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s",
-            "https://react.dev/link/hydration-mismatch",
-            diff
-          );
-        });
-      }
+      null !== diffRoot &&
+        ((hydrationDiffRootDEV = null),
+        (diffRoot = describeDiff(diffRoot)),
+        console.error(
+          "A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s",
+          "https://react.dev/link/hydration-mismatch",
+          diffRoot
+        ));
     }
     function getViewTransitionName(props, instance) {
       return null != props.name && "auto" !== props.name
@@ -15967,173 +15935,6 @@
           popProvider(CacheContext, interruptedWork);
       }
     }
-    function recursivelyInsertClonesFromExistingTree(
-      parentFiber,
-      hostParentClone
-    ) {
-      for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-        switch (parentFiber.tag) {
-          case 5:
-            var clone = parentFiber.stateNode.cloneNode(!0);
-            hostParentClone.appendChild(clone);
-            unhideHostChildren &&
-              unhideInstance(clone, parentFiber.memoizedProps);
-            break;
-          case 6:
-            clone = parentFiber.stateNode;
-            if (null === clone)
-              throw Error(
-                "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
-              );
-            clone = clone.cloneNode(!1);
-            hostParentClone.appendChild(clone);
-            unhideHostChildren && (clone.nodeValue = parentFiber.memoizedProps);
-            break;
-          case 4:
-            break;
-          case 22:
-            null === parentFiber.memoizedState &&
-              recursivelyInsertClonesFromExistingTree(
-                parentFiber,
-                hostParentClone
-              );
-            break;
-          case 30:
-            clone = pushMutationContext();
-            recursivelyInsertClonesFromExistingTree(
-              parentFiber,
-              hostParentClone
-            );
-            viewTransitionMutationContext = clone;
-            break;
-          default:
-            recursivelyInsertClonesFromExistingTree(
-              parentFiber,
-              hostParentClone
-            );
-        }
-        parentFiber = parentFiber.sibling;
-      }
-    }
-    function recursivelyInsertClones(parentFiber, hostParentClone$jscomp$0) {
-      if (
-        null === parentFiber.alternate ||
-        0 !== (parentFiber.subtreeFlags & 13878)
-      )
-        for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-          var finishedWork = parentFiber,
-            hostParentClone = hostParentClone$jscomp$0,
-            current = finishedWork.alternate,
-            flags = finishedWork.flags;
-          switch (finishedWork.tag) {
-            case 26:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              break;
-            case 27:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              if (flags & 4)
-                if (null === current)
-                  console.error(
-                    "useSwipeTransition() caused something to render a new <%s>. This is not possible in the current implementation. Make sure that the swipe doesn't mount any new <%s> elements.",
-                    finishedWork.type,
-                    finishedWork.type
-                  );
-                else {
-                  hostParentClone = finishedWork.memoizedProps;
-                  current = current.memoizedProps;
-                  flags = finishedWork.stateNode;
-                  var clone = finishedWork.type;
-                  var prev = pushMutationContext();
-                  try {
-                    commitUpdate(
-                      flags,
-                      clone,
-                      current,
-                      hostParentClone,
-                      finishedWork
-                    ),
-                      viewTransitionMutationContext &&
-                        console.error(
-                          "useSwipeTransition() caused something to mutate <%s>. This is not possible in the current implementation. Make sure that the swipe doesn't update any state which causes <%s> to change.",
-                          finishedWork.type,
-                          finishedWork.type
-                        ),
-                      commitUpdate(
-                        flags,
-                        clone,
-                        hostParentClone,
-                        current,
-                        finishedWork
-                      );
-                  } finally {
-                    viewTransitionMutationContext = prev;
-                  }
-                }
-              break;
-            case 5:
-              clone = finishedWork.stateNode;
-              null === current
-                ? hostParentClone.appendChild(clone)
-                : (null === finishedWork.child
-                    ? ((clone = clone.cloneNode(!0)),
-                      finishedWork.flags & 32 && resetTextContent(clone))
-                    : (clone = clone.cloneNode(!1)),
-                  flags & 4 &&
-                    commitUpdate(
-                      clone,
-                      finishedWork.type,
-                      current.memoizedProps,
-                      finishedWork.memoizedProps
-                    ),
-                  unhideHostChildren
-                    ? ((unhideHostChildren = !1),
-                      recursivelyInsertClones(finishedWork, clone),
-                      hostParentClone.appendChild(clone),
-                      (unhideHostChildren = !0),
-                      unhideInstance(clone, finishedWork.memoizedProps))
-                    : (recursivelyInsertClones(finishedWork, clone),
-                      hostParentClone.appendChild(clone)));
-              break;
-            case 6:
-              clone = finishedWork.stateNode;
-              if (null === clone)
-                throw Error(
-                  "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
-                );
-              null === current
-                ? hostParentClone.appendChild(clone)
-                : ((clone = clone.cloneNode(!1)),
-                  flags & 4 && (clone.nodeValue = current.memoizedProps),
-                  hostParentClone.appendChild(clone),
-                  unhideHostChildren &&
-                    (clone.nodeValue = finishedWork.memoizedProps));
-              break;
-            case 4:
-              break;
-            case 22:
-              null === finishedWork.memoizedState &&
-                ((unhideHostChildren =
-                  (current = unhideHostChildren) || 0 !== (flags & 8192)),
-                recursivelyInsertClones(finishedWork, hostParentClone),
-                (unhideHostChildren = current));
-              break;
-            case 30:
-              current = pushMutationContext();
-              recursivelyInsertClones(finishedWork, hostParentClone);
-              viewTransitionMutationContext && (finishedWork.flags |= 4);
-              viewTransitionMutationContext = current;
-              break;
-            default:
-              recursivelyInsertClones(finishedWork, hostParentClone);
-          }
-          parentFiber = parentFiber.sibling;
-        }
-      else
-        recursivelyInsertClonesFromExistingTree(
-          parentFiber,
-          hostParentClone$jscomp$0
-        );
-    }
     function findFiberRootForHostRoot(hostRoot) {
       var maybeFiber = getClosestInstanceFromNode(hostRoot);
       if (null != maybeFiber) {
@@ -17662,7 +17463,6 @@
             ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
             : suspendedCommitReason === THROTTLED_COMMIT &&
               logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-          shouldStartViewTransition = !1;
           suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
           if (
             0 !== (finishedWork.subtreeFlags & 13878) ||
@@ -18012,158 +17812,22 @@
         flushSyncWorkAcrossRoots_impl(0, !1);
       }
     }
-    function commitGestureOnRoot(root, finishedWork) {
+    function commitGestureOnRoot(root) {
       var finishedGesture = root.pendingGestures;
       if (null === finishedGesture) ensureRootIsScheduled(root);
       else {
         deleteScheduledGesture(root, finishedGesture);
-        var prevTransition = ReactSharedInternals.T;
-        ReactSharedInternals.T = null;
-        var previousPriority = ReactDOMSharedInternals.p;
-        ReactDOMSharedInternals.p = DiscreteEventPriority;
-        var prevExecutionContext = executionContext;
+        var prevTransition = ReactSharedInternals.T,
+          previousPriority = ReactDOMSharedInternals.p,
+          prevExecutionContext = executionContext;
         executionContext |= CommitContext;
-        try {
-          unhideHostChildren = !1;
-          didWarnForRootClone ||
-            ((didWarnForRootClone = !0),
-            console.warn(
-              "useSwipeTransition() caused something to mutate or relayout the root. This currently requires a clone of the whole document. Make sure to add a <ViewTransition> directly around an absolutely positioned DOM node to minimize the impact of any changes caused by the Swipe Transition."
-            ));
-          var rootContainer = root.containerInfo,
-            documentElement =
-              9 === rootContainer.nodeType
-                ? rootContainer.documentElement
-                : rootContainer.ownerDocument.documentElement;
-          null !== documentElement &&
-            "" === documentElement.style.viewTransitionName &&
-            (documentElement.style.viewTransitionName = "none");
-          var containerInstance =
-            9 === rootContainer.nodeType
-              ? rootContainer.body
-              : "HTML" === rootContainer.nodeName
-                ? rootContainer.ownerDocument.body
-                : rootContainer;
-          var containerParent = containerInstance.parentNode;
-          if (null === containerParent)
-            throw Error(
-              "Cannot use a useSwipeTransition() in a detached root."
-            );
-          var clone = containerInstance.cloneNode(!1),
-            computedStyle = getComputedStyle(containerInstance);
-          if (
-            "absolute" !== computedStyle.position &&
-            "fixed" !== computedStyle.position
-          ) {
-            for (
-              rootContainer = containerParent;
-              null != rootContainer.parentNode &&
-              9 !== rootContainer.parentNode.nodeType &&
-              "static" === getComputedStyle(rootContainer).position;
-
-            )
-              rootContainer = rootContainer.parentNode;
-            var positionedAncestorStyle = rootContainer.style,
-              containerInstanceStyle = containerInstance.style,
-              prevAncestorTranslate = positionedAncestorStyle.translate,
-              prevAncestorScale = positionedAncestorStyle.scale,
-              prevAncestorRotate = positionedAncestorStyle.rotate,
-              prevAncestorTransform = positionedAncestorStyle.transform,
-              prevTranslate = containerInstanceStyle.translate,
-              prevScale = containerInstanceStyle.scale,
-              prevRotate = containerInstanceStyle.rotate,
-              prevTransform = containerInstanceStyle.transform;
-            positionedAncestorStyle.translate = "none";
-            positionedAncestorStyle.scale = "none";
-            positionedAncestorStyle.rotate = "none";
-            positionedAncestorStyle.transform = "none";
-            containerInstanceStyle.translate = "none";
-            containerInstanceStyle.scale = "none";
-            containerInstanceStyle.rotate = "none";
-            containerInstanceStyle.transform = "none";
-            var ancestorRect = rootContainer.getBoundingClientRect(),
-              rect = containerInstance.getBoundingClientRect(),
-              cloneStyle = clone.style;
-            cloneStyle.position = "absolute";
-            cloneStyle.top = rect.top - ancestorRect.top + "px";
-            cloneStyle.left = rect.left - ancestorRect.left + "px";
-            cloneStyle.width = rect.width + "px";
-            cloneStyle.height = rect.height + "px";
-            cloneStyle.margin = "0px";
-            cloneStyle.boxSizing = "border-box";
-            positionedAncestorStyle.translate = prevAncestorTranslate;
-            positionedAncestorStyle.scale = prevAncestorScale;
-            positionedAncestorStyle.rotate = prevAncestorRotate;
-            positionedAncestorStyle.transform = prevAncestorTransform;
-            containerInstanceStyle.translate = prevTranslate;
-            containerInstanceStyle.scale = prevScale;
-            containerInstanceStyle.rotate = prevRotate;
-            containerInstanceStyle.transform = prevTransform;
-          }
-          clone.style.viewTransitionName = "root";
-          var transform = computedStyle.transform;
-          "none" === transform && (transform = "");
-          var scale = computedStyle.scale;
-          if ("none" !== scale && "" !== scale) {
-            var parts = scale.split(" ");
-            transform =
-              (3 === parts.length ? "scale3d" : "scale") +
-              "(" +
-              parts.join(", ") +
-              ") " +
-              transform;
-          }
-          var rotate = computedStyle.rotate;
-          if ("none" !== rotate && "" !== rotate) {
-            var _parts = rotate.split(" ");
-            transform =
-              1 === _parts.length
-                ? "rotate(" + _parts[0] + ") " + transform
-                : 2 === _parts.length
-                  ? "rotate" +
-                    _parts[0].toUpperCase() +
-                    "(" +
-                    _parts[1] +
-                    ") " +
-                    transform
-                  : "rotate3d(" + _parts.join(", ") + ") " + transform;
-          }
-          var translate = computedStyle.translate;
-          if ("none" !== translate && "" !== translate) {
-            var _parts2 = translate.split(" ");
-            transform =
-              (3 === _parts2.length ? "translate3d" : "translate") +
-              "(" +
-              _parts2.join(", ") +
-              ") " +
-              transform;
-          }
-          var transform$jscomp$0 = transform;
-          clone.style.translate = "none";
-          clone.style.scale = "none";
-          clone.style.rotate = "none";
-          clone.style.transform =
-            "translate(-20000px, -20000px) " + transform$jscomp$0;
-          containerInstance.parentNode.insertBefore(
-            clone,
-            containerInstance.nextSibling
-          );
-          root.gestureClone = clone;
-          recursivelyInsertClones(finishedWork, clone);
-        } finally {
-          (executionContext = prevExecutionContext),
-            (ReactDOMSharedInternals.p = previousPriority),
-            (ReactSharedInternals.T = prevTransition);
-        }
+        executionContext = prevExecutionContext;
+        ReactDOMSharedInternals.p = previousPriority;
+        ReactSharedInternals.T = prevTransition;
         pendingTransitionTypes = null;
         pendingEffectsStatus = PENDING_GESTURE_MUTATION_PHASE;
         finishedGesture.running = startGestureTransition(
           root.containerInfo,
-          finishedGesture.provider,
-          finishedGesture.rangeCurrent,
-          finishedGesture.direction
-            ? finishedGesture.rangeNext
-            : finishedGesture.rangePrevious,
           pendingTransitionTypes,
           flushGestureMutations,
           flushGestureAnimations
@@ -18181,24 +17845,7 @@
         var prevExecutionContext = executionContext;
         executionContext |= CommitContext;
         try {
-          var rootClone = root.gestureClone;
-          if (null !== rootClone) {
-            root.gestureClone = null;
-            var rootContainer = root.containerInfo;
-            var containerInstance =
-              9 === rootContainer.nodeType
-                ? rootContainer.body
-                : "HTML" === rootContainer.nodeName
-                  ? rootContainer.ownerDocument.body
-                  : rootContainer;
-            var containerParent = containerInstance.parentNode;
-            if (null === containerParent)
-              throw Error(
-                "Cannot use a useSwipeTransition() in a detached root."
-              );
-            containerParent.removeChild(rootClone);
-            containerInstance.style.viewTransitionName = "root";
-          }
+          cancelRootViewTransitionName(root.containerInfo);
         } finally {
           (executionContext = prevExecutionContext),
             (ReactDOMSharedInternals.p = previousPriority),
@@ -18872,7 +18519,7 @@
       temp.parentNode.removeChild(temp);
       return form;
     }
-    function extractEvents$2(
+    function extractEvents$1(
       dispatchQueue,
       domEventName,
       maybeTargetInst,
@@ -18958,38 +18605,6 @@
         });
       }
     }
-    function runEventInBatch(dispatchQueue) {
-      processDispatchQueue(dispatchQueue, 0);
-    }
-    function fireScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-      nativeEventTarget[internalScrollTimer] = void 0;
-      if (isMouseDown || isTouchStarted)
-        debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-      else {
-        var dispatchQueue = [];
-        targetInst = accumulateTwoPhaseListeners(targetInst, "onScrollEnd");
-        0 < targetInst.length &&
-          ((nativeEvent = new SyntheticUIEvent(
-            "onScrollEnd",
-            "scrollend",
-            null,
-            nativeEvent,
-            nativeEventTarget
-          )),
-          dispatchQueue.push({ event: nativeEvent, listeners: targetInst }));
-        batchedUpdates$1(runEventInBatch, dispatchQueue);
-      }
-    }
-    function debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-      var existingTimer = nativeEventTarget[internalScrollTimer];
-      null != existingTimer && clearTimeout(existingTimer);
-      null !== targetInst &&
-        ((targetInst = setTimeout(
-          fireScrollEnd.bind(null, targetInst, nativeEvent, nativeEventTarget),
-          DEBOUNCE_TIMEOUT
-        )),
-        (nativeEventTarget[internalScrollTimer] = targetInst));
-    }
     function executeDispatch(event, listener, currentTarget) {
       event.currentTarget = currentTarget;
       try {
@@ -19287,15 +18902,39 @@
               case "beforetoggle":
                 SyntheticEventCtor = SyntheticToggleEvent;
             }
-            var inCapturePhase = 0 !== (eventSystemFlags & 4);
-            inCapturePhase = accumulateSinglePhaseListeners(
-              targetInst,
-              reactName,
-              nativeEvent.type,
-              inCapturePhase,
-              !inCapturePhase &&
-                ("scroll" === domEventName || "scrollend" === domEventName)
-            );
+            var inCapturePhase = 0 !== (eventSystemFlags & 4),
+              accumulateTargetOnly =
+                !inCapturePhase &&
+                ("scroll" === domEventName || "scrollend" === domEventName),
+              reactEventName = inCapturePhase
+                ? null !== reactName
+                  ? reactName + "Capture"
+                  : null
+                : reactName;
+            inCapturePhase = [];
+            for (
+              var instance = targetInst, lastHostComponent;
+              null !== instance;
+
+            ) {
+              var _instance2 = instance;
+              lastHostComponent = _instance2.stateNode;
+              _instance2 = _instance2.tag;
+              (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
+                null === lastHostComponent ||
+                null === reactEventName ||
+                ((_instance2 = getListener(instance, reactEventName)),
+                null != _instance2 &&
+                  inCapturePhase.push(
+                    createDispatchListener(
+                      instance,
+                      _instance2,
+                      lastHostComponent
+                    )
+                  ));
+              if (accumulateTargetOnly) break;
+              instance = instance.return;
+            }
             0 < inCapturePhase.length &&
               ((reactName = new SyntheticEventCtor(
                 reactName,
@@ -19340,106 +18979,111 @@
                   (reactEventType = reactEventType
                     ? getClosestInstanceFromNode(reactEventType)
                     : null),
-                  null !== reactEventType)
-                ) {
-                  inCapturePhase = getNearestMountedFiber(reactEventType);
-                  var tag = reactEventType.tag;
-                  if (
-                    reactEventType !== inCapturePhase ||
-                    (5 !== tag && 27 !== tag && 6 !== tag)
-                  )
-                    reactEventType = null;
-                }
+                  null !== reactEventType &&
+                    ((accumulateTargetOnly =
+                      getNearestMountedFiber(reactEventType)),
+                    (inCapturePhase = reactEventType.tag),
+                    reactEventType !== accumulateTargetOnly ||
+                      (5 !== inCapturePhase &&
+                        27 !== inCapturePhase &&
+                        6 !== inCapturePhase)))
+                )
+                  reactEventType = null;
               } else (SyntheticEventCtor = null), (reactEventType = targetInst);
               if (SyntheticEventCtor !== reactEventType) {
-                tag = SyntheticMouseEvent;
-                var leaveEventType = "onMouseLeave",
-                  enterEventType = "onMouseEnter",
-                  eventTypePrefix = "mouse";
+                inCapturePhase = SyntheticMouseEvent;
+                _instance2 = "onMouseLeave";
+                reactEventName = "onMouseEnter";
+                instance = "mouse";
                 if (
                   "pointerout" === domEventName ||
                   "pointerover" === domEventName
                 )
-                  (tag = SyntheticPointerEvent),
-                    (leaveEventType = "onPointerLeave"),
-                    (enterEventType = "onPointerEnter"),
-                    (eventTypePrefix = "pointer");
-                inCapturePhase =
+                  (inCapturePhase = SyntheticPointerEvent),
+                    (_instance2 = "onPointerLeave"),
+                    (reactEventName = "onPointerEnter"),
+                    (instance = "pointer");
+                accumulateTargetOnly =
                   null == SyntheticEventCtor
                     ? reactName
                     : getNodeFromInstance(SyntheticEventCtor);
-                var toNode =
+                lastHostComponent =
                   null == reactEventType
                     ? reactName
                     : getNodeFromInstance(reactEventType);
-                reactName = new tag(
-                  leaveEventType,
-                  eventTypePrefix + "leave",
+                reactName = new inCapturePhase(
+                  _instance2,
+                  instance + "leave",
                   SyntheticEventCtor,
                   nativeEvent,
                   nativeEventTarget
                 );
-                reactName.target = inCapturePhase;
-                reactName.relatedTarget = toNode;
-                leaveEventType = null;
+                reactName.target = accumulateTargetOnly;
+                reactName.relatedTarget = lastHostComponent;
+                _instance2 = null;
                 getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
-                  ((tag = new tag(
-                    enterEventType,
-                    eventTypePrefix + "enter",
+                  ((inCapturePhase = new inCapturePhase(
+                    reactEventName,
+                    instance + "enter",
                     reactEventType,
                     nativeEvent,
                     nativeEventTarget
                   )),
-                  (tag.target = toNode),
-                  (tag.relatedTarget = inCapturePhase),
-                  (leaveEventType = tag));
-                inCapturePhase = leaveEventType;
+                  (inCapturePhase.target = lastHostComponent),
+                  (inCapturePhase.relatedTarget = accumulateTargetOnly),
+                  (_instance2 = inCapturePhase));
+                accumulateTargetOnly = _instance2;
                 if (SyntheticEventCtor && reactEventType)
                   b: {
-                    tag = SyntheticEventCtor;
-                    enterEventType = reactEventType;
-                    eventTypePrefix = 0;
-                    for (toNode = tag; toNode; toNode = getParent(toNode))
-                      eventTypePrefix++;
-                    toNode = 0;
+                    inCapturePhase = SyntheticEventCtor;
+                    reactEventName = reactEventType;
+                    instance = 0;
                     for (
-                      leaveEventType = enterEventType;
-                      leaveEventType;
-                      leaveEventType = getParent(leaveEventType)
+                      lastHostComponent = inCapturePhase;
+                      lastHostComponent;
+                      lastHostComponent = getParent(lastHostComponent)
                     )
-                      toNode++;
-                    for (; 0 < eventTypePrefix - toNode; )
-                      (tag = getParent(tag)), eventTypePrefix--;
-                    for (; 0 < toNode - eventTypePrefix; )
-                      (enterEventType = getParent(enterEventType)), toNode--;
-                    for (; eventTypePrefix--; ) {
+                      instance++;
+                    lastHostComponent = 0;
+                    for (
+                      _instance2 = reactEventName;
+                      _instance2;
+                      _instance2 = getParent(_instance2)
+                    )
+                      lastHostComponent++;
+                    for (; 0 < instance - lastHostComponent; )
+                      (inCapturePhase = getParent(inCapturePhase)), instance--;
+                    for (; 0 < lastHostComponent - instance; )
+                      (reactEventName = getParent(reactEventName)),
+                        lastHostComponent--;
+                    for (; instance--; ) {
                       if (
-                        tag === enterEventType ||
-                        (null !== enterEventType &&
-                          tag === enterEventType.alternate)
+                        inCapturePhase === reactEventName ||
+                        (null !== reactEventName &&
+                          inCapturePhase === reactEventName.alternate)
                       )
                         break b;
-                      tag = getParent(tag);
-                      enterEventType = getParent(enterEventType);
+                      inCapturePhase = getParent(inCapturePhase);
+                      reactEventName = getParent(reactEventName);
                     }
-                    tag = null;
+                    inCapturePhase = null;
                   }
-                else tag = null;
+                else inCapturePhase = null;
                 null !== SyntheticEventCtor &&
                   accumulateEnterLeaveListenersForEvent(
                     dispatchQueue,
                     reactName,
                     SyntheticEventCtor,
-                    tag,
+                    inCapturePhase,
                     !1
                   );
                 null !== reactEventType &&
-                  null !== inCapturePhase &&
+                  null !== accumulateTargetOnly &&
                   accumulateEnterLeaveListenersForEvent(
                     dispatchQueue,
-                    inCapturePhase,
+                    accumulateTargetOnly,
                     reactEventType,
-                    tag,
+                    inCapturePhase,
                     !0
                   );
               }
@@ -19604,7 +19248,7 @@
                   listeners: eventType
                 }),
                 (handleEventFunc.data = fallbackData));
-          extractEvents$2(
+          extractEvents$1(
             dispatchQueue,
             domEventName,
             targetInst,
@@ -19612,58 +19256,6 @@
             nativeEventTarget
           );
         }
-        a: if (
-          ((fallbackData = 0 !== (eventSystemFlags & 4)),
-          "scrollend" !== domEventName)
-        ) {
-          if (!isScrollEndEventSupported && fallbackData)
-            switch (domEventName) {
-              case "scroll":
-                null !== nativeEventTarget &&
-                  debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-                break;
-              case "touchstart":
-                isTouchStarted = !0;
-                break;
-              case "touchcancel":
-              case "touchend":
-                isTouchStarted = !1;
-                break;
-              case "mousedown":
-                isMouseDown = !0;
-                break;
-              case "mouseup":
-                isMouseDown = !1;
-            }
-        } else {
-          if (!isScrollEndEventSupported && null !== nativeEventTarget)
-            if (
-              ((eventType = nativeEventTarget[internalScrollTimer]),
-              null != eventType)
-            )
-              clearTimeout(eventType),
-                (nativeEventTarget[internalScrollTimer] = void 0);
-            else break a;
-          targetInst = accumulateSinglePhaseListeners(
-            targetInst,
-            "onScrollEnd",
-            "scrollend",
-            fallbackData,
-            !fallbackData
-          );
-          0 < targetInst.length &&
-            ((nativeEventTarget = new SyntheticUIEvent(
-              "onScrollEnd",
-              "scrollend",
-              null,
-              nativeEvent,
-              nativeEventTarget
-            )),
-            dispatchQueue.push({
-              event: nativeEventTarget,
-              listeners: targetInst
-            }));
-        }
         processDispatchQueue(dispatchQueue, eventSystemFlags);
       });
     }
@@ -19674,35 +19266,6 @@
         currentTarget: currentTarget
       };
     }
-    function accumulateSinglePhaseListeners(
-      targetFiber,
-      reactName,
-      nativeEventType,
-      inCapturePhase,
-      accumulateTargetOnly
-    ) {
-      reactName = inCapturePhase
-        ? null !== reactName
-          ? reactName + "Capture"
-          : null
-        : reactName;
-      for (nativeEventType = []; null !== targetFiber; ) {
-        var _instance2 = targetFiber;
-        inCapturePhase = _instance2.stateNode;
-        _instance2 = _instance2.tag;
-        (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
-          null === inCapturePhase ||
-          null === reactName ||
-          ((_instance2 = getListener(targetFiber, reactName)),
-          null != _instance2 &&
-            nativeEventType.push(
-              createDispatchListener(targetFiber, _instance2, inCapturePhase)
-            ));
-        if (accumulateTargetOnly) break;
-        targetFiber = targetFiber.return;
-      }
-      return nativeEventType;
-    }
     function accumulateTwoPhaseListeners(targetFiber, reactName) {
       for (
         var captureName = reactName + "Capture", listeners = [];
@@ -19724,10 +19287,9 @@
             listeners.push(
               createDispatchListener(targetFiber, _instance3, stateNode)
             ));
-        if (3 === targetFiber.tag) return listeners;
         targetFiber = targetFiber.return;
       }
-      return [];
+      return listeners;
     }
     function getParent(inst) {
       if (null === inst) return null;
@@ -20082,8 +19644,7 @@
           null != value &&
             ("function" !== typeof value &&
               warnForInvalidEventListener(key, value),
-            listenToNonDelegatedEvent("scrollend", domElement),
-            listenToNonDelegatedEvent("scroll", domElement));
+            listenToNonDelegatedEvent("scrollend", domElement));
           return;
         case "dangerouslySetInnerHTML":
           if (null != value) {
@@ -20374,8 +19935,7 @@
           null != value &&
             ("function" !== typeof value &&
               warnForInvalidEventListener(key, value),
-            listenToNonDelegatedEvent("scrollend", domElement),
-            listenToNonDelegatedEvent("scroll", domElement));
+            listenToNonDelegatedEvent("scrollend", domElement));
           return;
         case "onClick":
           null != value &&
@@ -20620,8 +20180,6 @@
               }
           return;
         case "dialog":
-          listenToNonDelegatedEvent("beforetoggle", domElement);
-          listenToNonDelegatedEvent("toggle", domElement);
           listenToNonDelegatedEvent("cancel", domElement);
           listenToNonDelegatedEvent("close", domElement);
           break;
@@ -22182,16 +21740,32 @@
       instance.style.viewTransitionClass =
         null == props || "boolean" === typeof props ? "" : ("" + props).trim();
     }
+    function cancelRootViewTransitionName(rootContainer) {
+      rootContainer =
+        9 === rootContainer.nodeType
+          ? rootContainer.documentElement
+          : rootContainer.ownerDocument.documentElement;
+      null !== rootContainer &&
+        "" === rootContainer.style.viewTransitionName &&
+        ((rootContainer.style.viewTransitionName = "none"),
+        rootContainer.animate(
+          { opacity: [0, 0], pointerEvents: ["none", "none"] },
+          {
+            duration: 0,
+            fill: "forwards",
+            pseudoElement: "::view-transition-group(root)"
+          }
+        ),
+        rootContainer.animate(
+          { width: [0, 0], height: [0, 0] },
+          { duration: 0, fill: "forwards", pseudoElement: "::view-transition" }
+        ));
+    }
     function restoreRootViewTransitionName(rootContainer) {
       rootContainer =
         9 === rootContainer.nodeType
-          ? rootContainer.body
-          : "HTML" === rootContainer.nodeName
-            ? rootContainer.ownerDocument.body
-            : rootContainer;
-      "root" === rootContainer.style.viewTransitionName &&
-        (rootContainer.style.viewTransitionName = "");
-      rootContainer = rootContainer.ownerDocument.documentElement;
+          ? rootContainer.documentElement
+          : rootContainer.ownerDocument.documentElement;
       null !== rootContainer &&
         "none" === rootContainer.style.viewTransitionName &&
         (rootContainer.style.viewTransitionName = "");
@@ -22288,78 +21862,8 @@
         return !1;
       }
     }
-    function mergeTranslate(translateA, translateB) {
-      if (!translateA || "none" === translateA) return translateB || "";
-      if (!translateB || "none" === translateB) return translateA || "";
-      translateA = translateA.split(" ");
-      translateB = translateB.split(" ");
-      var i,
-        result = "";
-      for (i = 0; i < translateA.length && i < translateB.length; i++)
-        0 < i && (result += " "),
-          (result += "calc(" + translateA[i] + " + " + translateB[i] + ")");
-      for (; i < translateA.length; i++) result += " " + translateA[i];
-      for (; i < translateB.length; i++) result += " " + translateB[i];
-      return result;
-    }
-    function animateGesture(
-      keyframes,
-      targetElement,
-      pseudoElement,
-      timeline,
-      rangeStart,
-      rangeEnd,
-      moveFirstFrameIntoViewport,
-      moveAllFramesIntoViewport
-    ) {
-      for (var i = 0; i < keyframes.length; i++) {
-        var keyframe = keyframes[i];
-        delete keyframe.easing;
-        delete keyframe.computedOffset;
-        "auto" === keyframe.width && delete keyframe.width;
-        "auto" === keyframe.height && delete keyframe.height;
-        "none" === keyframe.transform && delete keyframe.transform;
-        if (moveAllFramesIntoViewport && null == keyframe.transform)
-          if (null == keyframe.translate || "" === keyframe.translate) {
-            var elementTranslate = getComputedStyle(
-              targetElement,
-              pseudoElement
-            ).translate;
-            keyframe.translate = mergeTranslate(
-              elementTranslate,
-              "20000px 20000px"
-            );
-          } else
-            keyframe.translate = mergeTranslate(
-              keyframe.translate,
-              "20000px 20000px"
-            );
-      }
-      moveFirstFrameIntoViewport &&
-        ((moveFirstFrameIntoViewport = keyframes[0]),
-        (moveAllFramesIntoViewport = moveFirstFrameIntoViewport.transform),
-        null != moveAllFramesIntoViewport &&
-          (moveFirstFrameIntoViewport.transform =
-            "translate(20000px, 20000px) " +
-            ("none" === moveAllFramesIntoViewport
-              ? ""
-              : moveAllFramesIntoViewport)));
-      moveFirstFrameIntoViewport = rangeStart > rangeEnd;
-      targetElement.animate(keyframes, {
-        pseudoElement: pseudoElement,
-        timeline: timeline,
-        easing: "linear",
-        fill: "both",
-        direction: moveFirstFrameIntoViewport ? "normal" : "reverse",
-        rangeStart: (moveFirstFrameIntoViewport ? rangeEnd : rangeStart) + "%",
-        rangeEnd: (moveFirstFrameIntoViewport ? rangeStart : rangeEnd) + "%"
-      });
-    }
     function startGestureTransition(
       rootContainer,
-      timeline,
-      rangeStart,
-      rangeEnd,
       transitionTypes,
       mutationCallback,
       animateCallback
@@ -22374,100 +21878,18 @@
           types: transitionTypes
         });
         ownerDocument.__reactViewTransition = transition;
-        var readyCallback = function () {
-            for (
-              var documentElement = ownerDocument.documentElement,
-                animations = documentElement.getAnimations({ subtree: !0 }),
-                foundGroups = new Set(),
-                foundNews = new Set(),
-                i = 0;
-              i < animations.length;
-              i++
-            ) {
-              var pseudoElement = animations[i].effect.pseudoElement;
-              null != pseudoElement &&
-                (pseudoElement.startsWith("::view-transition-group")
-                  ? foundGroups.add(pseudoElement.slice(23))
-                  : pseudoElement.startsWith("::view-transition-new") &&
-                    foundNews.add(pseudoElement.slice(21)));
-            }
-            for (i = 0; i < animations.length; i++) {
-              var anim = animations[i];
-              pseudoElement = anim.effect;
-              var _pseudoElement = pseudoElement.pseudoElement;
-              if (
-                null != _pseudoElement &&
-                _pseudoElement.startsWith("::view-transition")
-              ) {
-                anim.cancel();
-                var isGeneratedGroupAnim = !1,
-                  isExitGroupAnim = !1;
-                if (_pseudoElement.startsWith("::view-transition-group")) {
-                  var groupName = _pseudoElement.slice(23);
-                  foundNews.has(groupName)
-                    ? ((anim = anim.animationName),
-                      (isGeneratedGroupAnim =
-                        null != anim &&
-                        anim.startsWith("-ua-view-transition-group-anim-")))
-                    : (isExitGroupAnim = !0);
-                }
-                animateGesture(
-                  pseudoElement.getKeyframes(),
-                  pseudoElement.target,
-                  _pseudoElement,
-                  timeline,
-                  rangeStart,
-                  rangeEnd,
-                  isGeneratedGroupAnim,
-                  isExitGroupAnim
-                );
-                _pseudoElement.startsWith("::view-transition-old") &&
-                  ((_pseudoElement = _pseudoElement.slice(21)),
-                  foundGroups.has(_pseudoElement) ||
-                    foundNews.has(_pseudoElement) ||
-                    (foundGroups.add(_pseudoElement),
-                    animateGesture(
-                      [{}, {}],
-                      pseudoElement.target,
-                      "::view-transition-group" + _pseudoElement,
-                      timeline,
-                      rangeStart,
-                      rangeEnd,
-                      !1,
-                      !0
-                    )));
-              }
-            }
-            documentElement
-              .animate([{}, {}], {
-                pseudoElement: "::view-transition",
-                duration: 1
-              })
-              .pause();
-            animateCallback();
-          },
-          readyForAnimations =
-            -1 !== navigator.userAgent.indexOf("Chrome")
-              ? function () {
-                  return requestAnimationFrame(readyCallback);
-                }
-              : readyCallback;
-        transition.ready.then(readyForAnimations, readyCallback);
+        var blockingAnim = null;
+        rootContainer = function () {
+          blockingAnim = ownerDocument.documentElement.animate([{}, {}], {
+            pseudoElement: "::view-transition",
+            duration: 1
+          });
+          blockingAnim.pause();
+          animateCallback();
+        };
+        transition.ready.then(rootContainer, rootContainer);
         transition.finished.then(function () {
-          for (
-            var animations = ownerDocument.documentElement.getAnimations({
-                subtree: !0
-              }),
-              i = 0;
-            i < animations.length;
-            i++
-          ) {
-            var anim = animations[i],
-              pseudo = anim.effect.pseudoElement;
-            null != pseudo &&
-              pseudo.startsWith("::view-transition") &&
-              anim.cancel();
-          }
+          null !== blockingAnim && blockingAnim.cancel();
           ownerDocument.__reactViewTransition === transition &&
             (ownerDocument.__reactViewTransition = null);
         });
@@ -23633,7 +23055,7 @@
       this.pooledCache = null;
       this.pooledCacheLanes = 0;
       this.formState = formState;
-      this.gestureClone = this.stoppingGestures = this.pendingGestures = null;
+      this.stoppingGestures = this.pendingGestures = null;
       this.incompleteTransitions = new Map();
       this.passiveEffectDuration = this.effectDuration = -0;
       this.memoizedUpdaters = new Set();
@@ -24426,7 +23848,6 @@
       internalEventHandlesSetKey = "__reactHandles$" + randomKey,
       internalRootNodeResourcesKey = "__reactResources$" + randomKey,
       internalHoistableMarker = "__reactMarker$" + randomKey,
-      internalScrollTimer = "__reactScroll$" + randomKey,
       tagToRoleMappings = {
         ARTICLE: "article",
         ASIDE: "complementary",
@@ -25666,7 +25087,7 @@
       TRANSITION_END = getVendorPrefixedEventName("transitionend"),
       topLevelEventsToReactNames = new Map(),
       simpleEventPluginEvents =
-        "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
+        "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(
           " "
         ),
       CapturedStacks = new WeakMap(),
@@ -27521,8 +26942,6 @@
         "Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."
       ),
       globalClientIdCounter = 0,
-      didWarnForRootClone = !1,
-      unhideHostChildren = !1,
       DefaultAsyncDispatcher = {
         getCacheForType: function (resourceType) {
           var cache = readContext(CacheContext),
@@ -27638,11 +27057,7 @@
       mightHavePendingSyncWork = !1,
       isFlushingWork = !1,
       currentEventTransitionLane = 0,
-      fakeActCallbackNode = {},
-      isScrollEndEventSupported = canUseDOM && isEventSupported("scrollend"),
-      isTouchStarted = !1,
-      isMouseDown = !1,
-      DEBOUNCE_TIMEOUT = 200;
+      fakeActCallbackNode = {};
     (function () {
       for (var i = 0; i < simpleEventPluginEvents.length; i++) {
         var eventName = simpleEventPluginEvents[i],
@@ -27695,12 +27110,6 @@
       "onCompositionUpdate",
       "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
     );
-    registerTwoPhaseEvent(
-      "onScrollEnd",
-      "scroll scrollend touchstart touchcancel touchend mousedown mouseup".split(
-        " "
-      )
-    );
     var mediaEventTypes =
         "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
           " "
@@ -28207,11 +27616,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-f9d78089-20250306" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-eda36a1c-20250228" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-f9d78089-20250306\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-eda36a1c-20250228\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     })();
     ("function" === typeof Map &&
@@ -28248,10 +27657,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: "19.1.0-experimental-f9d78089-20250306",
+          version: "19.1.0-experimental-eda36a1c-20250228",
           rendererPackageName: "react-dom",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: "19.1.0-experimental-f9d78089-20250306"
+          reconcilerVersion: "19.1.0-experimental-eda36a1c-20250228"
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -28559,5 +27968,5 @@
         }
       };
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js b/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js
index 6b91e12..099a8fd 100644
--- a/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js
+++ b/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js
@@ -645,8 +645,7 @@ var randomKey = Math.random().toString(36).slice(2),
   internalEventHandlerListenersKey = "__reactListeners$" + randomKey,
   internalEventHandlesSetKey = "__reactHandles$" + randomKey,
   internalRootNodeResourcesKey = "__reactResources$" + randomKey,
-  internalHoistableMarker = "__reactMarker$" + randomKey,
-  internalScrollTimer = "__reactScroll$" + randomKey;
+  internalHoistableMarker = "__reactMarker$" + randomKey;
 function detachDeletedInstance(node) {
   delete node[internalInstanceKey];
   delete node[internalPropsKey];
@@ -831,11 +830,6 @@ function isAttributeNameSafe(attributeName) {
   return !1;
 }
 var viewTransitionMutationContext = !1;
-function pushMutationContext() {
-  var prev = viewTransitionMutationContext;
-  viewTransitionMutationContext = !1;
-  return prev;
-}
 function setValueForAttribute(node, name, value) {
   if (isAttributeNameSafe(name))
     if (null === value) node.removeAttribute(name);
@@ -2077,16 +2071,6 @@ function isTextInputElement(elem) {
       ? !0
       : !1;
 }
-function isEventSupported(eventNameSuffix) {
-  if (!canUseDOM) return !1;
-  eventNameSuffix = "on" + eventNameSuffix;
-  var isSupported = eventNameSuffix in document;
-  isSupported ||
-    ((isSupported = document.createElement("div")),
-    isSupported.setAttribute(eventNameSuffix, "return;"),
-    (isSupported = "function" === typeof isSupported[eventNameSuffix]));
-  return isSupported;
-}
 function createAndAccumulateChangeEvent(
   dispatchQueue,
   inst,
@@ -2111,7 +2095,7 @@ function createAndAccumulateChangeEvent(
 }
 var activeElement$1 = null,
   activeElementInst$1 = null;
-function runEventInBatch$1(dispatchQueue) {
+function runEventInBatch(dispatchQueue) {
   processDispatchQueue(dispatchQueue, 0);
 }
 function getInstIfValueChanged(targetInst) {
@@ -2122,10 +2106,22 @@ function getTargetInstForChangeEvent(domEventName, targetInst) {
   if ("change" === domEventName) return targetInst;
 }
 var isInputEventSupported = !1;
-canUseDOM &&
-  (isInputEventSupported =
-    isEventSupported("input") &&
-    (!document.documentMode || 9 < document.documentMode));
+if (canUseDOM) {
+  var JSCompiler_inline_result$jscomp$289;
+  if (canUseDOM) {
+    var isSupported$jscomp$inline_431 = "oninput" in document;
+    if (!isSupported$jscomp$inline_431) {
+      var element$jscomp$inline_432 = document.createElement("div");
+      element$jscomp$inline_432.setAttribute("oninput", "return;");
+      isSupported$jscomp$inline_431 =
+        "function" === typeof element$jscomp$inline_432.oninput;
+    }
+    JSCompiler_inline_result$jscomp$289 = isSupported$jscomp$inline_431;
+  } else JSCompiler_inline_result$jscomp$289 = !1;
+  isInputEventSupported =
+    JSCompiler_inline_result$jscomp$289 &&
+    (!document.documentMode || 9 < document.documentMode);
+}
 function stopWatchingForValueChange() {
   activeElement$1 &&
     (activeElement$1.detachEvent("onpropertychange", handlePropertyChange),
@@ -2143,7 +2139,7 @@ function handlePropertyChange(nativeEvent) {
       nativeEvent,
       getEventTarget(nativeEvent)
     );
-    batchedUpdates$1(runEventInBatch$1, dispatchQueue);
+    batchedUpdates$1(runEventInBatch, dispatchQueue);
   }
 }
 function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
@@ -2363,7 +2359,7 @@ var ANIMATION_END = getVendorPrefixedEventName("animationend"),
   TRANSITION_END = getVendorPrefixedEventName("transitionend"),
   topLevelEventsToReactNames = new Map(),
   simpleEventPluginEvents =
-    "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
+    "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll scrollEnd toggle touchMove waiting wheel".split(
       " "
     );
 function registerSimpleEvent(domEventName, reactName) {
@@ -8447,7 +8443,7 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
     JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };
   } else JSCompiler_temp = null;
   selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };
-  _enabled = !1;
+  shouldStartViewTransition = _enabled = !1;
   committedLanes = (committedLanes & 335544064) === committedLanes;
   nextEffect = firstChild;
   for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
@@ -9098,9 +9094,9 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                       hoistableRoot
                     ).get(flags + (current.href || ""));
                     if (maybeNodes)
-                      for (root = 0; root < maybeNodes.length; root++)
+                      for (var i = 0; i < maybeNodes.length; i++)
                         if (
-                          ((currentResource = maybeNodes[root]),
+                          ((currentResource = maybeNodes[i]),
                           currentResource.getAttribute("href") ===
                             (null == current.href || "" === current.href
                               ? null
@@ -9114,7 +9110,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                                 ? null
                                 : current.crossOrigin))
                         ) {
-                          maybeNodes.splice(root, 1);
+                          maybeNodes.splice(i, 1);
                           break b;
                         }
                     currentResource = hoistableRoot.createElement(flags);
@@ -9129,9 +9125,9 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                         hoistableRoot
                       ).get(flags + (current.content || "")))
                     )
-                      for (root = 0; root < maybeNodes.length; root++)
+                      for (i = 0; i < maybeNodes.length; i++)
                         if (
-                          ((currentResource = maybeNodes[root]),
+                          ((currentResource = maybeNodes[i]),
                           currentResource.getAttribute("content") ===
                             (null == current.content
                               ? null
@@ -9151,7 +9147,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                                 ? null
                                 : current.charSet))
                         ) {
-                          maybeNodes.splice(root, 1);
+                          maybeNodes.splice(i, 1);
                           break b;
                         }
                     currentResource = hoistableRoot.createElement(flags);
@@ -9341,13 +9337,25 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
             if (null === current) {
               lanes = current = root;
               try {
-                (currentResource = lanes.stateNode),
-                  hoistableRoot
-                    ? ((maybeNodes = currentResource.style),
-                      "function" === typeof maybeNodes.setProperty
-                        ? maybeNodes.setProperty("display", "none", "important")
-                        : (maybeNodes.display = "none"))
-                    : unhideInstance(lanes.stateNode, lanes.memoizedProps);
+                if (((currentResource = lanes.stateNode), hoistableRoot))
+                  (maybeNodes = currentResource.style),
+                    "function" === typeof maybeNodes.setProperty
+                      ? maybeNodes.setProperty("display", "none", "important")
+                      : (maybeNodes.display = "none");
+                else {
+                  i = lanes.stateNode;
+                  var styleProp = lanes.memoizedProps.style,
+                    display =
+                      void 0 !== styleProp &&
+                      null !== styleProp &&
+                      styleProp.hasOwnProperty("display")
+                        ? styleProp.display
+                        : null;
+                  i.style.display =
+                    null == display || "boolean" === typeof display
+                      ? ""
+                      : ("" + display).trim();
+                }
               } catch (error) {
                 captureCommitPhaseError(lanes, lanes.return, error);
               }
@@ -9405,7 +9413,8 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      flags = pushMutationContext();
+      flags = viewTransitionMutationContext;
+      viewTransitionMutationContext = !1;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
       (lanes & 335544064) === lanes &&
@@ -9513,30 +9522,7 @@ function commitAfterMutationEffectsOnFiber(finishedWork, root) {
                   }
                 );
             }
-          finishedWork = root.containerInfo;
-          finishedWork =
-            9 === finishedWork.nodeType
-              ? finishedWork.documentElement
-              : finishedWork.ownerDocument.documentElement;
-          null !== finishedWork &&
-            "" === finishedWork.style.viewTransitionName &&
-            ((finishedWork.style.viewTransitionName = "none"),
-            finishedWork.animate(
-              { opacity: [0, 0], pointerEvents: ["none", "none"] },
-              {
-                duration: 0,
-                fill: "forwards",
-                pseudoElement: "::view-transition-group(root)"
-              }
-            ),
-            finishedWork.animate(
-              { width: [0, 0], height: [0, 0] },
-              {
-                duration: 0,
-                fill: "forwards",
-                pseudoElement: "::view-transition"
-              }
-            ));
+          cancelRootViewTransitionName(root.containerInfo);
         }
         break;
       case 5:
@@ -10647,8 +10633,7 @@ function prepareToHydrateHostInstance(fiber) {
         listenToNonDelegatedEvent("toggle", instance)),
       null != props.onScroll && listenToNonDelegatedEvent("scroll", instance),
       null != props.onScrollEnd &&
-        (listenToNonDelegatedEvent("scrollend", instance),
-        listenToNonDelegatedEvent("scroll", instance)),
+        listenToNonDelegatedEvent("scrollend", instance),
       null != props.onClick && (instance.onclick = noop$1),
       (instance = !0))
     : (instance = !1);
@@ -11389,122 +11374,6 @@ function unwindInterruptedWork(current, interruptedWork) {
       popProvider(CacheContext);
   }
 }
-var unhideHostChildren = !1;
-function recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone) {
-  for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-    switch (parentFiber.tag) {
-      case 5:
-        var clone = parentFiber.stateNode.cloneNode(!0);
-        hostParentClone.appendChild(clone);
-        unhideHostChildren && unhideInstance(clone, parentFiber.memoizedProps);
-        break;
-      case 6:
-        clone = parentFiber.stateNode;
-        if (null === clone) throw Error(formatProdErrorMessage(162));
-        clone = clone.cloneNode(!1);
-        hostParentClone.appendChild(clone);
-        unhideHostChildren && (clone.nodeValue = parentFiber.memoizedProps);
-        break;
-      case 4:
-        break;
-      case 22:
-        null === parentFiber.memoizedState &&
-          recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-        break;
-      case 30:
-        clone = pushMutationContext();
-        recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-        viewTransitionMutationContext = clone;
-        break;
-      default:
-        recursivelyInsertClonesFromExistingTree(parentFiber, hostParentClone);
-    }
-    parentFiber = parentFiber.sibling;
-  }
-}
-function recursivelyInsertClones(parentFiber, hostParentClone$jscomp$0) {
-  if (
-    null === parentFiber.alternate ||
-    0 !== (parentFiber.subtreeFlags & 13878)
-  )
-    for (parentFiber = parentFiber.child; null !== parentFiber; ) {
-      var finishedWork = parentFiber,
-        hostParentClone = hostParentClone$jscomp$0,
-        current = finishedWork.alternate,
-        flags = finishedWork.flags;
-      switch (finishedWork.tag) {
-        case 26:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          break;
-        case 27:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          break;
-        case 5:
-          var clone = finishedWork.stateNode;
-          if (null === current) hostParentClone.appendChild(clone);
-          else {
-            null === finishedWork.child
-              ? ((clone = clone.cloneNode(!0)),
-                finishedWork.flags & 32 && setTextContent(clone, ""))
-              : (clone = clone.cloneNode(!1));
-            if (flags & 4) {
-              flags = clone;
-              var newProps = finishedWork.memoizedProps;
-              updateProperties(
-                flags,
-                finishedWork.type,
-                current.memoizedProps,
-                newProps
-              );
-              flags[internalPropsKey] = newProps;
-            }
-            unhideHostChildren
-              ? ((unhideHostChildren = !1),
-                recursivelyInsertClones(finishedWork, clone),
-                hostParentClone.appendChild(clone),
-                (unhideHostChildren = !0),
-                unhideInstance(clone, finishedWork.memoizedProps))
-              : (recursivelyInsertClones(finishedWork, clone),
-                hostParentClone.appendChild(clone));
-          }
-          break;
-        case 6:
-          clone = finishedWork.stateNode;
-          if (null === clone) throw Error(formatProdErrorMessage(162));
-          null === current
-            ? hostParentClone.appendChild(clone)
-            : ((clone = clone.cloneNode(!1)),
-              flags & 4 && (clone.nodeValue = current.memoizedProps),
-              hostParentClone.appendChild(clone),
-              unhideHostChildren &&
-                (clone.nodeValue = finishedWork.memoizedProps));
-          break;
-        case 4:
-          break;
-        case 22:
-          null === finishedWork.memoizedState &&
-            ((unhideHostChildren =
-              (current = unhideHostChildren) || 0 !== (flags & 8192)),
-            recursivelyInsertClones(finishedWork, hostParentClone),
-            (unhideHostChildren = current));
-          break;
-        case 30:
-          current = pushMutationContext();
-          recursivelyInsertClones(finishedWork, hostParentClone);
-          viewTransitionMutationContext && (finishedWork.flags |= 4);
-          viewTransitionMutationContext = current;
-          break;
-        default:
-          recursivelyInsertClones(finishedWork, hostParentClone);
-      }
-      parentFiber = parentFiber.sibling;
-    }
-  else
-    recursivelyInsertClonesFromExistingTree(
-      parentFiber,
-      hostParentClone$jscomp$0
-    );
-}
 var DefaultAsyncDispatcher = {
     getCacheForType: function (resourceType) {
       var cache = readContext(CacheContext),
@@ -12270,8 +12139,8 @@ function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       workLoopSync();
       exitStatus = workInProgressRootExitStatus;
       break;
-    } catch (thrownValue$174) {
-      handleThrow(root, thrownValue$174);
+    } catch (thrownValue$172) {
+      handleThrow(root, thrownValue$172);
     }
   while (1);
   lanes && root.shellSuspendCounter++;
@@ -12386,8 +12255,8 @@ function renderRootConcurrent(root, lanes) {
       }
       workLoopConcurrentByScheduler();
       break;
-    } catch (thrownValue$176) {
-      handleThrow(root, thrownValue$176);
+    } catch (thrownValue$174) {
+      handleThrow(root, thrownValue$174);
     }
   while (1);
   lastContextDependency = currentlyRenderingFiber$1 = null;
@@ -12613,7 +12482,6 @@ function commitRoot(
             return null;
           }))
         : ((root.callbackNode = null), (root.callbackPriority = 0));
-      shouldStartViewTransition = !1;
       recoverableErrors = 0 !== (finishedWork.flags & 13878);
       if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
         recoverableErrors = ReactSharedInternals.T;
@@ -12873,150 +12741,22 @@ function flushSpawnedWork() {
     flushSyncWorkAcrossRoots_impl(0, !1);
   }
 }
-function commitGestureOnRoot(root, finishedWork) {
+function commitGestureOnRoot(root) {
   var finishedGesture = root.pendingGestures;
   if (null === finishedGesture) ensureRootIsScheduled(root);
   else {
     deleteScheduledGesture(root, finishedGesture);
-    var prevTransition = ReactSharedInternals.T;
-    ReactSharedInternals.T = null;
-    var previousPriority = ReactDOMSharedInternals.p;
-    ReactDOMSharedInternals.p = 2;
-    var prevExecutionContext = executionContext;
+    var prevTransition = ReactSharedInternals.T,
+      previousPriority = ReactDOMSharedInternals.p,
+      prevExecutionContext = executionContext;
     executionContext |= 4;
-    try {
-      unhideHostChildren = !1;
-      var rootContainer = root.containerInfo,
-        documentElement =
-          9 === rootContainer.nodeType
-            ? rootContainer.documentElement
-            : rootContainer.ownerDocument.documentElement;
-      null !== documentElement &&
-        "" === documentElement.style.viewTransitionName &&
-        (documentElement.style.viewTransitionName = "none");
-      var containerInstance =
-        9 === rootContainer.nodeType
-          ? rootContainer.body
-          : "HTML" === rootContainer.nodeName
-            ? rootContainer.ownerDocument.body
-            : rootContainer;
-      var containerParent = containerInstance.parentNode;
-      if (null === containerParent) throw Error(formatProdErrorMessage(552));
-      var clone = containerInstance.cloneNode(!1),
-        computedStyle = getComputedStyle(containerInstance);
-      if (
-        "absolute" !== computedStyle.position &&
-        "fixed" !== computedStyle.position
-      ) {
-        for (
-          rootContainer = containerParent;
-          null != rootContainer.parentNode &&
-          9 !== rootContainer.parentNode.nodeType &&
-          "static" === getComputedStyle(rootContainer).position;
-
-        )
-          rootContainer = rootContainer.parentNode;
-        var positionedAncestorStyle = rootContainer.style,
-          containerInstanceStyle = containerInstance.style,
-          prevAncestorTranslate = positionedAncestorStyle.translate,
-          prevAncestorScale = positionedAncestorStyle.scale,
-          prevAncestorRotate = positionedAncestorStyle.rotate,
-          prevAncestorTransform = positionedAncestorStyle.transform,
-          prevTranslate = containerInstanceStyle.translate,
-          prevScale = containerInstanceStyle.scale,
-          prevRotate = containerInstanceStyle.rotate,
-          prevTransform = containerInstanceStyle.transform;
-        positionedAncestorStyle.translate = "none";
-        positionedAncestorStyle.scale = "none";
-        positionedAncestorStyle.rotate = "none";
-        positionedAncestorStyle.transform = "none";
-        containerInstanceStyle.translate = "none";
-        containerInstanceStyle.scale = "none";
-        containerInstanceStyle.rotate = "none";
-        containerInstanceStyle.transform = "none";
-        var ancestorRect = rootContainer.getBoundingClientRect(),
-          rect = containerInstance.getBoundingClientRect(),
-          cloneStyle = clone.style;
-        cloneStyle.position = "absolute";
-        cloneStyle.top = rect.top - ancestorRect.top + "px";
-        cloneStyle.left = rect.left - ancestorRect.left + "px";
-        cloneStyle.width = rect.width + "px";
-        cloneStyle.height = rect.height + "px";
-        cloneStyle.margin = "0px";
-        cloneStyle.boxSizing = "border-box";
-        positionedAncestorStyle.translate = prevAncestorTranslate;
-        positionedAncestorStyle.scale = prevAncestorScale;
-        positionedAncestorStyle.rotate = prevAncestorRotate;
-        positionedAncestorStyle.transform = prevAncestorTransform;
-        containerInstanceStyle.translate = prevTranslate;
-        containerInstanceStyle.scale = prevScale;
-        containerInstanceStyle.rotate = prevRotate;
-        containerInstanceStyle.transform = prevTransform;
-      }
-      clone.style.viewTransitionName = "root";
-      var transform = computedStyle.transform;
-      "none" === transform && (transform = "");
-      var scale = computedStyle.scale;
-      if ("none" !== scale && "" !== scale) {
-        var parts = scale.split(" ");
-        transform =
-          (3 === parts.length ? "scale3d" : "scale") +
-          "(" +
-          parts.join(", ") +
-          ") " +
-          transform;
-      }
-      var rotate = computedStyle.rotate;
-      if ("none" !== rotate && "" !== rotate) {
-        var parts$251 = rotate.split(" ");
-        transform =
-          1 === parts$251.length
-            ? "rotate(" + parts$251[0] + ") " + transform
-            : 2 === parts$251.length
-              ? "rotate" +
-                parts$251[0].toUpperCase() +
-                "(" +
-                parts$251[1] +
-                ") " +
-                transform
-              : "rotate3d(" + parts$251.join(", ") + ") " + transform;
-      }
-      var translate = computedStyle.translate;
-      if ("none" !== translate && "" !== translate) {
-        var parts$252 = translate.split(" ");
-        transform =
-          (3 === parts$252.length ? "translate3d" : "translate") +
-          "(" +
-          parts$252.join(", ") +
-          ") " +
-          transform;
-      }
-      var JSCompiler_inline_result = transform;
-      clone.style.translate = "none";
-      clone.style.scale = "none";
-      clone.style.rotate = "none";
-      clone.style.transform =
-        "translate(-20000px, -20000px) " + JSCompiler_inline_result;
-      containerInstance.parentNode.insertBefore(
-        clone,
-        containerInstance.nextSibling
-      );
-      root.gestureClone = clone;
-      recursivelyInsertClones(finishedWork, clone);
-    } finally {
-      (executionContext = prevExecutionContext),
-        (ReactDOMSharedInternals.p = previousPriority),
-        (ReactSharedInternals.T = prevTransition);
-    }
+    executionContext = prevExecutionContext;
+    ReactDOMSharedInternals.p = previousPriority;
+    ReactSharedInternals.T = prevTransition;
     pendingTransitionTypes = null;
     pendingEffectsStatus = 6;
     finishedGesture.running = startGestureTransition(
       root.containerInfo,
-      finishedGesture.provider,
-      finishedGesture.rangeCurrent,
-      finishedGesture.direction
-        ? finishedGesture.rangeNext
-        : finishedGesture.rangePrevious,
       pendingTransitionTypes,
       flushGestureMutations,
       flushGestureAnimations
@@ -13034,21 +12774,7 @@ function flushGestureMutations() {
     var prevExecutionContext = executionContext;
     executionContext |= 4;
     try {
-      var rootClone = root.gestureClone;
-      if (null !== rootClone) {
-        root.gestureClone = null;
-        var rootContainer = root.containerInfo;
-        var containerInstance =
-          9 === rootContainer.nodeType
-            ? rootContainer.body
-            : "HTML" === rootContainer.nodeName
-              ? rootContainer.ownerDocument.body
-              : rootContainer;
-        var containerParent = containerInstance.parentNode;
-        if (null === containerParent) throw Error(formatProdErrorMessage(552));
-        containerParent.removeChild(rootClone);
-        containerInstance.style.viewTransitionName = "root";
-      }
+      cancelRootViewTransitionName(root.containerInfo);
     } finally {
       (executionContext = prevExecutionContext),
         (ReactDOMSharedInternals.p = previousPriority),
@@ -13275,14 +13001,14 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root$182 = firstScheduledRoot; null !== root$182; ) {
+      for (var root$180 = firstScheduledRoot; null !== root$180; ) {
         if (!onlyLegacy)
           if (0 !== syncTransitionLanes) {
-            var pendingLanes = root$182.pendingLanes;
+            var pendingLanes = root$180.pendingLanes;
             if (0 === pendingLanes) var JSCompiler_inline_result = 0;
             else {
-              var suspendedLanes = root$182.suspendedLanes,
-                pingedLanes = root$182.pingedLanes;
+              var suspendedLanes = root$180.suspendedLanes,
+                pingedLanes = root$180.pingedLanes;
               JSCompiler_inline_result =
                 (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
               JSCompiler_inline_result &=
@@ -13296,21 +13022,21 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
             }
             0 !== JSCompiler_inline_result &&
               ((didPerformSomeWork = !0),
-              performSyncWorkOnRoot(root$182, JSCompiler_inline_result));
+              performSyncWorkOnRoot(root$180, JSCompiler_inline_result));
           } else
             (JSCompiler_inline_result = workInProgressRootRenderLanes),
               (JSCompiler_inline_result = getNextLanes(
-                root$182,
-                root$182 === workInProgressRoot ? JSCompiler_inline_result : 0,
-                null !== root$182.cancelPendingCommit ||
-                  -1 !== root$182.timeoutHandle
+                root$180,
+                root$180 === workInProgressRoot ? JSCompiler_inline_result : 0,
+                null !== root$180.cancelPendingCommit ||
+                  -1 !== root$180.timeoutHandle
               )),
               (0 === (JSCompiler_inline_result & 3) &&
                 64 !== JSCompiler_inline_result) ||
-                checkIfRootIsPrerendering(root$182, JSCompiler_inline_result) ||
+                checkIfRootIsPrerendering(root$180, JSCompiler_inline_result) ||
                 ((didPerformSomeWork = !0),
-                performSyncWorkOnRoot(root$182, JSCompiler_inline_result));
-        root$182 = root$182.next;
+                performSyncWorkOnRoot(root$180, JSCompiler_inline_result));
+        root$180 = root$180.next;
       }
     } while (didPerformSomeWork);
     isFlushingWork = !1;
@@ -13475,7 +13201,7 @@ function createFormDataWithSubmitter(form, submitter) {
   temp.parentNode.removeChild(temp);
   return form;
 }
-function extractEvents$2(
+function extractEvents$1(
   dispatchQueue,
   domEventName,
   maybeTargetInst,
@@ -13550,56 +13276,21 @@ function extractEvents$2(
     });
   }
 }
-var isScrollEndEventSupported = canUseDOM && isEventSupported("scrollend"),
-  isTouchStarted = !1,
-  isMouseDown = !1;
-function runEventInBatch(dispatchQueue) {
-  processDispatchQueue(dispatchQueue, 0);
-}
-function fireScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-  nativeEventTarget[internalScrollTimer] = void 0;
-  if (isMouseDown || isTouchStarted)
-    debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-  else {
-    var dispatchQueue = [];
-    targetInst = accumulateTwoPhaseListeners(targetInst, "onScrollEnd");
-    0 < targetInst.length &&
-      ((nativeEvent = new SyntheticUIEvent(
-        "onScrollEnd",
-        "scrollend",
-        null,
-        nativeEvent,
-        nativeEventTarget
-      )),
-      dispatchQueue.push({ event: nativeEvent, listeners: targetInst }));
-    batchedUpdates$1(runEventInBatch, dispatchQueue);
-  }
-}
-function debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget) {
-  var existingTimer = nativeEventTarget[internalScrollTimer];
-  null != existingTimer && clearTimeout(existingTimer);
-  null !== targetInst &&
-    ((targetInst = setTimeout(
-      fireScrollEnd.bind(null, targetInst, nativeEvent, nativeEventTarget),
-      200
-    )),
-    (nativeEventTarget[internalScrollTimer] = targetInst));
-}
 for (
-  var i$jscomp$inline_1677 = 0;
-  i$jscomp$inline_1677 < simpleEventPluginEvents.length;
-  i$jscomp$inline_1677++
+  var i$jscomp$inline_1644 = 0;
+  i$jscomp$inline_1644 < simpleEventPluginEvents.length;
+  i$jscomp$inline_1644++
 ) {
-  var eventName$jscomp$inline_1678 =
-      simpleEventPluginEvents[i$jscomp$inline_1677],
-    domEventName$jscomp$inline_1679 =
-      eventName$jscomp$inline_1678.toLowerCase(),
-    capitalizedEvent$jscomp$inline_1680 =
-      eventName$jscomp$inline_1678[0].toUpperCase() +
-      eventName$jscomp$inline_1678.slice(1);
+  var eventName$jscomp$inline_1645 =
+      simpleEventPluginEvents[i$jscomp$inline_1644],
+    domEventName$jscomp$inline_1646 =
+      eventName$jscomp$inline_1645.toLowerCase(),
+    capitalizedEvent$jscomp$inline_1647 =
+      eventName$jscomp$inline_1645[0].toUpperCase() +
+      eventName$jscomp$inline_1645.slice(1);
   registerSimpleEvent(
-    domEventName$jscomp$inline_1679,
-    "on" + capitalizedEvent$jscomp$inline_1680
+    domEventName$jscomp$inline_1646,
+    "on" + capitalizedEvent$jscomp$inline_1647
   );
 }
 registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
@@ -13644,12 +13335,6 @@ registerTwoPhaseEvent(
   "onCompositionUpdate",
   "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
 );
-registerTwoPhaseEvent(
-  "onScrollEnd",
-  "scroll scrollend touchstart touchcancel touchend mousedown mouseup".split(
-    " "
-  )
-);
 var mediaEventTypes =
     "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
       " "
@@ -13932,15 +13617,35 @@ function dispatchEventForPluginEventSystem(
           case "beforetoggle":
             SyntheticEventCtor = SyntheticToggleEvent;
         }
-        var inCapturePhase = 0 !== (eventSystemFlags & 4);
-        inCapturePhase = accumulateSinglePhaseListeners(
-          targetInst,
-          reactName,
-          nativeEvent.type,
-          inCapturePhase,
-          !inCapturePhase &&
-            ("scroll" === domEventName || "scrollend" === domEventName)
-        );
+        var inCapturePhase = 0 !== (eventSystemFlags & 4),
+          accumulateTargetOnly =
+            !inCapturePhase &&
+            ("scroll" === domEventName || "scrollend" === domEventName),
+          reactEventName = inCapturePhase
+            ? null !== reactName
+              ? reactName + "Capture"
+              : null
+            : reactName;
+        inCapturePhase = [];
+        for (
+          var instance = targetInst, lastHostComponent;
+          null !== instance;
+
+        ) {
+          var _instance = instance;
+          lastHostComponent = _instance.stateNode;
+          _instance = _instance.tag;
+          (5 !== _instance && 26 !== _instance && 27 !== _instance) ||
+            null === lastHostComponent ||
+            null === reactEventName ||
+            ((_instance = getListener(instance, reactEventName)),
+            null != _instance &&
+              inCapturePhase.push(
+                createDispatchListener(instance, _instance, lastHostComponent)
+              ));
+          if (accumulateTargetOnly) break;
+          instance = instance.return;
+        }
         0 < inCapturePhase.length &&
           ((reactName = new SyntheticEventCtor(
             reactName,
@@ -13982,103 +13687,108 @@ function dispatchEventForPluginEventSystem(
               (reactEventType = reactEventType
                 ? getClosestInstanceFromNode(reactEventType)
                 : null),
-              null !== reactEventType)
-            ) {
-              inCapturePhase = getNearestMountedFiber(reactEventType);
-              var tag = reactEventType.tag;
-              if (
-                reactEventType !== inCapturePhase ||
-                (5 !== tag && 27 !== tag && 6 !== tag)
-              )
-                reactEventType = null;
-            }
+              null !== reactEventType &&
+                ((accumulateTargetOnly =
+                  getNearestMountedFiber(reactEventType)),
+                (inCapturePhase = reactEventType.tag),
+                reactEventType !== accumulateTargetOnly ||
+                  (5 !== inCapturePhase &&
+                    27 !== inCapturePhase &&
+                    6 !== inCapturePhase)))
+            )
+              reactEventType = null;
           } else (SyntheticEventCtor = null), (reactEventType = targetInst);
           if (SyntheticEventCtor !== reactEventType) {
-            tag = SyntheticMouseEvent;
-            var leaveEventType = "onMouseLeave",
-              enterEventType = "onMouseEnter",
-              eventTypePrefix = "mouse";
+            inCapturePhase = SyntheticMouseEvent;
+            _instance = "onMouseLeave";
+            reactEventName = "onMouseEnter";
+            instance = "mouse";
             if ("pointerout" === domEventName || "pointerover" === domEventName)
-              (tag = SyntheticPointerEvent),
-                (leaveEventType = "onPointerLeave"),
-                (enterEventType = "onPointerEnter"),
-                (eventTypePrefix = "pointer");
-            inCapturePhase =
+              (inCapturePhase = SyntheticPointerEvent),
+                (_instance = "onPointerLeave"),
+                (reactEventName = "onPointerEnter"),
+                (instance = "pointer");
+            accumulateTargetOnly =
               null == SyntheticEventCtor
                 ? reactName
                 : getNodeFromInstance(SyntheticEventCtor);
-            var toNode =
+            lastHostComponent =
               null == reactEventType
                 ? reactName
                 : getNodeFromInstance(reactEventType);
-            reactName = new tag(
-              leaveEventType,
-              eventTypePrefix + "leave",
+            reactName = new inCapturePhase(
+              _instance,
+              instance + "leave",
               SyntheticEventCtor,
               nativeEvent,
               nativeEventTarget
             );
-            reactName.target = inCapturePhase;
-            reactName.relatedTarget = toNode;
-            leaveEventType = null;
+            reactName.target = accumulateTargetOnly;
+            reactName.relatedTarget = lastHostComponent;
+            _instance = null;
             getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
-              ((tag = new tag(
-                enterEventType,
-                eventTypePrefix + "enter",
+              ((inCapturePhase = new inCapturePhase(
+                reactEventName,
+                instance + "enter",
                 reactEventType,
                 nativeEvent,
                 nativeEventTarget
               )),
-              (tag.target = toNode),
-              (tag.relatedTarget = inCapturePhase),
-              (leaveEventType = tag));
-            inCapturePhase = leaveEventType;
+              (inCapturePhase.target = lastHostComponent),
+              (inCapturePhase.relatedTarget = accumulateTargetOnly),
+              (_instance = inCapturePhase));
+            accumulateTargetOnly = _instance;
             if (SyntheticEventCtor && reactEventType)
               b: {
-                tag = SyntheticEventCtor;
-                enterEventType = reactEventType;
-                eventTypePrefix = 0;
-                for (toNode = tag; toNode; toNode = getParent(toNode))
-                  eventTypePrefix++;
-                toNode = 0;
+                inCapturePhase = SyntheticEventCtor;
+                reactEventName = reactEventType;
+                instance = 0;
+                for (
+                  lastHostComponent = inCapturePhase;
+                  lastHostComponent;
+                  lastHostComponent = getParent(lastHostComponent)
+                )
+                  instance++;
+                lastHostComponent = 0;
                 for (
-                  leaveEventType = enterEventType;
-                  leaveEventType;
-                  leaveEventType = getParent(leaveEventType)
+                  _instance = reactEventName;
+                  _instance;
+                  _instance = getParent(_instance)
                 )
-                  toNode++;
-                for (; 0 < eventTypePrefix - toNode; )
-                  (tag = getParent(tag)), eventTypePrefix--;
-                for (; 0 < toNode - eventTypePrefix; )
-                  (enterEventType = getParent(enterEventType)), toNode--;
-                for (; eventTypePrefix--; ) {
+                  lastHostComponent++;
+                for (; 0 < instance - lastHostComponent; )
+                  (inCapturePhase = getParent(inCapturePhase)), instance--;
+                for (; 0 < lastHostComponent - instance; )
+                  (reactEventName = getParent(reactEventName)),
+                    lastHostComponent--;
+                for (; instance--; ) {
                   if (
-                    tag === enterEventType ||
-                    (null !== enterEventType &&
-                      tag === enterEventType.alternate)
+                    inCapturePhase === reactEventName ||
+                    (null !== reactEventName &&
+                      inCapturePhase === reactEventName.alternate)
                   )
                     break b;
-                  tag = getParent(tag);
-                  enterEventType = getParent(enterEventType);
+                  inCapturePhase = getParent(inCapturePhase);
+                  reactEventName = getParent(reactEventName);
                 }
-                tag = null;
+                inCapturePhase = null;
               }
-            else tag = null;
+            else inCapturePhase = null;
             null !== SyntheticEventCtor &&
               accumulateEnterLeaveListenersForEvent(
                 dispatchQueue,
                 reactName,
                 SyntheticEventCtor,
-                tag,
+                inCapturePhase,
                 !1
               );
             null !== reactEventType &&
-              null !== inCapturePhase &&
+              null !== accumulateTargetOnly &&
               accumulateEnterLeaveListenersForEvent(
                 dispatchQueue,
-                inCapturePhase,
+                accumulateTargetOnly,
                 reactEventType,
-                tag,
+                inCapturePhase,
                 !0
               );
           }
@@ -14223,7 +13933,7 @@ function dispatchEventForPluginEventSystem(
               listeners: eventType
             }),
             (handleEventFunc.data = fallbackData));
-      extractEvents$2(
+      extractEvents$1(
         dispatchQueue,
         domEventName,
         targetInst,
@@ -14231,58 +13941,6 @@ function dispatchEventForPluginEventSystem(
         nativeEventTarget
       );
     }
-    a: if (
-      ((fallbackData = 0 !== (eventSystemFlags & 4)),
-      "scrollend" !== domEventName)
-    ) {
-      if (!isScrollEndEventSupported && fallbackData)
-        switch (domEventName) {
-          case "scroll":
-            null !== nativeEventTarget &&
-              debounceScrollEnd(targetInst, nativeEvent, nativeEventTarget);
-            break;
-          case "touchstart":
-            isTouchStarted = !0;
-            break;
-          case "touchcancel":
-          case "touchend":
-            isTouchStarted = !1;
-            break;
-          case "mousedown":
-            isMouseDown = !0;
-            break;
-          case "mouseup":
-            isMouseDown = !1;
-        }
-    } else {
-      if (!isScrollEndEventSupported && null !== nativeEventTarget)
-        if (
-          ((eventType = nativeEventTarget[internalScrollTimer]),
-          null != eventType)
-        )
-          clearTimeout(eventType),
-            (nativeEventTarget[internalScrollTimer] = void 0);
-        else break a;
-      targetInst = accumulateSinglePhaseListeners(
-        targetInst,
-        "onScrollEnd",
-        "scrollend",
-        fallbackData,
-        !fallbackData
-      );
-      0 < targetInst.length &&
-        ((nativeEventTarget = new SyntheticUIEvent(
-          "onScrollEnd",
-          "scrollend",
-          null,
-          nativeEvent,
-          nativeEventTarget
-        )),
-        dispatchQueue.push({
-          event: nativeEventTarget,
-          listeners: targetInst
-        }));
-    }
     processDispatchQueue(dispatchQueue, eventSystemFlags);
   });
 }
@@ -14293,35 +13951,6 @@ function createDispatchListener(instance, listener, currentTarget) {
     currentTarget: currentTarget
   };
 }
-function accumulateSinglePhaseListeners(
-  targetFiber,
-  reactName,
-  nativeEventType,
-  inCapturePhase,
-  accumulateTargetOnly
-) {
-  reactName = inCapturePhase
-    ? null !== reactName
-      ? reactName + "Capture"
-      : null
-    : reactName;
-  for (nativeEventType = []; null !== targetFiber; ) {
-    var _instance = targetFiber;
-    inCapturePhase = _instance.stateNode;
-    _instance = _instance.tag;
-    (5 !== _instance && 26 !== _instance && 27 !== _instance) ||
-      null === inCapturePhase ||
-      null === reactName ||
-      ((_instance = getListener(targetFiber, reactName)),
-      null != _instance &&
-        nativeEventType.push(
-          createDispatchListener(targetFiber, _instance, inCapturePhase)
-        ));
-    if (accumulateTargetOnly) break;
-    targetFiber = targetFiber.return;
-  }
-  return nativeEventType;
-}
 function accumulateTwoPhaseListeners(targetFiber, reactName) {
   for (
     var captureName = reactName + "Capture", listeners = [];
@@ -14343,10 +13972,9 @@ function accumulateTwoPhaseListeners(targetFiber, reactName) {
         listeners.push(
           createDispatchListener(targetFiber, _instance2, stateNode)
         ));
-    if (3 === targetFiber.tag) return listeners;
     targetFiber = targetFiber.return;
   }
-  return [];
+  return listeners;
 }
 function getParent(inst) {
   if (null === inst) return null;
@@ -14511,9 +14139,7 @@ function setProp(domElement, tag, key, value, props, prevValue) {
       null != value && listenToNonDelegatedEvent("scroll", domElement);
       return;
     case "onScrollEnd":
-      null != value &&
-        (listenToNonDelegatedEvent("scrollend", domElement),
-        listenToNonDelegatedEvent("scroll", domElement));
+      null != value && listenToNonDelegatedEvent("scrollend", domElement);
       return;
     case "dangerouslySetInnerHTML":
       if (null != value) {
@@ -14752,9 +14378,7 @@ function setPropOnCustomElement(domElement, tag, key, value, props, prevValue) {
       null != value && listenToNonDelegatedEvent("scroll", domElement);
       return;
     case "onScrollEnd":
-      null != value &&
-        (listenToNonDelegatedEvent("scrollend", domElement),
-        listenToNonDelegatedEvent("scroll", domElement));
+      null != value && listenToNonDelegatedEvent("scrollend", domElement);
       return;
     case "onClick":
       null != value && (domElement.onclick = noop$1);
@@ -14847,34 +14471,34 @@ function setInitialProperties(domElement, tag, props) {
         defaultChecked = null;
       for (hasSrc in props)
         if (props.hasOwnProperty(hasSrc)) {
-          var propValue$196 = props[hasSrc];
-          if (null != propValue$196)
+          var propValue$194 = props[hasSrc];
+          if (null != propValue$194)
             switch (hasSrc) {
               case "name":
-                hasSrcSet = propValue$196;
+                hasSrcSet = propValue$194;
                 break;
               case "type":
-                propValue = propValue$196;
+                propValue = propValue$194;
                 break;
               case "checked":
-                checked = propValue$196;
+                checked = propValue$194;
                 break;
               case "defaultChecked":
-                defaultChecked = propValue$196;
+                defaultChecked = propValue$194;
                 break;
               case "value":
-                propKey = propValue$196;
+                propKey = propValue$194;
                 break;
               case "defaultValue":
-                defaultValue = propValue$196;
+                defaultValue = propValue$194;
                 break;
               case "children":
               case "dangerouslySetInnerHTML":
-                if (null != propValue$196)
+                if (null != propValue$194)
                   throw Error(formatProdErrorMessage(137, tag));
                 break;
               default:
-                setProp(domElement, tag, hasSrc, propValue$196, props, null);
+                setProp(domElement, tag, hasSrc, propValue$194, props, null);
             }
         }
       initInput(
@@ -14961,8 +14585,6 @@ function setInitialProperties(domElement, tag, props) {
           }
       return;
     case "dialog":
-      listenToNonDelegatedEvent("beforetoggle", domElement);
-      listenToNonDelegatedEvent("toggle", domElement);
       listenToNonDelegatedEvent("cancel", domElement);
       listenToNonDelegatedEvent("close", domElement);
       break;
@@ -15013,14 +14635,14 @@ function setInitialProperties(domElement, tag, props) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (propValue$196 in props)
-          props.hasOwnProperty(propValue$196) &&
-            ((hasSrc = props[propValue$196]),
+        for (propValue$194 in props)
+          props.hasOwnProperty(propValue$194) &&
+            ((hasSrc = props[propValue$194]),
             void 0 !== hasSrc &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propValue$196,
+                propValue$194,
                 hasSrc,
                 props,
                 void 0
@@ -15068,14 +14690,14 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(domElement, tag, propKey, null, nextProps, lastProp);
           }
       }
-      for (var propKey$213 in nextProps) {
-        var propKey = nextProps[propKey$213];
-        lastProp = lastProps[propKey$213];
+      for (var propKey$211 in nextProps) {
+        var propKey = nextProps[propKey$211];
+        lastProp = lastProps[propKey$211];
         if (
-          nextProps.hasOwnProperty(propKey$213) &&
+          nextProps.hasOwnProperty(propKey$211) &&
           (null != propKey || null != lastProp)
         )
-          switch (propKey$213) {
+          switch (propKey$211) {
             case "type":
               propKey !== lastProp && (viewTransitionMutationContext = !0);
               type = propKey;
@@ -15110,7 +14732,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(
                   domElement,
                   tag,
-                  propKey$213,
+                  propKey$211,
                   propKey,
                   nextProps,
                   lastProp
@@ -15129,7 +14751,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       );
       return;
     case "select":
-      propKey = value = defaultValue = propKey$213 = null;
+      propKey = value = defaultValue = propKey$211 = null;
       for (type in lastProps)
         if (
           ((lastDefaultValue = lastProps[type]),
@@ -15161,7 +14783,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (name) {
             case "value":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
-              propKey$213 = type;
+              propKey$211 = type;
               break;
             case "defaultValue":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
@@ -15184,15 +14806,15 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       tag = defaultValue;
       lastProps = value;
       nextProps = propKey;
-      null != propKey$213
-        ? updateOptions(domElement, !!lastProps, propKey$213, !1)
+      null != propKey$211
+        ? updateOptions(domElement, !!lastProps, propKey$211, !1)
         : !!nextProps !== !!lastProps &&
           (null != tag
             ? updateOptions(domElement, !!lastProps, tag, !0)
             : updateOptions(domElement, !!lastProps, lastProps ? [] : "", !1));
       return;
     case "textarea":
-      propKey = propKey$213 = null;
+      propKey = propKey$211 = null;
       for (defaultValue in lastProps)
         if (
           ((name = lastProps[defaultValue]),
@@ -15217,7 +14839,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (value) {
             case "value":
               name !== type && (viewTransitionMutationContext = !0);
-              propKey$213 = name;
+              propKey$211 = name;
               break;
             case "defaultValue":
               name !== type && (viewTransitionMutationContext = !0);
@@ -15232,17 +14854,17 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               name !== type &&
                 setProp(domElement, tag, value, name, nextProps, type);
           }
-      updateTextarea(domElement, propKey$213, propKey);
+      updateTextarea(domElement, propKey$211, propKey);
       return;
     case "option":
-      for (var propKey$229 in lastProps)
+      for (var propKey$227 in lastProps)
         if (
-          ((propKey$213 = lastProps[propKey$229]),
-          lastProps.hasOwnProperty(propKey$229) &&
-            null != propKey$213 &&
-            !nextProps.hasOwnProperty(propKey$229))
+          ((propKey$211 = lastProps[propKey$227]),
+          lastProps.hasOwnProperty(propKey$227) &&
+            null != propKey$211 &&
+            !nextProps.hasOwnProperty(propKey$227))
         )
-          switch (propKey$229) {
+          switch (propKey$227) {
             case "selected":
               domElement.selected = !1;
               break;
@@ -15250,34 +14872,34 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               setProp(
                 domElement,
                 tag,
-                propKey$229,
+                propKey$227,
                 null,
                 nextProps,
-                propKey$213
+                propKey$211
               );
           }
       for (lastDefaultValue in nextProps)
         if (
-          ((propKey$213 = nextProps[lastDefaultValue]),
+          ((propKey$211 = nextProps[lastDefaultValue]),
           (propKey = lastProps[lastDefaultValue]),
           nextProps.hasOwnProperty(lastDefaultValue) &&
-            propKey$213 !== propKey &&
-            (null != propKey$213 || null != propKey))
+            propKey$211 !== propKey &&
+            (null != propKey$211 || null != propKey))
         )
           switch (lastDefaultValue) {
             case "selected":
-              propKey$213 !== propKey && (viewTransitionMutationContext = !0);
+              propKey$211 !== propKey && (viewTransitionMutationContext = !0);
               domElement.selected =
-                propKey$213 &&
-                "function" !== typeof propKey$213 &&
-                "symbol" !== typeof propKey$213;
+                propKey$211 &&
+                "function" !== typeof propKey$211 &&
+                "symbol" !== typeof propKey$211;
               break;
             default:
               setProp(
                 domElement,
                 tag,
                 lastDefaultValue,
-                propKey$213,
+                propKey$211,
                 nextProps,
                 propKey
               );
@@ -15298,24 +14920,24 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
     case "track":
     case "wbr":
     case "menuitem":
-      for (var propKey$234 in lastProps)
-        (propKey$213 = lastProps[propKey$234]),
-          lastProps.hasOwnProperty(propKey$234) &&
-            null != propKey$213 &&
-            !nextProps.hasOwnProperty(propKey$234) &&
-            setProp(domElement, tag, propKey$234, null, nextProps, propKey$213);
+      for (var propKey$232 in lastProps)
+        (propKey$211 = lastProps[propKey$232]),
+          lastProps.hasOwnProperty(propKey$232) &&
+            null != propKey$211 &&
+            !nextProps.hasOwnProperty(propKey$232) &&
+            setProp(domElement, tag, propKey$232, null, nextProps, propKey$211);
       for (checked in nextProps)
         if (
-          ((propKey$213 = nextProps[checked]),
+          ((propKey$211 = nextProps[checked]),
           (propKey = lastProps[checked]),
           nextProps.hasOwnProperty(checked) &&
-            propKey$213 !== propKey &&
-            (null != propKey$213 || null != propKey))
+            propKey$211 !== propKey &&
+            (null != propKey$211 || null != propKey))
         )
           switch (checked) {
             case "children":
             case "dangerouslySetInnerHTML":
-              if (null != propKey$213)
+              if (null != propKey$211)
                 throw Error(formatProdErrorMessage(137, tag));
               break;
             default:
@@ -15323,7 +14945,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 domElement,
                 tag,
                 checked,
-                propKey$213,
+                propKey$211,
                 nextProps,
                 propKey
               );
@@ -15331,49 +14953,49 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (var propKey$239 in lastProps)
-          (propKey$213 = lastProps[propKey$239]),
-            lastProps.hasOwnProperty(propKey$239) &&
-              void 0 !== propKey$213 &&
-              !nextProps.hasOwnProperty(propKey$239) &&
+        for (var propKey$237 in lastProps)
+          (propKey$211 = lastProps[propKey$237]),
+            lastProps.hasOwnProperty(propKey$237) &&
+              void 0 !== propKey$211 &&
+              !nextProps.hasOwnProperty(propKey$237) &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propKey$239,
+                propKey$237,
                 void 0,
                 nextProps,
-                propKey$213
+                propKey$211
               );
         for (defaultChecked in nextProps)
-          (propKey$213 = nextProps[defaultChecked]),
+          (propKey$211 = nextProps[defaultChecked]),
             (propKey = lastProps[defaultChecked]),
             !nextProps.hasOwnProperty(defaultChecked) ||
-              propKey$213 === propKey ||
-              (void 0 === propKey$213 && void 0 === propKey) ||
+              propKey$211 === propKey ||
+              (void 0 === propKey$211 && void 0 === propKey) ||
               setPropOnCustomElement(
                 domElement,
                 tag,
                 defaultChecked,
-                propKey$213,
+                propKey$211,
                 nextProps,
                 propKey
               );
         return;
       }
   }
-  for (var propKey$244 in lastProps)
-    (propKey$213 = lastProps[propKey$244]),
-      lastProps.hasOwnProperty(propKey$244) &&
-        null != propKey$213 &&
-        !nextProps.hasOwnProperty(propKey$244) &&
-        setProp(domElement, tag, propKey$244, null, nextProps, propKey$213);
+  for (var propKey$242 in lastProps)
+    (propKey$211 = lastProps[propKey$242]),
+      lastProps.hasOwnProperty(propKey$242) &&
+        null != propKey$211 &&
+        !nextProps.hasOwnProperty(propKey$242) &&
+        setProp(domElement, tag, propKey$242, null, nextProps, propKey$211);
   for (lastProp in nextProps)
-    (propKey$213 = nextProps[lastProp]),
+    (propKey$211 = nextProps[lastProp]),
       (propKey = lastProps[lastProp]),
       !nextProps.hasOwnProperty(lastProp) ||
-        propKey$213 === propKey ||
-        (null == propKey$213 && null == propKey) ||
-        setProp(domElement, tag, lastProp, propKey$213, nextProps, propKey);
+        propKey$211 === propKey ||
+        (null == propKey$211 && null == propKey) ||
+        setProp(domElement, tag, lastProp, propKey$211, nextProps, propKey);
 }
 var eventsEnabled = null,
   selectionInformation = null;
@@ -15502,15 +15124,6 @@ function clearSuspenseBoundary(parentInstance, suspenseInstance) {
   } while (node);
   retryIfBlockedOn(suspenseInstance);
 }
-function unhideInstance(instance, props) {
-  props = props.style;
-  props =
-    void 0 !== props && null !== props && props.hasOwnProperty("display")
-      ? props.display
-      : null;
-  instance.style.display =
-    null == props || "boolean" === typeof props ? "" : ("" + props).trim();
-}
 function restoreViewTransitionName(instance, props) {
   props = props.style;
   var viewTransitionName =
@@ -15536,16 +15149,32 @@ function restoreViewTransitionName(instance, props) {
   instance.style.viewTransitionClass =
     null == props || "boolean" === typeof props ? "" : ("" + props).trim();
 }
+function cancelRootViewTransitionName(rootContainer) {
+  rootContainer =
+    9 === rootContainer.nodeType
+      ? rootContainer.documentElement
+      : rootContainer.ownerDocument.documentElement;
+  null !== rootContainer &&
+    "" === rootContainer.style.viewTransitionName &&
+    ((rootContainer.style.viewTransitionName = "none"),
+    rootContainer.animate(
+      { opacity: [0, 0], pointerEvents: ["none", "none"] },
+      {
+        duration: 0,
+        fill: "forwards",
+        pseudoElement: "::view-transition-group(root)"
+      }
+    ),
+    rootContainer.animate(
+      { width: [0, 0], height: [0, 0] },
+      { duration: 0, fill: "forwards", pseudoElement: "::view-transition" }
+    ));
+}
 function restoreRootViewTransitionName(rootContainer) {
   rootContainer =
     9 === rootContainer.nodeType
-      ? rootContainer.body
-      : "HTML" === rootContainer.nodeName
-        ? rootContainer.ownerDocument.body
-        : rootContainer;
-  "root" === rootContainer.style.viewTransitionName &&
-    (rootContainer.style.viewTransitionName = "");
-  rootContainer = rootContainer.ownerDocument.documentElement;
+      ? rootContainer.documentElement
+      : rootContainer.ownerDocument.documentElement;
   null !== rootContainer &&
     "none" === rootContainer.style.viewTransitionName &&
     (rootContainer.style.viewTransitionName = "");
@@ -15632,78 +15261,8 @@ function startViewTransition(
     return !1;
   }
 }
-function mergeTranslate(translateA, translateB) {
-  if (!translateA || "none" === translateA) return translateB || "";
-  if (!translateB || "none" === translateB) return translateA || "";
-  translateA = translateA.split(" ");
-  translateB = translateB.split(" ");
-  var i,
-    result = "";
-  for (i = 0; i < translateA.length && i < translateB.length; i++)
-    0 < i && (result += " "),
-      (result += "calc(" + translateA[i] + " + " + translateB[i] + ")");
-  for (; i < translateA.length; i++) result += " " + translateA[i];
-  for (; i < translateB.length; i++) result += " " + translateB[i];
-  return result;
-}
-function animateGesture(
-  keyframes,
-  targetElement,
-  pseudoElement,
-  timeline,
-  rangeStart,
-  rangeEnd,
-  moveFirstFrameIntoViewport,
-  moveAllFramesIntoViewport
-) {
-  for (var i = 0; i < keyframes.length; i++) {
-    var keyframe = keyframes[i];
-    delete keyframe.easing;
-    delete keyframe.computedOffset;
-    "auto" === keyframe.width && delete keyframe.width;
-    "auto" === keyframe.height && delete keyframe.height;
-    "none" === keyframe.transform && delete keyframe.transform;
-    if (moveAllFramesIntoViewport && null == keyframe.transform)
-      if (null == keyframe.translate || "" === keyframe.translate) {
-        var elementTranslate = getComputedStyle(
-          targetElement,
-          pseudoElement
-        ).translate;
-        keyframe.translate = mergeTranslate(
-          elementTranslate,
-          "20000px 20000px"
-        );
-      } else
-        keyframe.translate = mergeTranslate(
-          keyframe.translate,
-          "20000px 20000px"
-        );
-  }
-  moveFirstFrameIntoViewport &&
-    ((moveFirstFrameIntoViewport = keyframes[0]),
-    (moveAllFramesIntoViewport = moveFirstFrameIntoViewport.transform),
-    null != moveAllFramesIntoViewport &&
-      (moveFirstFrameIntoViewport.transform =
-        "translate(20000px, 20000px) " +
-        ("none" === moveAllFramesIntoViewport
-          ? ""
-          : moveAllFramesIntoViewport)));
-  moveFirstFrameIntoViewport = rangeStart > rangeEnd;
-  targetElement.animate(keyframes, {
-    pseudoElement: pseudoElement,
-    timeline: timeline,
-    easing: "linear",
-    fill: "both",
-    direction: moveFirstFrameIntoViewport ? "normal" : "reverse",
-    rangeStart: (moveFirstFrameIntoViewport ? rangeEnd : rangeStart) + "%",
-    rangeEnd: (moveFirstFrameIntoViewport ? rangeStart : rangeEnd) + "%"
-  });
-}
 function startGestureTransition(
   rootContainer,
-  timeline,
-  rangeStart,
-  rangeEnd,
   transitionTypes,
   mutationCallback,
   animateCallback
@@ -15716,100 +15275,18 @@ function startGestureTransition(
       types: transitionTypes
     });
     ownerDocument.__reactViewTransition = transition;
-    var readyCallback = function () {
-        for (
-          var documentElement = ownerDocument.documentElement,
-            animations = documentElement.getAnimations({ subtree: !0 }),
-            foundGroups = new Set(),
-            foundNews = new Set(),
-            i = 0;
-          i < animations.length;
-          i++
-        ) {
-          var pseudoElement = animations[i].effect.pseudoElement;
-          null != pseudoElement &&
-            (pseudoElement.startsWith("::view-transition-group")
-              ? foundGroups.add(pseudoElement.slice(23))
-              : pseudoElement.startsWith("::view-transition-new") &&
-                foundNews.add(pseudoElement.slice(21)));
-        }
-        for (i = 0; i < animations.length; i++) {
-          var anim = animations[i];
-          pseudoElement = anim.effect;
-          var pseudoElement$254 = pseudoElement.pseudoElement;
-          if (
-            null != pseudoElement$254 &&
-            pseudoElement$254.startsWith("::view-transition")
-          ) {
-            anim.cancel();
-            var isGeneratedGroupAnim = !1,
-              isExitGroupAnim = !1;
-            if (pseudoElement$254.startsWith("::view-transition-group")) {
-              var groupName = pseudoElement$254.slice(23);
-              foundNews.has(groupName)
-                ? ((anim = anim.animationName),
-                  (isGeneratedGroupAnim =
-                    null != anim &&
-                    anim.startsWith("-ua-view-transition-group-anim-")))
-                : (isExitGroupAnim = !0);
-            }
-            animateGesture(
-              pseudoElement.getKeyframes(),
-              pseudoElement.target,
-              pseudoElement$254,
-              timeline,
-              rangeStart,
-              rangeEnd,
-              isGeneratedGroupAnim,
-              isExitGroupAnim
-            );
-            pseudoElement$254.startsWith("::view-transition-old") &&
-              ((pseudoElement$254 = pseudoElement$254.slice(21)),
-              foundGroups.has(pseudoElement$254) ||
-                foundNews.has(pseudoElement$254) ||
-                (foundGroups.add(pseudoElement$254),
-                animateGesture(
-                  [{}, {}],
-                  pseudoElement.target,
-                  "::view-transition-group" + pseudoElement$254,
-                  timeline,
-                  rangeStart,
-                  rangeEnd,
-                  !1,
-                  !0
-                )));
-          }
-        }
-        documentElement
-          .animate([{}, {}], {
-            pseudoElement: "::view-transition",
-            duration: 1
-          })
-          .pause();
-        animateCallback();
-      },
-      readyForAnimations =
-        -1 !== navigator.userAgent.indexOf("Chrome")
-          ? function () {
-              return requestAnimationFrame(readyCallback);
-            }
-          : readyCallback;
-    transition.ready.then(readyForAnimations, readyCallback);
+    var blockingAnim = null;
+    rootContainer = function () {
+      blockingAnim = ownerDocument.documentElement.animate([{}, {}], {
+        pseudoElement: "::view-transition",
+        duration: 1
+      });
+      blockingAnim.pause();
+      animateCallback();
+    };
+    transition.ready.then(rootContainer, rootContainer);
     transition.finished.then(function () {
-      for (
-        var animations = ownerDocument.documentElement.getAnimations({
-            subtree: !0
-          }),
-          i = 0;
-        i < animations.length;
-        i++
-      ) {
-        var anim = animations[i],
-          pseudo = anim.effect.pseudoElement;
-        null != pseudo &&
-          pseudo.startsWith("::view-transition") &&
-          anim.cancel();
-      }
+      null !== blockingAnim && blockingAnim.cancel();
       ownerDocument.__reactViewTransition === transition &&
         (ownerDocument.__reactViewTransition = null);
     });
@@ -16431,26 +15908,26 @@ function getResource(type, currentProps, pendingProps, currentResource) {
         "string" === typeof pendingProps.precedence
       ) {
         type = getStyleKey(pendingProps.href);
-        var styles$257 = getResourcesFromRoot(
+        var styles$250 = getResourcesFromRoot(
             JSCompiler_inline_result
           ).hoistableStyles,
-          resource$258 = styles$257.get(type);
-        resource$258 ||
+          resource$251 = styles$250.get(type);
+        resource$251 ||
           ((JSCompiler_inline_result =
             JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),
-          (resource$258 = {
+          (resource$251 = {
             type: "stylesheet",
             instance: null,
             count: 0,
             state: { loading: 0, preload: null }
           }),
-          styles$257.set(type, resource$258),
-          (styles$257 = JSCompiler_inline_result.querySelector(
+          styles$250.set(type, resource$251),
+          (styles$250 = JSCompiler_inline_result.querySelector(
             getStylesheetSelectorFromKey(type)
           )) &&
-            !styles$257._p &&
-            ((resource$258.instance = styles$257),
-            (resource$258.state.loading = 5)),
+            !styles$250._p &&
+            ((resource$251.instance = styles$250),
+            (resource$251.state.loading = 5)),
           preloadPropsMap.has(type) ||
             ((pendingProps = {
               rel: "preload",
@@ -16463,16 +15940,16 @@ function getResource(type, currentProps, pendingProps, currentResource) {
               referrerPolicy: pendingProps.referrerPolicy
             }),
             preloadPropsMap.set(type, pendingProps),
-            styles$257 ||
+            styles$250 ||
               preloadStylesheet(
                 JSCompiler_inline_result,
                 type,
                 pendingProps,
-                resource$258.state
+                resource$251.state
               )));
         if (currentProps && null === currentResource)
           throw Error(formatProdErrorMessage(528, ""));
-        return resource$258;
+        return resource$251;
       }
       if (currentProps && null !== currentResource)
         throw Error(formatProdErrorMessage(529, ""));
@@ -16569,37 +16046,37 @@ function acquireResource(hoistableRoot, resource, props) {
         return (resource.instance = instance);
       case "stylesheet":
         styleProps = getStyleKey(props.href);
-        var instance$263 = hoistableRoot.querySelector(
+        var instance$256 = hoistableRoot.querySelector(
           getStylesheetSelectorFromKey(styleProps)
         );
-        if (instance$263)
+        if (instance$256)
           return (
             (resource.state.loading |= 4),
-            (resource.instance = instance$263),
-            markNodeAsHoistable(instance$263),
-            instance$263
+            (resource.instance = instance$256),
+            markNodeAsHoistable(instance$256),
+            instance$256
           );
         instance = stylesheetPropsFromRawProps(props);
         (styleProps = preloadPropsMap.get(styleProps)) &&
           adoptPreloadPropsForStylesheet(instance, styleProps);
-        instance$263 = (
+        instance$256 = (
           hoistableRoot.ownerDocument || hoistableRoot
         ).createElement("link");
-        markNodeAsHoistable(instance$263);
-        var linkInstance = instance$263;
+        markNodeAsHoistable(instance$256);
+        var linkInstance = instance$256;
         linkInstance._p = new Promise(function (resolve, reject) {
           linkInstance.onload = resolve;
           linkInstance.onerror = reject;
         });
-        setInitialProperties(instance$263, "link", instance);
+        setInitialProperties(instance$256, "link", instance);
         resource.state.loading |= 4;
-        insertStylesheet(instance$263, props.precedence, hoistableRoot);
-        return (resource.instance = instance$263);
+        insertStylesheet(instance$256, props.precedence, hoistableRoot);
+        return (resource.instance = instance$256);
       case "script":
-        instance$263 = getScriptKey(props.src);
+        instance$256 = getScriptKey(props.src);
         if (
           (styleProps = hoistableRoot.querySelector(
-            getScriptSelectorFromKey(instance$263)
+            getScriptSelectorFromKey(instance$256)
           ))
         )
           return (
@@ -16608,7 +16085,7 @@ function acquireResource(hoistableRoot, resource, props) {
             styleProps
           );
         instance = props;
-        if ((styleProps = preloadPropsMap.get(instance$263)))
+        if ((styleProps = preloadPropsMap.get(instance$256)))
           (instance = assign({}, props)),
             adoptPreloadPropsForScript(instance, styleProps);
         hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
@@ -16940,7 +16417,7 @@ function FiberRootNode(
   this.pooledCache = null;
   this.pooledCacheLanes = 0;
   this.formState = formState;
-  this.gestureClone = this.stoppingGestures = this.pendingGestures = null;
+  this.stoppingGestures = this.pendingGestures = null;
   this.incompleteTransitions = new Map();
 }
 function createFiberRoot(
@@ -17628,16 +17105,16 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
     0 === i && attemptExplicitHydrationTarget(target);
   }
 };
-var isomorphicReactPackageVersion$jscomp$inline_1938 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_1896 = React.version;
 if (
-  "19.1.0-experimental-f9d78089-20250306" !==
-  isomorphicReactPackageVersion$jscomp$inline_1938
+  "19.1.0-experimental-eda36a1c-20250228" !==
+  isomorphicReactPackageVersion$jscomp$inline_1896
 )
   throw Error(
     formatProdErrorMessage(
       527,
-      isomorphicReactPackageVersion$jscomp$inline_1938,
-      "19.1.0-experimental-f9d78089-20250306"
+      isomorphicReactPackageVersion$jscomp$inline_1896,
+      "19.1.0-experimental-eda36a1c-20250228"
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -17657,24 +17134,24 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
     null === componentOrElement ? null : componentOrElement.stateNode;
   return componentOrElement;
 };
-var internals$jscomp$inline_2560 = {
+var internals$jscomp$inline_2441 = {
   bundleType: 0,
-  version: "19.1.0-experimental-f9d78089-20250306",
+  version: "19.1.0-experimental-eda36a1c-20250228",
   rendererPackageName: "react-dom",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: "19.1.0-experimental-f9d78089-20250306"
+  reconcilerVersion: "19.1.0-experimental-eda36a1c-20250228"
 };
 if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
-  var hook$jscomp$inline_2561 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
+  var hook$jscomp$inline_2442 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
   if (
-    !hook$jscomp$inline_2561.isDisabled &&
-    hook$jscomp$inline_2561.supportsFiber
+    !hook$jscomp$inline_2442.isDisabled &&
+    hook$jscomp$inline_2442.supportsFiber
   )
     try {
-      (rendererID = hook$jscomp$inline_2561.inject(
-        internals$jscomp$inline_2560
+      (rendererID = hook$jscomp$inline_2442.inject(
+        internals$jscomp$inline_2441
       )),
-        (injectedHook = hook$jscomp$inline_2561);
+        (injectedHook = hook$jscomp$inline_2442);
     } catch (err) {}
 }
 exports.createComponentSelector = function (component) {
@@ -17917,4 +17394,4 @@ exports.observeVisibleRects = function (
     }
   };
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom.development.js b/node_modules/react-dom/cjs/react-dom.development.js
index 97937df..cb2ed92 100644
--- a/node_modules/react-dom/cjs/react-dom.development.js
+++ b/node_modules/react-dom/cjs/react-dom.development.js
@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
     "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       "function" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom.production.js b/node_modules/react-dom/cjs/react-dom.production.js
index c7c99a2..d7db835 100644
--- a/node_modules/react-dom/cjs/react-dom.production.js
+++ b/node_modules/react-dom/cjs/react-dom.production.js
@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/cjs/react-dom.react-server.development.js b/node_modules/react-dom/cjs/react-dom.react-server.development.js
index f50a790..a23d0c9 100644
--- a/node_modules/react-dom/cjs/react-dom.react-server.development.js
+++ b/node_modules/react-dom/cjs/react-dom.react-server.development.js
@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = "19.1.0-experimental-f9d78089-20250306";
+    exports.version = "19.1.0-experimental-eda36a1c-20250228";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom.react-server.production.js b/node_modules/react-dom/cjs/react-dom.react-server.production.js
index 154715e..0aa5357 100644
--- a/node_modules/react-dom/cjs/react-dom.react-server.production.js
+++ b/node_modules/react-dom/cjs/react-dom.react-server.production.js
@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = "19.1.0-experimental-f9d78089-20250306";
+exports.version = "19.1.0-experimental-eda36a1c-20250228";
diff --git a/node_modules/react-dom/package.json b/node_modules/react-dom/package.json
index 76d5b22..3ad2d2f 100644
--- a/node_modules/react-dom/package.json
+++ b/node_modules/react-dom/package.json
@@ -1,6 +1,6 @@
 {
   "name": "react-dom",
-  "version": "0.0.0-experimental-f9d78089-20250306",
+  "version": "0.0.0-experimental-eda36a1c-20250228",
   "description": "React package for working with the DOM.",
   "main": "index.js",
   "repository": {
@@ -17,10 +17,10 @@
   },
   "homepage": "https://react.dev/",
   "dependencies": {
-    "scheduler": "0.0.0-experimental-f9d78089-20250306"
+    "scheduler": "0.0.0-experimental-eda36a1c-20250228"
   },
   "peerDependencies": {
-    "react": "0.0.0-experimental-f9d78089-20250306"
+    "react": "0.0.0-experimental-eda36a1c-20250228"
   },
   "files": [
     "LICENSE",
